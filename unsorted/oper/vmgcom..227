	SALL
	TITLE VMGCOM	GRI-909 COMMUNICATIONS REGION
	ENTRY CDMLST
	INTERN SRCTBL,DSTTBL,SFTBL,INTTBL,SUMTBL
	EXTERN STMSR,TRP,ISR,SWR,SFM
	EXTERN FOM,FOINT,FOBRK,ILLOPS,ILLOPD
	EXTERN MFETCH,MSELF,CPUDDM,STORSC,GETSC
;
;COPYRIGHT 1973, APPLIED DATA RESEARCH, PRINCETON, N.J.
;
;THE COMMUNICATIONS REGION HOLDS THE MAIN CONFIGURABLE TABLES
;FOR THE SIMULATOR:
;1. SRCTBL,DSTTBL,FOTBL,SFTBL-- INSTRUCTION EXECUTION TABLES
;2. CDMLST-- LIST OF CONTROLLERS
;3. INTTBL-- TRANSLATES PI BIT# TO VECTOR LOCATION
;4. SUMTBL-- PI LEVEL SUMMARY REGISTERS )LEVELS 15-0)
;
	DEFINE CD(FL,NM)
<IFG FL,<	EXTERN NM
	NM>>

CDMLST:	CD CPU,CPUDDM
	CD HSR,PTRDDM
	CD HSP,PTPDDM
	CD TTI,TTIDDM
	CD TTO,TTODDM
	CD LSR,LSRDDM
	CD RTC,RTCDDM
	CD DSK,DSKDDM
	CD ADC,ADCDDM
	CD DAC,DACDDM
	CD BIM,BIMDDM
	CD BOM,BOMDDM
	CD WIT1,WIT1DDM
	CD WIT2,WIT2DDM
	CD WIT3,WIT3DDM
	CD GIC1,GIC1DDM
	CD GOR1,GOR1DDM
	CD PID,PIDDDM
	Z



	IOP=PUSHJ P,@ILLPTR	;ILLEGAL OPERATOR
	NOOP=JFCL 0,0	;NULL OPERATOR

ILLPTR:	ILLOPS	;DUE TO LOADER FUCK-UP.
GFPTR:	GFETCH
IL1PTR:	ILLOPD
IFN MUX,<	EXTERN MUXCHL
MUXPTR:	POINT 5,MUXCHL,35>
;
;GRI-909 COMMUNICATIONS REGION, PAGE 2
;CONDITIONAL EXECUTE TABLES.
;SRCTBL:	FETCH OR JUMP TO SOURCE OPERATOR
;DSTTBL:	STORE OR JUMP TO DESTINATION OPERATOR
;SFTBL:		SENSE FUNCTION TABLE
;FOTBL:		FUNCTION OUT TABLE.
;
SRCTBL:	CLEAR BR,	;0= NULL
	HRRZ BR,IR	;1= IR
	XCT ,FOTBL(D)	;2= FUNCTION GENERATOR
	HRRZ BR,TRP	;3= TRP
	HRRZ BR,ISR	;4= ISR
	HRRZ BR,MA	;5= MA
	JRST MFETCH	;6= MEMORY
	JRST GETSC	;7= SC
	HRRZ BR,SWR	;10= SWR
	REPEAT 6,<	IOP>	;11-16 ARE OPTIONS
	HRRZ BR,MSR	;17= MSR
	REPEAT 60,<	IOP>	;20-77 ARE OPTIONS

	IOP=PUSHJ P,@IL1PTR
;
DSTTBL:	NOOP	;0-1 = NULL
	NOOP
	HALT	;2= SF (SHOULD NOT GET HERE!)
	HRRZM BR,TRP	;3= TRP (IF S=06)
	HRRZM BR,ISR	;4= ISR
	NOOP	;5= MA
	JRST MSELF	;6= MEMORY
	JRST STORSC	;7= SC
	NOOP	;10= SWR
	REPEAT 6,<	IOP>	;11-16 ARE OPTIONS
	JRST STMSR	;17= MSR
	REPEAT 60,<	IOP>	;20-77 ARE OPTIONS
;
;GRI-909 COMMUNICATIONS REGION, PAGE 3
;
SFTBL:	JRST SFM	;0= MACHINE
	REPEAT 10,<	NOOP>	;1-10 CANNOT BE SENSED.
	REPEAT 6,<	IOP>	;11-16 ARE OPTIONS
	NOOP	;17= MSR
	REPEAT 60,<	IOP>	;20-77 ARE OPTIONS
;
	EXTERN GFETCH
	NOF=AOJA SC,@GFPTR
FOTBL:	AOJA SC,FOM	;0= MACHINE, INCREMENT SC FIRST
	AOJA SC,FOBRK	;1= BKPT, INCREMENT SC FIRST
	NOF
	NOF	;2-3
	JRST FOINT	;4= INTERRUPTS
	REPEAT 73,<	NOF>	;5-77 ARE OPTIONS

	XWD 0,0		;PSEUDO VECTOR FOR POWER FAIL.
INTTBL:	REPEAT FLTMSK,<0>	;VECTOR TABLE
;
SUMTBL:	REPEAT ^D16,<0>	;PI LEVELS, 15-0
;
;GRI-909 COMMUNICATIONS REGION, PAGE 4
;OPTIONS AND DEVICES, CONDITIONAL ASSEMBLY

	DEFINE RDT(NM,II)
<IFG NM,<	RELOC SRCTBL+NM'A
	II>>

	DEFINE WRT(NM,II)
<IFG NM,<	RELOC DSTTBL+NM'A
	II>>

	DEFINE INT(NM,ALT)
<IFG NM,<	RELOC INTTBL+NM'BIT
IFB <ALT>,<	NM'I>
IFNB <ALT>,<	XWD ALT,NM'I>
	INTERN NM'MLV,NM'LVL
NM'MLV==1B<^D35-NM'B>	;DEFINE PI LEVEL AS MASK
NM'LVL==SUMTBL+^D15-NM'B	;DEFINE PI REGISTER
>>

	DEFINE SFT(NM,NME,II)
<IFG NM,<	RELOC SFTBL+NME'A
	II>>

	DEFINE FOT(NM,NME,II)
<IFG NM,<	RELOC FOTBL+NME'A
	II>>

;BYTE SWAPPER AND PACKER:

	RDT BSW,<	HRRZ BR,BSWR##>
	RDT BPK,<	HRRZ BR,BPKR##>
	WRT BSW,<	JRST SWAPR##>
	WRT BPK,<	JRST PACKR##>

;ARITHMETIC OPERATOR:

	RDT AO,<	HRRZ BR,AX##
	HRRZ BR,AY##
	JRST RDAO##>
	WRT AO,<	JRST STAX##
	JRST STAY##
	NOOP>
	SFT AO,2+AO,<	XCT SFATBL##(XR)>
	FOT AO,2+AO,<	JRST FOA##>

;EXTENDED ARITHMETIC OPERATOR:

	FOT EAO,EAO,<	JRST FOEAO##>

;GENERAL REGISTERS:

	RDT GR,<	EXTERN GPR
	HRRZ BR,GPR+0
	HRRZ BR,GPR+1
	HRRZ BR,GPR+2
	HRRZ BR,GPR+3
	HRRZ BR,GPR+4
	HRRZ BR,GPR+5>

	WRT GR,<	HRRZM BR,GPR+0
	HRRZM BR,GPR+1
	HRRZM BR,GPR+2
	HRRZM BR,GPR+3
	HRRZM BR,GPR+4
	HRRZM BR,GPR+5>

;MODEL 99 EXTRA FEATURES

	RDT M99,<	HRRZ BR,GRIXR##
	HRRZ BR,TRP>
	WRT M99,<	HRRZM BR,GRIXR
	HRRZM BR,TRP>
;
;GRI-909 COMMUNICATIONS REGION, PAGE 5
;DEVICES AND OPTIONS, CONTINUED

;TTI/TTO:

	RDT TTI,<	HRRZ BR,TTIUCB##+UBUF>
	WRT TTO,<	PUSHJ P,TTOWR##>
	INT TTI
	INT TTO
	FOT TTI+TTO,TTI,<	AOJA SC,FOTT##>
	SFT TTI+TTO,TTI,<	JSP R,SFTTBL##>

;HSR/HSP:

	RDT HSR,<	HRRZ BR,PTRUCB##+UBUF>
	WRT HSP,<	PUSHJ P,PTPWR##>
	INT HSR
	INT HSP
	SFT HSR+HSP,HSR,<	JSP R,SFPTBL##>
	FOT HSP-HSR,HSP,<	AOJA SC,PTRNX##>
	FOT HSR,HSR,<	AOJA SC,FOPT##>

;RTC:

	SFT RTC,RTC,<	JSP R,SFRTC##>
	FOT RTC,RTC,<	AOJA SC,FORTC##>
	INT RTC

;DSK:

	RDT DSK,<	HRRZ BR,DSKWCT##
	HRRZ BR,DSKCAR##
	PUSHJ P,DSK70R##>

	WRT DSK,<	HRRZM BR,DSKWCT
	HRRZM BR,DSKCAR
	PUSHJ P,DSK70W##>

	INT DSK
	SFT DSK,2+DSK,<	JSP R,SFDSK##>
	FOT DSK,2+DSK,<	HRRZM IR,DSKSLCT##>

;ADC/MUX/DAC:

	RDT MUX,<	HRRZ BR,MUXCHL>
	WRT MUX,<	DPB BR,MUXPTR>
	RDT DAC,<	HRRZ BR,DACUCB##+UBUF>
	WRT DAC,<	PUSHJ P,DACWR##>
	INT ADC
	RDT ADC,<	HRRZ BR,ADCBUF##>
	WRT ADC,<	NOOP>
	SFT ADC,ADC,<	JSP R,SFADCT#>
	FOT ADC,ADC,<	AOJA SC,FOADC##>

;GRI-909 COMMUNICATIONS REGION, PAGE 6
;DIGITAL I/O DEVICES
;
;BOM/BOM
;
	RDT BIM,<	PUSHJ P,RDBIM##>
	WRT BIM,<	NOOP>
	SFT BIM,BIM,<	NOOP>
	FOT BIM,BIM,<	AOJA SC,FOBIM##>
	RDT BOM,<	NOOP>
	WRT BOM,<	PUSHJ P,WRBOM##>
	SFT BOM,BOM,<	NOOP>
	FOT BOM,BOM,<	AOJA SC,FOBOM##>
;
;WATCHDOG/INTERVAL TIMERS
;
	DEFINE WITT(N)	;DEFINE CONNECTIONS FOR WIT'N'
<	RDT WIT'N,<	HRRZ BR,WIT'N'CT##>
	WRT WIT'N,<	HRRZM BR,WIT'N'CT>
	INT WIT'N
	SFT WIT'N,WIT'N,<	JSP R,SFWIT'N##>
	FOT WIT'N,WIT'N,<	AOJA SC,FOWIT'N##>
>

	DO (MWIT,WITT)	;SET UP ALL CONNECTIONS
;
;GATED INPUT CARDS
;
	DEFINE GICT(N)	;DEFINE CONNECTIONS FOR GIC'N
<	RDT GIC'N,<	HRRZ BR,GIC'N'UCB##+UBUF>
	WRT GIC'N,<	NOOP>
	INT GIC'N
	SFT GIC'N,GIC'N,<	JSP R,SFGIC'N##>
	FOT GIC'N,GIC'N,<	AOJA SC,FOGIC'N##>
>

	DO (MGIC,GICT)	;SET UP ALL CONNECTIONS
;
;GENERAL OUTPUT REGISTERS
;
	DEFINE GORT(N)	;DEFINE CONNECTIONS FOR GOR'N
<	RDT GOR'N,<	HRRZ BR,GOR'N'UCB##+UBUF>
	WRT GOR'N,<	PUSHJ P,WRGOR'N##>
	INT GOR'N
	SFT GOR'N,GOR'N,<	JSP R,SFGOR'N##>
	FOT GOR'N,GOR'N,<	AOJA SC,FOGOR'N##>
>

	DO (MGOR,GORT)	;SET UP ALL CONNECTIONS
;
;PULSE INPUT DETECTOR
;
IFN PID,<	EXTERN PIDINT
	INTERN PIDLVL,PIDMLV
	PIDLVL==SUMTBL+^D15-PID1B
	PIDMLV==1B<^D35-PID1B>
	RELOC INTTBL+PID1BIT
REPEAT ^D8,<	XWD  PIDINT,PID1I>
>
	END
