	TITLE REDWRT - MIMIC I/O SERVICE ROUTINES
	HISEG
	SUBTTL WRTINT - ARBITRARY RADIX INTEGER OUTPUT


	INTERN	WRTNOL
	INTERN WRTVAL,WRTINT
	EXTERN	WRTTXT
	EXTERN	DMPCHR,DIGCNT
	INTERN REDINT
	INTERN WRTNAM
	INTERN REDNAM
	INTERN	REDSTR
	INTERN WRTADR,REDADR
	EXTERN	NOLEAD,LEADER
	EXTERN	ABSSPC,DIGTST
	EXTERN	SMGR		;TO KEEP P.MAC HAPPY

AC=10
AC1=11
AC2=12
MASK=13	;MASK+1 MUST BE AVAILABLE!!!!!
DIGITS=6	;DIGITS MUST NOT CONFLICT WITH CIO!
NAM=14

TEST=16
STK=17

	PAGE
;
;WRTINT OUTPUTS THE INTEGER IN VALUE
;MASKED BY AN NBIT-WIDE MASK, WITH REPRESENTATION
;APPROPRIATE TO RADIX
;
;AFTER COMPUTING A DIGIT'S VALUE,
;THE CHARACTER CODE IS GENERATED BY THE FOLLOWING MAPPING -
;OCTAL DIGIT VALUE	REPRESENTATION	ASCII CODE	TRANSFORMATION
; 0 - 11		 0 - 9		 60 - 71	 +60
;12 - 43		 A - Z		101 - 132	 +67
;DIGITS GREATER THAN 43 (FOR RADICES GREATER THAN 43)
;CANNOT BE REPRESENTED, AND CAUSE UNFLAGGED GARBAGE IN THE OUTPUT
;
WRTNOL:	AOSA	,NOLEAD		;TURN ON NO LEADER FLAG
WRTINT:	SETZM	,NOLEAD		;TURN OFF NO LEADER FLAG
	MOVEI	DIGITS,1	;SET UP INITIAL DIGIT WIDTH OF OUTPUT
	MOVEI	MASK,1		;START WITH 2^0
	LSH	MASK,@NBITS	;COMPUTE 2^NBITS
	MOVEM	MASK,DIGTST	;SAVE FOR DIGIT WIDTH COMPUTATION
	SUBI	MASK,1		;2^NBITS -1 IS NBIT WIDE MASK
	AND	MASK,VALUE	;MASK GETS VALUE TO BE CONVERTED
	MOVE	TEST,NRADIX	;NOW COMPUTE DIGIT WIDTH OF OUTPUT
TSTDIG:	CAML	TEST,DIGTST	;IS LARGEST REPRESENTABLE NUMBER BIG ENOUGH?
	JRST	,SETDIV		;YES, HAVE ENOUGH DIGITS TO DISPLAY MASKED VALUE
	IMUL	TEST,NRADIX	;NO,GO TO NEXT LARGEST REPRESENTABLE NUMBER
	AOJA	DIGITS,TSTDIG	;WHICH REQUIRES ONE MORE DIGIT
	SETZM	,DIGCNT		;READY TO GO, INITIALIZE COUNT OF CONVERTED DIGITS
;
SETDIV:	MOVE	MASK+1,MASK	;GET CURRENT VALUE
	TLZN	MASK+1,400000	;HIGH ORDER BIT SET?  (CLEAR IT)
	TDZA	MASK,MASK	;YES, CLEAR 36TH BIT
	MOVEI	MASK,1		;NO, SET 36TH BIT
NXTDIV:	DIV	MASK,NRADIX	;CONVERT VALUE BY DIVIDING BY RADIX
	CAILE	MASK+1,11	;REMAINDER (IN NEXT AC) IS DIGIT
	ADDI	MASK+1,7	; 12 - 43  = A - Z , ADD 67 TO CONVERT
	ADDI	MASK+1,60	;  0 - 11  = 1 - 9 , ADD 60 TO CONVERT
	PUSH	STK,MASK+1	;SAVE THE DIGIT ON THE STACK
	AOS	,DIGCNT		;COUNT THE DIGIT
	JUMPN	MASK,SETDIV	;GO FOR NEXT DIGIT (IF ANY LEFT)
TSTLDR:	SKIPN	,NOLEAD	;IS LEADER WANTED?  IF SO,
	CAMG	DIGITS,DIGCNT	;SEE IF ANY LEADING CHARACTERS NEEDED
	JRST	,DIGOUT		;NO, GO AHEAD WITH OUTPUT
	PUSHJ	STK,DMPCHR	;THEY ARE WANTED... CHECK FOR DUMP.
	OUTCHR	,LEADER		;YES, OUTPUT THE LEADER CHARACTER
	SOJA	DIGITS,TSTLDR	;ACCOUNT FOR OUTPUT CHARACTER
;
DIGOUT:	POP	STK,AC1		;LEADER TAKEN CARE OF, OUTPUT DIGITS
	PUSHJ	STK,DMPCHR	;CHECK FOR DUMP
	OUTCHR	,AC1
	SOSE	,DIGCNT		;COUNT THE OUTPUT DIGIT
	JRST	,DIGOUT
	POPJ	STK,		;ALL DIGITS OUTPUT, RETURN
;
	PAGE
	SUBTTL VERIFY AND CONVERT ARBITRARY RADIX INTEGER INPUT

REDINT:	SETZB	MASK,VALUE	;ZERO VALUE 
	MOVE	AC,SMPTR
	MOVEM	AC,SMSAVE	;SAVE SYNTAX STRING POINTER IN CASE OF FAIL
	PUSHJ	STK,ABSSPC	;ABSORB SPACES IN INPUT STRING
	MOVE	AC1,NRADIX	;SET UP RADIX BOR COMPUTATION OF VAUE
	LDB	AC,SMPTR	;GET A CHARACTER
	PUSHJ	STK,CNVINT	;CONVERT TO CORRESPONDING INTEGER VALUE
	POPJ	STK,		;NOT A LEGAL DIGIT CHARACTER, FAIL
CNTDIG:	CAML	AC,NRADIX	;IS DIGIT OK UNDER THIS RADIX?
	JRST	,RSTRET		;NO, FAIL (RATHER THAN TERMINATE)
	MUL	MASK,NRADIX	;MAKE ROOM FOR DIGIT
	JCRY0	.+1		;CLEAR ADDITION CARRY FLAG
	ADD	MASK+1,AC	;ADD IN DIGIT
	JCRY0	.+2		;OVERFLOW?
	ADDI	MASK,1		;YES, PROPAGATE TO HIGH ORDER RESULT
	SOJGE	MASK,BITS36	;ANYTHING IN HIGH ORDER RESULT?
	MOVE	MASK,MASK+1	;NO, RESULT IS IN MASK
	ILDB	AC,SMPTR	;GET NEXT CHARACTER
	PUSHJ	STK,CNVINT	;CONVERT TO CORRESPONDING INTEGER VALUE
	JRST	,.+2		;NOT A LEGAL DIGIT,INTEGER TERMINATED
	JRST	,CNTDIG		;OK,GO DO IT
STORST:	MOVEM	MASK,VALUE	;STORE RESULT
	MOVEI	AC2,1		;START WITH 2^0
	LSH	AC2,@NBITS	;COMPUTE 2^NBITS
	SUBI	AC2,1		;2^NBITS -1 IS NBIT-WIDE MASK
	ANDCA	AC2,VALUE	;SEE IF ANY BITS SET BEYOND MASK
	JUMPE	AC2,GOODRT	;IF NOT, TAKE GOOD EXIT.
RSTRET:	MOVE	AC,SMSAVE	;RESTORE SYNTAX STRING POINTER TO VALUE ON ENTRY
	MOVEM	AC,SMPTR
	POPJ	STK,		;AND TAKE NONSKIP RETURN

CNVINT:	CAIGE	AC,20		;CODES 0-17 NONALPHANUMERIC
	POPJ	STK,		;SO REJECT THEM
	CAIG	AC,31		;CODES 20 - 31 NUMERIC
	JRST	,CODNUM		;THEREFORE ACCEPT THEM
	CAIL	AC,41		;CODES 41 - 72 ALPHABETIC
	CAILE	AC,72
	POPJ	STK,		;EITHER SIDE OF ALPHA REJECTED
	SUBI	AC,7		;SUB 27 TO CONVERT ALPHA TO VALUE
CODNUM:	SUBI	AC,20		;SUB 20 TO CONVERT NUMERIC
GOODRT:	AOS	,0(STK)		;YES, TAKE SKIP RETURN
	POPJ	STK,
;
BITS36:	JUMPN	MASK,RSTRET	;DID WE GET MORE THAN 36 BITS?
	MOVE	MASK,MASK+1	;NO, GET VALUE,
	TLO	MASK,400000	;SET HIGH ORDER BIT
	JRST	,STORST		;GO STORE RESULT AND EXIT
	PAGE
	SUBTTL OUTPUT AN ADDRESS

WRTADR:	MOVE	AC,FRMNUM	;GET FRAME NUMBER
	MOVEM	AC,VALUE
WRTVAL:	MOVE	AC,CONADR	;GET CONTROLLER ADDRESS
	MOVE	AC,DADR(AC)	;GET FRAME ADDRESS OUTPUT PARAMETERS FROM CDM
	HLRZM	AC,NRADIX	;SET UP OUTPUT RADIX
	HRRZM	AC,NBITS	;AND FIELD SIZE
	JRST	WRTNOL		;AND OUTPUT IT

REDADR:	MOVE	AC,CONADR	;GET CONTROLLER ADDRESS
	MOVE	AC,DADR(AC)	;GET FRAME ADDRESS INPUT PARAMETERS FROM CDM
	HLRZM	AC,NRADIX	;SET UP INPUT RADIX
	HRRZM	AC,NBITS	;AND FIELD SIZE
	JRST	REDINT		;GO INPUT AN INTEGER.
	PAGE

	SUBTTL VERIFY A NAME

REDNAM:	PUSHJ STK,ABSSPC	;ABSORB ANY LEADING SPACES.
	CLEAR NAM,	;CLEAR WORK REGISTER.
	MOVE AC1,[POINT 6,NAM]	;SET UP POINTER INTO WORK REGISTER.
	MOVE AC,SMPTR	;SAVE INITIAL POINTER FOR POSSIBLE
	MOVEM AC,SMSAVE	;LATER RESTORATION.
	LDB AC,SMPTR	;GET NEXT CHARACTER.
CHRALP:	CAIL AC,'A'	;IS THE CHARACTER IN THE RANGE A-Z?
	CAILE AC,'Z'
	JRST ENDNAM	;NO, MUST BE END OF NAME.
NXTCHR:	TRNN NAM,000077	;CHARACTER OK, IS THE NAME ALREADY FULL.
	IDPB AC,AC1	;NO, STORE CHARACTER IN NAME.
	ILDB AC,SMPTR	;GET NEXT CHARACTER.
CHKALL:	CAIL AC,'0'	;IS IT NUMERIC?
	CAILE AC,'9'
	JRST CHRALP	;NO, GO CHECK FOR ALPHANUMERIC.
	JRST NXTCHR	;YES, GO STORE IT.

;NOTE THAT WE NEED NOT SAVE OR RESTORE SMPTR:  AFTER 1ST CHARACTER,
;THERE IS NO POSSIBLITY OF AN ERROR.

REDSTR:	PUSHJ STK,ABSSPC	;READ STRING... ABSORB LEADING SPACES.
	CLEAR NAM,	;CLEAR WORK REGISTER.
	MOVE AC1,[POINT 6,NAM]	;SET UP BYTE POINTER.
	MOVE AC,SMPTR	;SAVE SMPTR.
	MOVEM AC,SMSAVE
	LDB AC,SMPTR	;GET FIRST CHARACTER.
	JRST CHKALL	;ALLOW IT TO BE NUMERIC OR ALPHA.

ENDNAM:	MOVEM NAM,NAME	;STORE BUILT NAME IN OUTPUT WORD.
	JUMPN NAM,GOODRT	;IF ANYTHING BUILT, TAKE SKIP RETURN.
	POPJ STK,	;NOTHING FOUND, EXIT.
	PAGE
	SUBTTL OUTPUT A NAME

WRTNAM:	MOVEI	AC,NAME
	MOVEM	AC,TXTADR	;SET UP ADDRES OF OUTPUT STIRN
	SETZM	,NAME+1		;MAKE SURE NAME+1 IS 0 TO TERMINATE 6 CHARACTER NAME
	PJRST	,WRTTXT		;CALL OUTPUT ROUTINE



	END
