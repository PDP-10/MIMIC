	SUBTTL INPUT, OUTPUT, AND SUPPORT ROUTINES

;OUTPUT--OUTPUT RESULT OF ASSEMBLY PROCESS.
;INPUTS INCLUDE:
;$CRFNO CREF LINE#
;CURLOC CURRENT ASSEMBLER LOCATION
;WORD1 FIRST WORD OF OUTPUT
;WORD2 SECOND WORD OF OUTPUT (IN ANY)
;RELEVANT FLAGS (RIGHT HALF OF AF):
;QLOC	PRINT LOCATION COUNTER
;QVAL	PRINT WORD1 DATA
;QCREF	PRINT CREF LINE#
;QTWO	PRINT WORD2 DATA
;QPUN	PUNCH WORD1 DATA (WORD2 IS ALWAYS PUNCHED IF PRESENT)
;QLIN	PRINT LINE BUFFER
;QINF	PRINT WORD1 IN INSTRUCTION FORM

OUTPUT:	TLNE F,QPASS1		;ARE WE IN PASS2?
	JRST PASS1X	;NO, GO INCREMENT CURLOC.
	TLZN AF,QFF	;FORM FEED SEEN IN THIS LINE?
	JRST .+3	;NO.
	PRC FFEED	;YES, PRINT IT BEFORE ANYTHING ELSE.
	TLNE F,QCREF		;ARE WE IN CREF MODE?
	TRNN AF,QLIN		;YES, IS THERE AN INPUT LINE.
	JRST NOCREF		;NO CREF OR NO LINE, JUMP.
	MOVE ARG,$CRFNO		;OTHERWISE, PRINT CREF LINE#
	PUSHJ P,PRCREF
NOCREF:	TRNE AF,ALLERR		;ANY ERRORS?
	PUSHJ P,PRERRS		;YES, PRINT THEM.
	PRC "	"		;TAB OVER
	TRNN AF,QLOC		;AND CHECK FOR LOCATION FIELD PRINT

	JRST  NOLOCN		;IF NOT SPECIFIED, DONT PRINT.
	MOVE ARG,CURLOC		;OTHERWISE, PRINT AS 6 DIGIT OCTAL
	PUSHJ P,PROCTR		;INTEGER, WITH RELOCATION.

NOLOCN:	PRC "	"		;TAB OVER.
	TRNN AF,QVAL		;PRINT VALUE FIELD?
	JRST NODATA		;NO, SKIP
	MOVE ARG,WORD1		;YES, GET WORD1.
	TRNE AF,QPUN		;PUNCH IT?
	PUSHJ P,PUNCH		;YES.
	PUSHJ P,PROCTR		;IN ANY CASE, PRINT AS 6 DIGIT INTEGER.
NODATA:	PRC "	"		;TAB OVER. INSTRUCTION MODE FLAG SET?
	TRNE F,QNOINF	;FIRST, CHECK TO SEE IF INSTRUCTION MODE
	JRST NOTABS	;TYPEOUT SUPPRESSED COMPLETELY.
	TRNN AF,QINF		;IF NOT, TAB OVER TWICE.
	JRST NOINS
	PRC "("			;PRINT OPENING PARENTHESIS.
	LDB ARG,SRCPTR		;PRINT SOURCE AS 2 DIGIT OCTAL NUMBER
	PUSHJ P,PROCT2
	PRC " "			;SPACE OVER AND
	LDB ARG,MODPTR		;PRINT MOD FIELD AS 4 DIGIT BINARY NUMBER
	PUSHJ P,PRBIN4
	PRC " "			;SPACE OVER AND
	LDB ARG,DSTPTR		;PRINT DESTINATION FIELD AS 2 DIGIT OCTAL
	PUSHJ P,PROCT2		;INTEGER.
	PRC ")"			;CLOSE OFF SPECIAL PRINT.
	JRST INSFM		;TAB OVER ONCE.
NOINS:	PRC "	"		;IF NO INSTRUCTION, TAB OVER TWICE.
INSFM:	PRC "	"
NOTABS:	TRNN AF,QLIN	;IS THERE A LINE OF INPUT TO PRINT?
	JRST NOLINE	;NO, GO TYPE CR,LF.




;PAGE 2

;GRI-909 ASSEMBLER, PART C, PAGE 2

;OUTPUT ROUTINE CONTD.

PRLINE:	SKIPN $SQNUM		;PRINT LINE... ANY SEQUENCE NUMBER?
	JRST NOSEQN		;NO.
	MOVEI ARG,$SQNUM	;YES, PRINT IT WITH A
	PUSHJ P,$WRLIN		;TRAILING TAB.
	PRC "	"

NOSEQN:	MOVEI AC,0		;PREPARE APTR INTO THE BUFFER.
	SKIPN ARG,LINBUF(AC)	;NEXT CHARACTER ZERO?
	JRST CHKTWO		;YES, DONE.
	PUSHJ P,$WRCHR		;WRITE CHARACTER, ADVANCE TO NEXT.
	AOJA AC,NOSEQN+1

NOLINE:	PUSHJ P,WRCRLF		;IF NO INPUT, PUT OUT CR-LF.
CHKTWO:	TLZ F,QERROR		;CLEAR ERROR
	TRZN AF,QTWO		;FLAG AND CHECK FOR TWO LINE CONDITION.
	POPJ P,			;EXIT IF SINGLE LINE.
	PRC "	"		;SECOND LINE ALWAYS CONSISTS OF LOCATION
	MOVE ARG,CURLOC		;AND NORMAL DATA.
	PUSHJ P,PROCTR
	PRC "	"
	MOVE ARG,WORD2		;WORD2 IS ALWAYS PUNCHED AS WELL AS PRINTED.
	PUSHJ P,PUNCH
	PUSHJ P,PROCTR
	JRST NOLINE		;GO DO CR-LF. TWOLINE FLAG HAS BEEN CLEARED,
				;SO WE WILL EXIT AUTOMATICALLY.

PRERRS:	TLO F,QERROR		;ERRORS PRESENT... SET ERROR IN LINE FLAG.
	MOVSI AC1,-ERCNT	;SET UP POINTER/COUNTER TO ERRTBL.
ROTERR:	HRRZ AC,ERRCHR(AC1)	;GET NEXT ERROR MASK.
	TDZN AF,AC		;IS CORRESPONDING ERROR BIT SET IN AF?
	JRST CLOOPR		;NO, GO ON TO NEXT.
	HLRZ ARG,ERRCHR(AC1)	;YES, GET CORRESPONDING CHAR
	PUSHJ P,$WRCHR		;AND PRINT IT.
	AOS ,$ERCNT	;INCREMENT MASTER ERROR COUNT.
CLOOPR:	AOBJN AC1,ROTERR	;ADVANCE PTR/CNTR. DONE?
WRTFLG:
CPOPJ:	POPJ P,			;YES, EXIT.

ERRCHR:	"W",,QEERR
	">",,QTMERR
	"<",,QTFERR
	"U",,QUERR
	"A",,QXERR
	"S",,QSERR
	"D",,QDERR
	"M",,QMERR
	"X",,QXTERR
	"R",,QRERR
	"N",,QNERR
	"P",,QPERR
	ERCNT=.-ERRCHR






PASS1X:	TRNN AF,QPUN	;DURING PASS 1:  ANYTHING TO PUNCH?
	POPJ P,	;NO, EXIT.
	AOS ,CURLOC	;YES, ADVANCE AT LEAST ONE LOCATION.
	TRZE AF,QTWO	;TWO WORDS TO PUNCH?
	AOS ,CURLOC	;YES, INCREMENT AGAIN.
	POPJ P,	;EXIT.
;GRI-909 ASSEMBLER, PART C, PAGE 3

;INTEGER OUTPUT ROUTINES. ALL BASICALLY USE "WRTINT" TO
;PUT OUT VARIOUS FORMATS AND RACIDES. WRTINT HAS THREE
;PARAMETERS:	NRADIX:	RADIX
;NBITS:	BIT WIDTH
;LEADER:	LEADING SPACE/ZERO CHARACTER
	EXTERN NRADIX,NBITS,WRTINT,WRTNOL, VALUE,LEADER
	EXTERN $CRFNO,$ERCNT

PROCT2:	MOVEI AC2,6		;2 OCTAL DIGITS:	BIT WIDTH IS 6.
	JRST PROCTL
	INTERN PRSYMB
PROCT6:	MOVEI AC2,^D16		;6 OCTAL DIGITS:	WIDTH IS 16 BITS.
PROCTL:	MOVEI AC1,^D8		;RADIX IS 8.
PRSTD:	MOVEI AC,"0"		;FILL CHARACTER IS ZERO.
PRSTO:	MOVEM AC2,NBITS		;STORE BIT WIDTH.
	MOVEM AC1,NRADIX	;STORE RADIX.
	MOVEM AC,LEADER		;STORE FILL CHARACTER.
	MOVEM ARG,VALUE		;STORE ARGUMENT.
	PJRST WRTINT		;GO PUT OUT WITH LEADING CHARACTERS.

PRBIN4:	MOVEI AC2,4		;4 BINARY DIGITS:	WIDTH 4
	MOVEI AC1,2		;RADIX 2
	JRST PRSTD		;GO PRINT

PRCREF:	MOVEI AC2,^D16		;CREF NUMBERS ARE
	MOVEI AC1,^D10		;16 BITS, BASE 10, WITH LEADING SPACES.
	MOVEI AC," "
	JRST PRSTO		;GO PRINT






PRSYMB:
PROCTR:	HLRZM ARG,SAVNAM	;SAME RELOCATION FLAG FOR LATER.
	PUSHJ P,PROCT6	;PRINT 6 OCTAL DIGITS.
	HRRZ AC,SAVNAM	;RECOVER RELOCATION FLAG.
	SKIPE ARG,CHRTB+RELBAS(AC)	;GET REL. CHAR FOR FLAG.
	PJRST $WRCHR	;GO PRINT CHARACTER.
	POPJ P,	;IF NONE, RETURN.
CHRTB:	"-"	;-1, NEG. REL
	Z	;0, ABSOLUTE, NO PRINT
	"'"	;1, RELOCATABLE.
;PAGE 4
;PAGE 5

;GRI-909 ASSEMBLER, PART C, PAGE 5

;SYMBOL TABLE ROUTINES.
;SINSRT-- INSERT SYMBOL. CALLED BY
;	MOVE ARG,SYMBLK ;SYMBOL ARCHETYPE BLOCK IS ARGUMENT.
;	PUSHJ P,SINSRT

;LOOKUP-- LOOK UP SYMBOL, CALLED BY
;	MOVE ARG,SYMBOL
;	PUSHJ P,LOOKUP	;LOOK UP SYMBOL
;	...	;NOT FOUND
;	...	;FOUND, ARG POINTS AT SYMBOL BLOCK.
;BOTH LOOKUP AND SINSRT HAVE BEEN MOVED TO AN EXTERNAL MODULE.

	EXTERN SINSRT,LOOKUP
;PAGE 6

;GRI-909 ASSEMBLER, PART C, PAGE 6

;GTCHRS-- GET CHARACTER SUBROUTINE.  THIS ROUTINE DOES INTERNAL
;LINE BUFFERING SO THAT WE CAN PROCESS THE UNUSUAL GRI-909

GTCHRS:	SKIPE T,BUFPTR		;IS THE BUFFER POINTER ZERO?
FCHR:	SKIPN CHR,(T)		;NO, IS THE CHARACTER OBTAINED ZERO?
	JRST NEWLIN		;YES, GET A NEW LINE.
	MOVEM CHR,CHAR	;NO, SAVE CHARACTER.
	AOS ,BUFPTR	;INCREMENT POINTER AND EXIT.
	POPJ P,

RUBOUT:	SOJG AC,NXTCHR		;RUBOUT FUNCTION (): IF LINE ALREADY EMPTY.
				;GET A NEW CHARACTER.
NEWLIN:	TDZA AC,AC	;CLEAR PTR INTO LINE BUFFER AND SKIP.
SETFFF:	TLO AF,QFF	;FORM FEED... SET FLAG AND IGNORE.
NXTCHR:	PUSHJ P,$RDCHR		;GET A CHARACTER.
	JRST NOINPT		;NONE PRESENT, SET "END" FLAG.
	CAIN ARG,LNFEED	;IS CHARACTER LINE FEED?
	JRST NXTCHR	;YES, IGNORE IT.
	CAIN ARG,FFEED	;IS CHARACTER FORM FEED?
	JRST SETFFF	;YES, GO SET FLAG AND IGNORE IT.
	CAIN ARG,177	;IS CHARACTER RUBOUT?
	JRST NEWLIN	;YES, KILL CURRENT LINE.
	CAIE ARG,033	;IS THE CHARACTER ANY VARIETY OF ALTMODE?
	CAIN ARG,175
	JRST NXTCHR	;YES, IGNORE IT.
	CAIGE AC,LINMAX
	MOVEM ARG,LINBUF(AC)	;NEITHER, SAVE CHAR IN LINE BUFFER.
	CAIE ARG,CRTN	;END OF LINE (CARRIAGE RETURN)?
	AOJA AC,NXTCHR		;NO, GO TO NEXT CHARACTER.
	MOVEM ARG,LINBUF(AC)	
	MOVEI ARG,LNFEED	;INSERT LINE FEED AFTER CARRIAGE
	MOVEM ARG,LINBUF+1(AC)	;RETURN ON ACCOUNT OF SOS.
	SETZM ,LINBUF+2(AC)	;ZERO NEXT CHARACTER.
	AOS ,$CRFNO	;INCREMENT LINE NUMBER, SINCE WE ARE
			;NOT USING STANDARD $RDLIN ROUTINE.
	MOVEI T,LINBUF	;RESET BUFFER POINTER
	MOVEM T,BUFPTR		;TO START OF BUFFER
	JRST FCHR		;AND GO GET A CHARACTER.

NOINPT:	TLO AF,QEND		;NO INPUT FOUND... SET END FLAG.
	SETZB CHR,CHAR		;RETURN ZERO AS OUTPUT
	TLNE F,QPASS1		;IF PASS1, OUTPUT NASTY MESSAGE.
	OUTSTR NOENDM
	POPJ P,

NOENDM:	ASCIZ /?NO END STATEMENT FOUND
/


;PAGE 7

;GRI-909 ASSEMBLER, PART C, PAGE 7

;VARIABLES AND DATA STRUCTURES.
	SUBTTL VARIABLES AND DATA STRUCTURES
	INTERN $DFSRC,$DFBIN,$USRSW,$NAME,$VRSN,$TITLE,IPCODE
$DFSRC:	SIXBIT /GRI/
$DFBIN:	SIXBIT /GRL/
IFN GRI99,<
$NAME:	ASCIZ /GRI-99 MIMIC ASSEMBLER/
IPCODE:	^D314
>
IFE GRI919+GRI99,<
$NAME:	ASCIZ /GRI-909 MIMIC ASSEMBLER/
IPCODE:	^D313
>
IFN GRI919,<
$NAME:	ASCIZ /GRI-919 MIMIC ASSEMBLER/
IPCODE:	^D320
>

	DEFINE SW(A,B)
<	ASCIZ /A/
	B>

$USRSW:	SW INF,<TRZ F,QNOINF>	;/INF = ALLOW INSTRUCTION FORM
	SW -INF,<TRO F,QNOINF>	;/-INF = SUPPRESS INSTRUCTION FORM
	Z
MODPTR:	POINT 4,WORD1,29
SRCPTR:	POINT 6,WORD1,25
DSTPTR:	POINT 6,WORD1,35
PMDPTR:	POINT 2,WORD1,27
RHBYTE:	POINT 8,WORD1,35
LHBYTE:	POINT 8,WORD1,27
CNDPTR:	POINT 3,WORD1,28
	LIT
	RELOC 0
UDFBLK:	BLOCK 1	;UNDEFINED SYMBOL ARCHETYPE
	177777	;VALUE IS INITIALLY ABSOLUTE -1.
	XWD QUNV,0
	BLOCK 1	;NO CREF LINKS

PUNPSN:	BLOCK 1	;BUFFER POSITION POINTER.
PNBFST:	BLOCK 1	;PUNCH BUFFER HEADER
PUNSUM:	BLOCK 1	;CHECKSUM
PUNCNT:	BLOCK 1	;ITEM COUNT
PUNBUF:	BLOCK ^D96	;BUFFER SHOULD BE MULTIPLE OF 6 WORDS
	PUNMAX=.-PUNBUF

TGR:	;CLEARED CORE AREA.
CHAR:	BLOCK 1
TRMCR:	BLOCK 1
OLDLOC:	BLOCK 1
CURLOC:	BLOCK 1
WORD1:	BLOCK 1
WORD2:	BLOCK 1
BUFPTR:	BLOCK 1

LINBUF:	BLOCK ^D120
	LINMAX=.-LINBUF-10

TGREND:	BLOCK 1
LEXLST:	BLOCK 1	;LOCAL EXTERN LIST HEADER
LEXPTR:	BLOCK 1	;LOCAL EXTERN LIST POINTER
MEXLST:	BLOCK 1	;MASTER EXTERN LIST HEADER
MEXPTR:	BLOCK 1	;MASTER EXTERN LIST POINTER
LOCBLK:	BLOCK 1	;ALLOCATED BLOCK LIST
SAVNAM:	BLOCK 1	;TEMPORARY (VERY).
PRADIX:	BLOCK 1
$TITLE:	BLOCK ^D26
$SUBTT:	BLOCK ^D26
	END
