	SALL
	TWOSEG
	RELOC 400000
	TITLE GRIRAS	GRI-909/99/919 RELOCATING ASSEMBLER
	SUBTTL PRELIMINARY ASSEMBLER DEFINITIONS
;	R.M. SUPNIK, 9/8/71
;THIS ASSEMBLER DUPLICATES THE FUNCTIONING OF THE SO-CALLED
;BASIC ASSEMBLER FOR THE GRI-909 AND GRI-919.  IT COMES IN TWO VERSIONS:
;VERSION 1:  NON-RELOCATING
;VERSION 1.1:	REVISED, SIMPLIFIED OPCODE SCANNING
;VERSION 1.2:	REVISED BINARY OPCODE SEARCH ALGORITHM
;VERSION 1.3:	ALTERNATE SYMBOL TABLE FOR GRI-919
;VERSION 1.4:	^ AS XOR OPERATOR AND SWITCHES FOR GRI-99
;VERSION 2:	RELOCATING
;VERSION 2.1:	REVISED TO SUPPRESS EMPTY DICTIONARY BLOCKS AND
;		TO ADD " AND _ ADVANCED FEATURES
;VERSION 2.2:	REVISED TO CATCH RELOCATION ERRORS ON SINGLE-TERM
;		EXPRESSIONS.
;VERSION 2.3:	REVISED TO CORRECT RELOCATION ERRORS ON * AND /
;		TO ADD GR DEFINITIONS AND TO ALLOW IMPLICIT DECIMALS
;THIS IS MOST DEFINITELY
;
$VRSN:	ASCIZ /V2.3/
;
IFNDEF GRI99,<	GRI99=0>	;SWITCH FOR -99 FEATURES
IFNDEF GRI919,<	GRI919=0>	;SWITCH FOR -919 OPCODES
;
;THE ASSEMBLER IS OF THE GARDEN VARIETY TWO PASS TYPE.  IT IS RUN
;AS A SUB-JOB UNDER THE STANDARD MIMIC ASSEMBLER SUB-EXECUTIVE.
;FOR USAGE NOTES, SEE THE OUTSIDE WORLD.
;
;ACCUMULATOR DEFINITIONS:

	F=0	;EXEC FLAGS
	AF=1	;ASSEMBLER FLAGS
	P=17	;LOCATION PUSHDOWN POINTER
	COMMA=2	;COMMA COUNT FOR STATEMENT
	FLGS==COMMA	;FLAG REGISTER FOR ENTRY PUNCHING
	ARG=13	;ARGUMENT REGISTER
	EXPVAL=3	;OUTPUT OF EXPRESSION ANALYZER
	CHR=4	;OUTPUT OF "GETCHR" COMMAND
	AC=5	;TEMPORARIES
	AC1=6
	NAME=7	;OUTPUTS OF "GETNAM" AND "GETNUM"
	NUM=7
	AC2=10
	AC3=11
	AC4=12
	T=14	;TEMPORARIES
	T1=15
	T2=16

	FFEED=014	;FORM FEED ASCII CODE
	LNFEED=012	;LINE FEED ASCII CODE
	CRTN=015	;CARRIAGE RETURN ASCII CODE


	ENTRY $PASS1,$PASS2
	INTERN $USRSW,$TITLE,$SUBTTL,$NAME,$VRSN
	EXTERN ALLOC,NXTSYM,INITNX,$RDCHR,$WRCHR,$WRWRD
	EXTERN CREF,DCREF
	EXTERN $WRLIN,$SQNUM,WRCRLF
	EXTERN EOASMB,INITST
	EXTERN $CRFNO,$ERCNT
	INTERN PRSYMB,WRTFLG
;GRI-909/99/919 ASSEMBLER, PART A, PAGE 1A
;SOME INTRODUCTORY REMARKS ON RELOCATION AND LINKAGE.
;RELOCATION INFORMATION IS CARRIED AROUND AS PART OF THE
;SYMBOL VALUE OR LOCATION COUNTER VALUE, IN THE FOLLOWING
;FORMAT:
;BITS 0-17	RELOCATION FLAG (-1=NEG REL, 0=ABS, +1=POS REL)
;BITS 20-35	VALUE
;HENCE RELOCATION FLAGS RANGE FROM -1 TO +1, MODULO
;18.  THE LOWEST RELOCATION FLAG DEFINES THE OFFSET FOR INDEXING:
	RELBAS=1	;ABS VALUE OF LOWEST REL FLAG.
;
;EXTERNAL INFORMATION IS CARRIED AROUND IN THE SYMBOL
;TABLE AND THE SPECIAL EXTERNAL LISTS.  IN THE SYMBOL
;TABLE, ANY UNVALUED SYMBOL IS TREATED AS AN EXTERNAL.  ITS
;INITIAL VALUE IS 177777;  THIS VALUE IS REPLACED BY LOCATIONS
;OF CHAINED EXTERN REFERENCES.  AT THE END OF ASSEMBLY, THE
;EXTERN SYMBOL'S VALUE IS A POINTER TO THE MOST RECENT REFERENCE.
;
;EXTERNAL ARITHMETIC REFERENCES ARE CHAINED ONTO SPECIAL LIST
;MEXLST (MASTER EXTERN LIST), DEFINED BY TWO VARIABLES:
; MEXLST POINTS TO FIRST BLOCK (0 IF NONE)
; MEXPTR POINTS TO LAST BLOCK
;AN EXTERNAL REFERENCE BLOCK IS VERY SIMILAR TO A SYMBOL BLOCK,
;EXCEPT THAT ALL DISPLACEMENTS MUST BE AUGMENTED BY SYMBOL
;LINK, WHICH ACCOUNTS FOR THE LINK WORD.
	LINK=1
;BLOCK FORMAT:
;WORD LINK	LINK TO NEXT BLOCK (0 IF LST)
;WORD SYMN+LINK	SYMBOL NAME
;WORD SYMV+LINK	SYMBOL VALUE
;WORD SYMF+LINK	FLAGS (LEFT)
;
;EXTERN REFERENCES ARE BUILT ON A SPECIAL LOCAL EXTERN LIST
;DEFINED BY VARIABLES LEXLST AND LEXPTR.  AT THE END OF EXPRESSION
;ANALYSIS, THESE REFERENCES ARE EITHER CHAINED ONTO THE MASTER LIST,
;OR, IF THERE WAS ONLY 1, MERGED INTO THE CORE REFERENCE CHAIN.
;IN THE LATTER CASE, THE SINGLE EXTERN BLOCK IS DEALLOCATED BY
;RECORDING ITS LOCATION IN "LOCBLK".  THIS BLOCK WILL BE REUSED
;BEFORE ANY NEW BLOCKS ARE ALLOCATED.  THIS IMPLIES THAT THERE
;CAN NEVER BE MORE THAN ONE ALLOCATED BUT UNUSED BLOCK.
;
;A DATA WORD WHICH IS INDEXED IS MARKED BY HAVING BIT 18 SET TO 1.
;THIS BIT IS USED ONLY BY THE PUNCH ROUTINES AND IS ELSEWHERE IGNORED.

;FLAGS IN GRI-COMPATIBLE SYMBOL BLOCK

	GRIENT=100000	;ENTRY
	GRIREL=040000	;RELOCATABLE
	GRIPLS=020000	;+ EXTERN REF
	GRIMIN=010000	;- EXTERN REF
;GRI-909 ASSEMBLER, PART A, PAGE 2
;ASSEMBLER FLAGS, RIGHT HALF OF "AF"

	QLOC=400000	;PRINT FLAGS:  PRINT LOC. CNTR
	QVAL=200000	;PRINT "WORD1"
	QINF=100000	;PRINT "WORD1" IN INSTRUCTION FORM
	QTWO=040000	;PRINT "WORD2"
	QLIN=020000	;PRINT INPUT LINE
	QPUN=010000	;PUNCH "WORD1"

	QPERR=004000	;ERROR FLAGS:  PHASE
	QMERR=002000	;MULTIPLY DEFINED SYMBOL
	QDERR=001000	;RADIX ERROR
	QSERR=000400	;SYNTAX
	QXERR=000200	;EXTENDED FEATURE
	QUERR=000100	;UNDEFINED SYMBOL OR OPCODE
	QTFERR=000040	;TOO FEW EXPRESSIONS
	QTMERR=000020	;TOO MANY EXPRESSIONS
	QEERR=000010	;EXPRESSION ERROR
	QXTERR=000004	;EXTERN ERROR
	QRERR=000002	;RELOCATION ERROR
	QNERR=000001	;ENTRY ERROR

;NOTE THAT A NUMBER OF FLAGS HAVE BEEN ALLOCATED DIFFERENT
;MEANINGS IN THE RELOCATABLE VERSION OF GRIASM:
;ERROR		BASIC	RELOCATING
;EXPRESSION	E	W
;ADVANCED	X	A

;ASSEMBLER FLAGS, LEFT HALF OF "AF":

	QEND=400000	;"END" STATEMENT SEEN
	QFF=100000	;FORM FEED SEEN?
	QINDEX=040000	;EXPRESSION IS INDEXED.
	QSIMPL=020000	;EXPRESSION ANALYZER FLAGS: SIMPLE
	QEMPTY=010000	;EMPTY
	QRELON=004000	;RELOCATION PERMITTED
	QXTNON=002000	;EXTERNS PERMITTED
	QNYDAT=001000	;ANY ENTRIES IN DICTIONARY
	QXTNFR=000400	;EXTERN FREE EXPRESSION


;NOTE THAT LEFT HAND FLAGS ARE "PERMANENT", WHILE RIGHT HAND FLAGS
;ARE CLEARED AT THE START OF EACH LINE.

	ALLERR=007777	;MASKS ALL ERROR FLAGS


;PERMANENT (PSEUDO-EXEC) FLAGS, RIGHT-HALF OF F:

	QNOINF=000004	;SUPPRESS INSTRUCTION FORM IN LISTING.
;GRI-909 ASSEMBLER, PART A, PAGE 3
;USEFUL MACROES

	DEFINE WSIX(A)
<	MOVE ARG,A
	PUSHJ P,PRSIX>

	DEFINE CPY(A,B)
<	MOVE T,A
	MOVEM T,B>

	DEFINE GTEXP	;GET ADDRESS-WORD EXPRESSION
<	PUSHJ P,EVALXP
	TRO AF,QEERR>

	DEFINE GTREXP	;GET RELOCATABLE EXPRESSION, NO EXTERNS
<	PUSHJ P,EVLREL
	TRO AF,QEERR>

	DEFINE GTAEXP(A)	;GET ABSOLUTE EXPRESSION
<	PUSHJ P,EVLABS
	TRO AF,QEERR
IFNB <A>,<	DPB EXPVAL,A>>

	DEFINE CHNXT(A)	;CHECK FOR SUFFICIENT COMMAS
<	SOJL COMMA,A
	GETCHR>

	BFINIT=JSP T2,INDCNT	;INITIALIZE PUNCH BUFFER
	BFCNVT=JSP T2,BUFCVT	;CONVERT DATA ITEM TO 3 BYTE
				;FORMAT AND INSERT IN PUNCH BUFFER
	BFINST=JSP T2,BUFINS	;INSERT DATA ITEM IN PUNCH BUFFER
	RAD50C=JSP T2,RAD50S	;RADIX 50 CONVERSION


	DEFINE PRC(A)
<	MOVEI ARG,A
	PUSHJ P,$WRCHR>

	DEFINE MCH(A)
<	MOVE CHR,CHAR
	CAIE CHR,A>

	DEFINE MCHR(A)
<	MOVE CHR,CHAR
	CAIN CHR,A>

	ABS=PUSHJ P,ABSORB	;ABSORB SPACES
	GETCHR=PUSHJ P,GTCHRS	;GET NEXT CHARACTER
	GETNAM=PUSHJ P,GTNAMS	;GET SYMBOL
	GETNUM=PUSHJ P,GTNUMS	;GET INTEGER
	OPDEF FAIL [JRST]	;DEFINE FAILURE ALTERNATE

	DEFINE ADVCHK(A)
<	TRNN F,QADVF
	JRST A
	TRNE F,QNADV
	TRO AF,QXERR>
;GRI-909 ASSEMBLER, PART A, PAGE 4
;INITIALIZATION ROUTINES.

$PASS1:	SETZM ,$TITLE	;AT START OF PASS1, CLEAR TITLE AND SBTTL
	SETZM ,$SUBTTL	;BUFFERS.
	PUSHJ P,INITST	;INITIALIZE THE FREE STORAGE MECHANISM.
	PUSHJ P,INITSM	;INITIALIZE THE SYMBOL TABLE.
	JRST CMPASS	;GO TO COMMON CODE.

$PASS2:	PUSHJ P,PENTDC	;DURING PASS2, PUNCH ENTRY DICTIONARY.
CMPASS:	SETZB AF,TGR	;CLEAR FLAGS, TEMPORARY CORE.
	MOVE T,[XWD TGR,TGR+1]
	BLT T,TGREND
	MOVEI T,^D8	;INITIALIZE PREVAILING RADIX TO 8.
	MOVEM T,PRADIX
	HRLZI T,1	;SET CURLOC/OLDLOC TO 1/0 TO INDICATE
	MOVEM T,CURLOC	;ORIGIN IS RELOCATABLE ZERO.
	MOVEM T,OLDLOC
	MOVEI ARG,03	;INITIALIZE PUNCH BUFFER FOR DATA PUNCHING.
	PUSHJ P,INDBBF
	PUSHJ P,PROCESS	;PROCESS THE INPUT.
	TLZN AF,QEND	;END STATEMENT FOUND?
	JRST .-2	;NO, GO DO ANOTHER LINE.
	TLNE F,QPASS1	;ARE WE IN PASS1? YES,
	POPJ P,	;EXIT.
	PUSHJ P,OTPDAT	;NO, END OF ASSEMBLY.  OUTPUT THE REMAINING
	PUSHJ P,PEXTDC	;PART OF THE DATA BUFFER, PLUS THE EXTERN
		;DICTIONARY, PLUS THE ARITHMETIC EXPRESSION
	MOVEI ARG,02	;LIST, AND AN
	PUSHJ P,$WRWRD	;"02" TO MARK END OF TAPE.
	PUSHJ P,PUNLDR	;PUNCH SOME LEADER JUST TO BE SAFE.
	PUSHJ P,EOASMB	;OUTPUT SYMBOL TABLE AND CREF TABLES
	POPJ P,		;EXIT.


INITSM:	MOVEI T,LEXLST	;INITIALIZE THE MASTER AND LOCAL EXTERN
	MOVEM T,LEXPTR	;LISTS.  THE "PTR" VARIABLE POINTS
	MOVEI T,MEXLST	;AT HEAD OF LIST;  THE HEAD OF LIST POINTS
	MOVEM T,MEXPTR	;AT ZERO.
	SETZM ,LEXLST	;ALL LISTS ARE EMPTY.
	SETZM ,MEXLST
	SETZM ,LOCBLK
	MOVEI AC1,0	;INITIALIZE SYMBOL TABLE... CLEAR PTR TO
INITSL:	SKIPN ,PSYMTB+SYMN(AC1)	;SYMBOLS.  GET CURRENT ONE.
	POPJ P,	;IF NAME IS ZERO, DONE, EXIT.
	MOVEI ARG,PSYMTB(AC1)	;OTHERWISE, COMPUTE ADDRESS OF
	PUSHJ P,SINSRT	;THIS ARCHETYPE AND INSERT IT.
	HALT		;**KLUDGE**
	ADDI AC1,SYMLNT-1	;GO TO NEXT ARCHETYPE
	JRST INITSL	;AND CHECK FOR END OF TABLE.
;GRI-909 ASSEMBLER, PART A, PAGE 5
;PERMANENT SYMBOL TABLE.
;
	DEFINE PS(NM,VAL,RT)
<	SIXBIT /NM/
	VAL
	XWD QINS,^D'RT
>

	DEFINE PO(NM,RT)
<	SIXBIT /NM/
	0
	XWD QDIR+QUNV,RT
>

PSYMTB:	PS ADD,0,0
	PS AND,4,0
	PS AO,13,0
	PS AOV,2,0
	PS AX,11,0
	PS AY,12,0
	PS BOV,2,0
	PS CLIF,10,0
	PS CLL,1,0
	PS CLOF,2,0
	PS CML,3,0
IFN GRI919,<
	PS ETY,4,0
>
	PS ETZ,2,0
	PS GEZ,5,0
	PS GR1,30,0
	PS GR2,31,0
	PS GR3,32,0
	PS GR4,33,0
	PS GR5,34,0
	PS GR6,35,0
IFN GRI919,<
	PS GR7,36,0
	PS GR8,37,0
>
	PS GTZ,7,0
	PS HLT,4,0
	PS HSP,76,0
	PS HSR,76,0
	PS ICF,1,0
	PS ICO,2,0
	PS IRDY,10,0
	PS ISR,4,0
	PS L1,2,0
	PS LEZ,6,0
	PS LNK,4,0
IFN GRI919,<
	PS LTY,10,0
>
	PS LTZ,4,0
	PS MSR,17,0
	PS NEZ,3,0
	PS NOT,1,0
	PS OR,14,0
	PS ORDY,2,0
	PS P1,1,0
	PS POK,10,0
	PS R1,3,0
	PS SC,7,0
	PS SOV,4,0
IFN GRI919,<
	PS STK,21,0
>
	PS STL,2,0
	PS STRT,1,0
	PS SWR,10,0
IFE GRI919+GRI99,<
	PS TRP,3,0
>
IFN GRI919+GRI99,<
	PS TRP,23,0
>
	PS TTI,77,0
	PS TTO,77,0
	PS XOR,10,0
IFN GRI919+GRI99,<
	PS XR,22,0
>
	Z
;GRI-909 ASSEMBLER, PART A, PAGE 6
;OPCODE TABLE:

	DEFINE PSX(NM,VAL,RT)
<	SIXBIT /NM/
	XWD ^D'RT,VAL>

	DEFINE POX(NM,RT)
<	SIXBIT /NM/
	XWD RT,0>


IFE GRI919,<
OPTBL:	PSX ADD,4013,0
	PSX AND,4413,0
	POX ASC,PASC
	PSX ATL,37400,0
	PSX BTL,37000,0
	PSX CLB,400,0
	PSX CLL,4100,0
	PSX CML,4300,0
	POX DECIM,PDECIM
	POX EJECT,PEJECT
	POX END,PEND
	POX ENTRY,PENTRY
	POX EOT,CPOPJ
	POX EXTRN,PEXTRN
	PSX FO,4000,1
	PSX FOA,4013,2
	PSX FOI,4004,2
	PSX FOM,4000,2
	PSX HLT,4400,0
	PSX ICF,4104,0
	PSX ICO,4204,0
	PSX JC,3,4
	PSX JCD,103,4
	PSX JN,37203,5
	PSX JND,37303,5
	PSX JO,37003,5
	PSX JOD,37103,5
	PSX JU,403,5
	PSX JUD,503,5
	POX LIST,PLIST
	POX LOC,PLOC
	PSX MR,14000,11
	PSX MRD,14100,11
	PSX MRI,14200,11
	PSX MRID,14300,11
	PSX MS,14006,12
	PSX MSD,14106,12
	PSX MSI,14206,12
	PSX MSID,14306,12
	POX NLIST,PNLIST
	PSX NOP,0,0
	POX OCTAL,POCTAL
	PSX OR,5413,0
	POX PKB,PPKB
	POX REL,PREL
	PSX RM,6,9
	PSX RMD,106,9
	PSX RMI,206,9
	PSX RMID,306,9
	PSX RR,0,6
	PSX RRC,200,6
	PSX RS,0,8
	PSX RSC,200,8
	POX SBTTL,PSBTTL
	PSX SF,2,3
	PSX SFA,26002,2
	PSX SFM,2,2
	PSX SKP,102,0
	PSX STB,600,0
	PSX STL,4200,0
	POX TITLE,PTITLE
	POX WRD,PWRD
	PSX XOR,5013,0
	PSX ZM,6,10
	PSX ZMD,106,10
	PSX ZMI,206,10
	PSX ZMID,306,10
	PSX ZMS,17,0
	PSX ZR,0,7
	PSX ZRC,200,7
OPTEND:	377777777777

>
;GRI-909/919 ASSEMBLER, PAGE 6A
;ALTERNATE OPCODE TABLE FOR GRI-919
;
IFN GRI919,<
OPTBL:	PSX ADD,4013,0
	PSX AND,4413,0
	POX ASC,PASC
	PSX ATL,37400,0
	POX BLK,PBLK
	PSX BR,54000,11
	PSX BS,54026,12
	PSX BTL,37000,0
	PSX CLB,400,0
	PSX CLL,4100,0
	PSX CMB,5000,0
	PSX CML,4300,0
	POX CON,PWRD
	PSX CRR,200,6
	PSX CRS,200,8
	PSX CZR,200,7
	POX DECIM,PDECIM
	PSX DWR,50300,11
	PSX DWS,50324,12
	POX EJECT,PEJECT
	POX END,PEND
	POX ENTRY,PENTRY
	POX EOT,CPOPJ
	POX EXTRN,PEXTRN
	PSX FO,4000,1
	PSX FOA,4013,2
	PSX FOI,4004,2
	PSX FOM,4000,2
	PSX HLT,4400,0
	PSX ICF,4104,0
	PSX ICO,4204,0
	PSX IWR,14300,11
	PSX IWS,14306,12
	PSX JC,3,4
	PSX JCT,103,4
	PSX JF,37203,5
	PSX JFT,37303,5
	PSX JO,37003,5
	PSX JOT,37103,5
	PSX JU,403,5
	PSX JUT,503,5
	POX LIST,PLIST
	POX LOC,PLOC
	PSX MWR,14200,11
	PSX MWS,14206,12
	PSX NBR,54100,11
	PSX NBS,54126,12
	PSX NDBR,54200,11
	PSX NDBS,54226,12
	PSX NDWR,50200,11
	PSX NDWS,50224,12
	PSX NIBR,54300,11
	PSX NIBS,54326,12
	PSX NIWR,14100,11
	PSX NIWS,14106,12
	POX NLIST,PNLIST
	PSX NOP,0,0
	PSX NRR,100,6
	PSX NRS,100,8
	PSX NWR,50100,11
	PSX NWS,50124,12
	POX OCTAL,POCTAL
	PSX OR,5413,0
	POX PKB,PPKB
	PSX RB,26,9
	PSX RDW,324,9
	POX REL,PREL
	PSX RIW,306,9
	PSX RMW,206,9
	PSX RNB,126,9
	PSX RNDB,226,9
	PSX RNDW,224,9
	PSX RNIB,326,9
	PSX RNIW,106,9
	PSX RNR,300,6
	PSX RNW,124,9
	PSX RR,0,6
	PSX RS,0,8
	PSX RW,6,9
	POX SBTTL,PSBTTL
	PSX SF,2,3
	PSX SFA,26002,2
	PSX SFI,10002,2
	PSX SFM,2,2
	PSX SKP,102,0
	PSX STB,600,0
	PSX STL,4200,0
	POX TITLE,PTITLE
	PSX WR,14000,11
	PSX WS,14006,12
	PSX XOR,5013,0
	PSX XRW,24,9
	PSX XWR,50000,11
	PSX XWS,40024,12
	PSX XZW,24,10
	PSX ZB,26,10
	PSX ZDW,324,10
	PSX ZIW,306,10
	PSX ZMS,17,0
	PSX ZMW,206,10
	PSX ZNB,126,10
	PSX ZNDB,226,10
	PSX ZNDW,224,10
	PSX ZNIB,326,10
	PSX ZNIW,106,10
	PSX ZNR,300,7
	PSX ZNW,124,10
	PSX ZR,0,7
	PSX ZW,6,10
OPTEND:	377777777777
>
;GRI-909 ASSEMBLER, PART A, PAGE 7
;PROCESS A LINE ROUTINE.

PROCESS:	HRRI AF,QLIN	;CLEAR ALL LINE LOCAL FLAGS.
	TLZ F,QERROR	;CLEAR THE "ERROR LIN LINE" FLAG.

LBLRTN:	GETCHR		;"PRIME" ALL THE SCANNERS.
	ABS		;ABSORB LEADING SPACES.
	GETNAM		;GET A SYMBOL OF SOME VARIETY.
	JUMPE NAME,STORWD	;NOT FOUND, TRY FOR A STORAGE WORD SYMBOL.
	ABS		;FOUND, ABSORB TRAILING SPACES.


	MCHR ":"	;DID THE NAME END IN :?
	JRST PLABEL	;YES, A LABEL
	CAIN CHR,"="	;NO, IN =?
	JRST PEQUIV	;YES, A DIRECT ASSIGNMENT.

	PUSHJ P,EVLIN1	;GO EVALUATE AN INSTRUCTION.
PROCLN:	PUSHJ P,DOTAIL	;GO CLEAN UP AFTERWARDS.
	PUSHJ P,OUTPUT	;OUTPUT THE RESULTS.
	POPJ P,		;EXIT TO CALLER.
;GRI-909 ASSEMBLER, PART A, PAGE 8
;ROUTINES TO HANDLE
;  SYMBOL:
;  SYMBOL=
;ENTERED WITH SYMBOL NAME IN "NAME"

PLABEL:	TRO AF,QLOC	;SET FLAG TO FORCE PRINTINGOF LOCN FIELD.
	MOVE ARG,NAME	;GET SYMBOL NAME AND LOOK IT UP.
	PUSHJ P,LOOKUP	;BRANCH IF NOT FOUND.
	JRST NOTFND
	MOVE AC,SYMF(ARG)	;FOUND, GET FLAGS.
	TLZE AC,QUNV	;UNDEFINED (CLEAR FLAG IF SO)?
	JRST NOTDFN	;YES, GO DEFINE IT.
	TLNE F,QPASS1	;DEFINED.  ARE WE IN PASS 1?
	JRST MERROR	;YES, TOO BAD, MULTIPLY DEFINED.
	MOVE AC,SYMV(ARG)	;PASS 2.  VALUE SAME AS PASS 1 VALUE?
	CAMN AC,CURLOC	;MUST MATCH BOTH VALUE AND MODE.
	JRST CRLBL	;OK.
PERROR:	TROA AF,QPERR	;NO MATCH, PHASE ERROR, SET FLAG AND SKIP.
MERROR:	TRO AF,QMERR	;MULTIPLY DEFINED, SET FLAG.
	JRST CRLBL	;GO CREF.

NOTFND:	PUSHJ P,MAKUND	;NOT FOUND, CREATE SYMBOL ENTRY.
	SETZ AC,	;CLEAR ALL SYMBOL FLAGS.
NOTDFN:	TLO AC,QLBL	;FOUND BUT UNDEFINED, SET LABEL FLAG.
	HLLM AC,SYMF(ARG)	;STORE FLAGS IN SYMBOL TABLE ENTRY.
	MOVE AC,CURLOC	;VALUE AND MODE ARE V/M OF LOCATION COUNTER.
	MOVEM AC,SYMV(ARG)
CRLBL:	TLNN F,QPASS1	;ARE WE IN PASS 2?
	PUSHJ P,DCREF	;YES, GO CREF.
	JRST LBLRTN	;GO FINISH PROCESSING STATEMENT.

PEQUIV:	TRO AF,QVAL	;EQUIVALENCE.  FORCE PRINTING OF VALUE.
	MOVEM NAME,SAVNAM	;SAVE SYMBOL NAME.
	GETCHR		;ADVANCE OVER = SIGN.
	GTREXP		;GET RELOCATABLE EXPRESSION, NO EXTERNS.
	MOVEM EXPVAL,WORD1	;SAVE FOR PRINTING.
	MOVE NAME,SAVNAM	;RESTORE NAME OF ORIG. SYMBOL.
	MOVE ARG,NAME	;LOOK UP THE SYMBOL TO BE DEFINED.
	PUSHJ P,LOOKUP
	JRST NOTEQV	;NOT FOUND, PUNT.
	MOVE AC,SYMF(ARG)	;FOUND, GET FLAGS.
	TLZE AC,QUNV	;UNDEFINED?
	JRST NOTEQD	;YES, GO DEFINE IT.
	TLNE AC,QINS+QEQV	;DEFINED, CAN IT BE REDEFINED?
	JRST REDEFN	;YES, GO REDEFINE IT.
MEQVVR:	TRO AF,QMERR	;NO, MULTIPLY DEFINED ERROR.
	JRST PROCLN	;IGNORE REDEFINITION.

NOTEQV:	PUSHJ P,MAKUND	;NON-EXISTANT, CREATE SYMBOL ENTRY.
	SETZ AC,	;CLEAR ALL FLAGS.
NOTEQD:	TLO AC,QEQV	;SET EQV FLAG.
	HLLM AC,SYMF(ARG)	;STORE NEW FLAGS.
REDEFN:	MOVEM EXPVAL,SYMV(ARG)	;STORE NEW VALUE.
	TLNN F,QPASS1	;IF IN PASS 2, CREF THIS REFERENCE.
	PUSHJ P,DCREF
	JRST PROCLN	;GO PROCESS REST OF LINE.
;GRI-909 ASSEMBLER, PART A, PAGE 9
;STORAGE WORD EXPRESSION

STORWD:	PUSHJ P,EVALXP	;EVALUATE EXPRESSION.
	JRST PROCLN	;NONE FOUND, GO DO REST OF LINE.
	MOVEM EXPVAL,WORD1	;PUT OUT THE VALUE OF THE EXPRESSION
	TRO AF,QVAL+QPUN+QLOC	;SET PRINT/PUNCH FLAGS
	JRST PROCLN	;GO DO REST OF LINE.
