	TITLE DUMP	DUMP TRANSCEIVERS FOR MIMIC RELEASE II
	HISEG

	EXTERN SYSLSP,COMTXT,ACTOUT
	INTERN DMPCHR,DUMPF,DUMPR
	EXTERN WRTTXT,SMGR,.WRITE,MIMREN
	EXTERN WRTNAM,WRTADR,WRTVAL
	EXTERN CIOFAIL,LDFAIL,DMPUCB
	EXTERN GETREG,WRTREG,GETFRM,WRTFRM

	DEFINE DUMP(QQQ)
<	MOVEI AC,QQQ
	PUSHJ STK,DMPSTR>

	STK=17	;PUSHDOWN POINTER
	AC=4
	AC1=10	;AC ASSIGNMENTS

	BOTTOM=SVAL	;SM GENERAL REGISTER ASSIGNMENTS
	WDCNTR=SMSK
	DMPVAL=SCHVAL
	LINKNT=SBOOL
	PGKNT=SRELN
;
;DUMP, PAGE 2
;
DUMPR:	PUSHJ STK,NEWLIN	;BEFORE DUMPING, CHECK FOR END OF PAGE.
	MOVE AC1,REGADR	;DUMP REGISTER... GET REG ADDRESS.
	MOVE AC1,RNAM(AC1)	;GET THE REG NAME FROM THE RDB.
	MOVEM AC1,NAME	;DUMP THE NAME.
	PUSHJ STK,WRTNAM
	DUMP REGSTR	;DUMP "/TAB" DELIMITER.
	PUSHJ STK,GETREG	;GET REGISTER VALUE
	PUSHJ STK,WRTREG	;AND DUMP IT.
EOGPX:	PUSHJ STK,DMPCR	;DUMP LINE TERMINATOR AND
	AOS ,0(STK)	;TAKE SKIP RETURN.
	POPJ STK,
;
REGSTR:	SIXBIT +/&+	;MIMIC SIXBIT FOR SLASH TAB
PGTXT:	SIXBIT +PAGE"+
CR4LF:	SIXBIT +#$$$$+
HEDTXT:	SIXBIT +"MIMIC"V2"""+
SPACES:	SIXBIT +""""+	;SPACES
MCONT:	SIXBIT +"CONTAIN"+
MMINUS:	SIXBIT +"-"+
CRLFLF:	SIXBIT +#$+
;
;DUMP, PAGE 3
;
DUMPF:	PUSHJ STK,SETLIM	;DUMP FRAME... ADJUST LLIMIT AND
		;FRMNUM STO THAT THEY POINT TO EDGE OF PRINTER PAGE.
		;WE NOW DO GENERALIZED COMPRESSION.
	PUSHJ STK,GETFRM	;GET COMPARISON VALUE FROM 1ST FRAME.
	JRST CIOFAIL	;IF ERROR, DIE.
	MOVE AC1,VALUE	;SAVE COMPARISON VALUE IN DMPVAL.
	MOVEM AC1,DMPVAL
;
DUMCLP:	PUSHJ STK,GETFRM	;GET NEXT FRAME IN LIST.
	JRST CIOFAIL	;IF ERROR, DIE.
	MOVE AC1,VALUE	;DOES IT VALUE MATCH SAVED VALUE?
	CAME AC1,DMPVAL
	JRST NOMTCH	;NO.
	AOS AC1,LLIMIT	;YES, ADVANCE LLIMIT TO NEXT FRAME.
	MOVEM AC1,FRMNUM	;SET FRMNUM= NEW LLIMIT.
	CAMLE AC1,ULIMIT	;END OF LIST?
	JRST EODUMP	;YES, GO CHECK END OF LIST CASES.
	AOS ,WDCNTR	;NO, INCREMENT #OF MATCHES COUNTER.
	JRST DUMCLP	;GO ON TO NEXT ELEMENT.
;
NOMTCH:	SKIPGE ,WDCNTR	;MATCH FAILURE... DID WE MATCH AT LEAST
	JRST DMPLIN	;ONE LINE'S WORTH?   NO, DUMP INDIVIDUAL FRAMES.
	PUSHJ STK,DMPMSG	;YES, DUMP SPECIAL MESSAGE.
EOLINE:	PUSHJ STK,DMPCR	;DUMP LINE TERMINATOR.
	JRST DUMPF	;GO ON TO NEXT GROUP.
;
EODUMP:	SKIPGE ,WDCNTR	;END OF DUMP ENCOUNTERED WHILE MATCHING...
	JRST DMPLIN	; DO WE HAVE A LINE'S WORTH OF MATCHES
	PUSHJ STK,DMPMSG	;YES, DUMP MESSAGE AND
EOLDMP:	CLEARM ,LINKNT	;END OF GROUP, CLEAR LINE COUNT.
	JRST EOGPX	;GO TO END OF DUMP.
;
DMPLIN:	PUSHJ STK,NEWLIN	;BEFORE DUMPING, CHECK FOR END OF PAGE.
	MOVE AC,BOTTOM	;RESTORE LLIMIT FROM BOTTOM.  LLIMIT
	MOVEM AC,LLIMIT	;CANNOT BE RESET BY SETLIM.
	PUSHJ STK,SETLIM	;DUMP ONE LINE, FRAME BY FRAME.  SET LIMITS.
	PUSHJ STK,WRTADR	;WRITE ADDR OF 1ST FRAME,
	DUMP REGSTR	;FOLLOWED BY "/TAB" TERMINATOR.
;
DMPPLP:	PUSHJ STK,GETFRM	;GET NEXT FRAME.
	JRST CIOFAIL	;IF ERROR, DIE.
	PUSHJ STK,WRTFRM	;DUMP IT.
	AOS AC1,LLIMIT	;ADVANCE LLIMIT TO NEXT FRAME.
	MOVEM AC1,FRMNUM	;SET FRMNUM= NEW LLIMIT.
	CAMLE AC1,ULIMIT	;END OF LIST?
	JRST EOLDMP	;YES, DUMP CRLFLF AND EXIT, SMILING.
	AOSN ,WDCNTR	;NO, END OF LINE?
	JRST EOLINE	;YES, DUMP CRLFLF AND CONTINUE, GROANING.
	DUMP SPACES	;NO, DUMP SPACES BETWEEN FRAMES AND
	JRST DMPPLP	;CONTINUE.
;
;DUMP, PAGE 4
;
SETLIM:	MOVE AC1,CONADR	;FROM PREVAILING CONTROLLER, GET
	HLRZ AC1,DADR(AC1)	;ADDRESS RADIX.
	CAILE AC1,^D10	;IF >10, HALVE IT.
	LSH AC1,-1	;STORE ADJUSTED RADIX AS LINE WIDTH.
	MOVNM AC1,WDCNTR
	MOVE AC,LLIMIT	;GET REMAINDER(LLIMIT/LINE WIDTH)
	IDIV AC,AC1
	MOVE AC,LLIMIT	;COMPUTE LLIMIT-REMAINDER=
	SUB AC,AC+1	;LLIMIT- LLIMIT MOD LINE WIDTH.
	MOVEM AC,LLIMIT	;STORE ADJUSTED RESULT AS LLIMIT, FRMNUM
	MOVEM AC,FRMNUM
	MOVEM AC,BOTTOM	;AND BASE VALUE.
	POPJ STK,
;
DMPMSG:	PUSHJ STK,NEWLIN	;BEFORE DUMPING, CHECK FOR END OF PAGE.
	DUMP SPACES	;DUMP COMPRESSION MESSAGE.
	MOVE AC1,BOTTOM	;COMPARISON STARTED AT BOTTOM, DUMP IT.
	MOVEM AC1,VALUE
	PUSHJ STK,WRTVAL	;=WRTADR WITHOUT DISTURBING FRMNUM.
	DUMP MMINUS
	SOS ,FRMNUM	;COMPARISON ENDED AT FRMNUM-1.
	PUSHJ STK,WRTADR	;DUMP IT.
	DUMP MCONT
	MOVE AC1,DMPVAL	;DUMP THE COMPARISON VALUE.
	MOVEM AC1,VALUE
	PJRST WRTFRM
;

NEWLIN:	SOSLE ,LINKNT	;DECREMENT LINE COUNT.  ZERO?
	POPJ STK,	;NO, EXIT.
	PUSHJ STK,DMPCHR	;TYPE A FORM FEED.
	TTCALL 1,[014]
	MOVE AC,SYSLSP	;YES, GET SYSTEM LIST BASE
	MOVE AC,SYNAME(AC)	;AND FROM THERE THE SYSTEM NAME.
	MOVEM AC,NAME	;TYPE THE SYSTEM NAME.
	PUSHJ STK,WRTNAM
	DUMP HEDTXT	;DUMP TEXT OF HEADING.
	DUMP COMTXT	;DUMP THE CURRENT COMMAND STRING.
	DUMP PGTXT	;DUMP THE PAGE TEXT.
	AOS AC1,PGKNT	;INCREMENT AND TYPE THE PAGE COUNT.
	PUSHJ STK,ACTOUT
	MOVEI AC,^D50	;RESET LINE COUNT TO 50.
	MOVEM AC,LINKNT
	MOVEI AC,CR4LF	;SPACE DOWN A WAYS.
	PJRST DMPSTR
;
;DUMP, PAGE 5
;
;DMPCHR:  DUMP A CHARACTER.  CALLED AS FOLLOWS:
;	PUSHJ STK,DMPCHR
;	TTCALL 1,CHR	;TTCALL IS USED IF DMPFLG=0.

DMPCHR:	SKIPN ,DMPFLG	;IS DUMP FLAG ON?
	POPJ STK,	;NO, RETURN AND DO TTCALL.
	HRRZ AC1,(STK)	;YES, GET ADDRESS OF TTCALL.
	HRRZ AC1,@(AC1)	;GET THE ARGUMENT ITSELF.
	AOS ,0(STK)	;SKIP OVER TTCALL.
;
DMPIT:	MOVEM AC1,DMPUCB+UBUF	;STORE CHAR IN DUMP BUFFER.
	MOVEI AC1,DMPUCB	;SET UP ARGUMENT FOR CIO CALL.
	MOVEM AC1,.UCBAD
	PUSHJ STK,.WRITE	;WRITE CHARACTER.
	JRST DMPERR	;ERROR, DIE PECULIARLY.
	AOS ,DMPUCB+UFRM	;INCREMENT FILE FRAME#.
DOPOPJ:	POPJ STK,	;EXIT.
;
DMPCR:	MOVEI AC,CRLFLF	;DUMP CR-LF... SET UP TEXT ADDRESS.
DMPSTR:	MOVEM AC,TXTADR	;SET UP CALL ON WRTTXT.
	PJRST WRTTXT	;TYPE OUT SIXBIT STRING.
;
DMPERR:	CLEARM ,DMPFLG	;ERROR IN FILE WRITING... GIVE MESSAGE
	PUSHJ STK,LDFAIL	;AND THEN SIMULATE REENTER
	JRST MIMREN		;AS ONLY WAY TO ABORT COMMAND.
;
	END
