	SUBTTL EXPRESSION ANALYZER
;
;THE EXPRESSION ANALYZER, ALTHOUGH SYNTACTICALLY SIMPLE, IS
;SOMEWHAT HAIR-RAISING IN ITS IMPLEMENTATION, BECAUSE OF THREE
;COMPLICATIONS, TO WIT: INDEXING, RELOCATION, AND EXTERNALS.
;THE ANALYZER WORKS IN THREE MODES:
;1. ABSOLUTE.  EXTERNS AND RELOCATION FORBIDDEN, INDEXING SIMPLY
;  TURNS ON HIGH ORDER BIT OF RESULT.
;2. RELOCATABLE NON-DATA.  EXTERNS ARE FORBIDDEN, INDEXING SIMPLY
;  TURNS ON HIGH ORDER BIT OF RESULT.
;3. GENERATING DATA.  EVERYTHING IS LEGAL.  INDEXING, IF SPECIFIED,
; IS PASSED ON AS A FLAG (BIT 18=1) IN EXPVAL.
;
;IF RELOCATION IS PERMITTED, RELOCATION INFORMATION IS RETURNED
;IN THE LEFT HALF OF EXPVAL:
; -1	NEGATIVE REL
; 0	ABSOLUTE
; +1	POSITIVE (NORMAL) REL
;
;IF EXTERNALS ARE PERMITTED, ALL EXTERNAL REFERENCES ARE FORMED INTO
;BLOCKS ON THE LOCAL EXTERN LIST, WHICH IS DISPOSED OF IN ONE OF TWO
;WAYS:
;1. IN A COMPLEX, MULTI-TERM EXPRESSION, THE EXTERNAL TERMS ARE LINKED
; ONTO THE MASTER LIST OF EXTERNAL TERMS.
;2. IN A SINGLE TERM (SIMPLE) EXPRESSION, THE EXTERN IS LINKED
; THRU CORE TO PREVIOUS SIMPLE REFERENCES.  THE GENERATED BLOCK IS
; DROPPED.

;NOTE THE USE OF THE FOLLOWING FLAGS:
;QINDEX		EXPRESSION IS INDEXED
;QEMPTY		EXPRESSION IS EMPTY
;QSIMPL		EXPRESSION IS SIMPLE (SINGLE TERM)
;QRELON		RELOCATION IS PERMITTED
;QXTNON		EXTERNS ARE PERMITTED
;QTWO		TWO WORD INSTRUCTION

	DEFINE TRMS(B)	;SCH FOR TERMINATOR
<	MOVEI ARG,B
	JSP AC4,TRMSUB>

	OPR=AC3	;OUTSTANDING OPERATION CODE
;GRI-909/99/919 EXPRESSION ANALYZER, PAGE 2
;FIRST, VARIOUS ENTRY POINTS FOR SETTING CONTROL FLAGS:
;EVLABS	ASBSOLUTE
;EVLREL	RELOCATING NON-DATA
;EVALXP	NORMAL

EVLABS:	TLZA AF,QRELON	;ABSOLUTE: REL/EXTN VERBOTEN
EVLREL:	TLO AF,QRELON	;RELOCATING NON-DATA: REL OK, EXTN NOT
	TLZA AF,QXTNON	;PERMITTED.
EVALXP:	TLO AF,QRELON+QXTNON	;NORMAL:  ANYTHING GOES.
	TLO AF,QSIMPL+QEMPTY+QXTNFR	;MARK EXPRESSION AS SIMPLE/EMPTY
	ABS		;ABSORB LEADING SPACES.
IFN GRI99+GRI919,<
	TLZ AF,QINDEX	;INIT TO UNINDEXED.
	MCH "#"		;IS FIRST CHAR AN INDEX FLAG?
	JRST NOINDX	;NO
	TLO AF,QINDEX	;YES, SET INDEX FLAG SEEN BIT.
	GETCHR		;ADVANCE TO NEXT CHARACTER.
NOINDX:>
;GRI:909/99/919 EXPRESSION ANALYZER, PAGE 3
;MAIN LOOP OF ANALYZER.

	SETZ OPR,	;IMPLICIT INITIAL OPERATOR IS ZERO (ADD).
	PUSHJ P,FACTOR	;TRY FOR A FACTOR.  OK IF NOT FOUND.
	JFCL
MORFAC:	TRMS ADOP	;TRY FOR +/-/!/&/^ OPERATOR.
	JRST BLKOP	;NOT FOUND.
NXTFC1:	ABS		;FOUND, ABSORB BLANKS.
NXTFAC:	TLZ AF,QSIMPL	;IF OPERATOR SEEN, EXPRESSION IS NOT SIMPLE.
	PUSH P,EXPVAL	;SAVE VALUE DEVELOPED SO FAR.
	PUSHJ P,FACTOR	;GET ANOTHER FACTOR.
	TRO AF,QEERR	;IF NOT FOUND, GIVE WARNING ERROR.
	POP P,AC	;POP PREVIOUS VALUE OFEXPRESSION.
	TLNE AF,QRELON	;RELOCATION PERMITTED?
	CAIL OPR,NRELOP	;YES, IS OPERATOR RELOCATABLE?
	JRST NORELN	;NOT PERMITTED, GO CHECK FOR ABSOLUTE.
	XCT ,OPRTBL(OPR)	;EXPVAL_AC 'OPR' EXPVAL
	TRZ EXPVAL,600000	;CUT DATA RESULT TO 16 BITS.
	JRST MORFAC	;TRY FOR MORE.

NORELN:	TLZN EXPVAL,777777	;NO RELOCATION PERMITTED.  IF EITHER
	TLZE AC,777777	;VALUE IS RELOCATABLE,
	TRO AF,QRERR	;GIVE ERROR.
	TLNN AF,QXTNFR	;FURTHER, EXPRESSION MUST CONTAIN NO EXTERNS,
	TRO AF,QXTERR	;OTHERWISE ERROR
	XCT ,OPRTBL(OPR)	;DO OPERATION AND
	ANDI EXPVAL,177777	;SET ABSOLUTE MODE, 16 BIT ANSWER.
	JRST MORFAC	;ONWARDS.

BLKOP:	TRMS BLNKOP	;OPERATOR NOT ADD, LOOK FOR SPACE/TAB.
	JRST ADVOPR	;NOT FOUND, LOOK FOR * OR /
	ABS		;BLANK FOUND, ABSORB OTHER BLANKS.
	MCHR <";">	;END OF STATEMENT?
	JRST CLNUP	;YES, SPACE/TAB NOT AN OPERATOR AT ALL.
	CAIE CHR,<",">
	CAIN CHR,CRTN
	JRST CLNUP	;FIELD IS TERMINATED BY , ; AND CRTN.
	MOVEI OPR,ORNUM	;NOT END OF FIELD, SPACE/TAB MEANS IOR.
	JRST NXTFAC	;GO LOOK FOR NEXT FACTOR.

ADVOPR:	TRNN F,QADVF	;OPERATOR NOT ADD OR BLANK, ADV FEATURES ON?
	JRST CLNUP	;NO, LOOK NO FURTHER
	TRMS ADVOP	;ENABLED, LOOK FOR * AND /
	JRST CLNUP	;NOT FOUND, GIVE UP
	ADDI OPR,NUMOP
	TRNE F,QNADV	;FOUND, ARE ADV. FEATURES TO BE FLAGGED?
	IORI AF,QXERR	;YES, DO SO.
	JRST NXTFC1	;GO LOOK FOR NEXT FACTOR.
;GRI-909/919/99 EXPRESSION ANALYZER, PAGE 4
;OPERATOR TABLES AND SEARCH ROUTINES.

ADOP:	"+"	;0= ADD
	"-"	;1= SUBTRACT
	NRELOP=.-ADOP	;ALL REL. OPERATORS ABOVE THIS POINT
	"!"	;2= OR
	ORNUM=.-ADOP-1
	"&"	;3= AND
	"^"	;4= XOR
NUMOP=.-ADOP
	Z

BLNKOP:	" "	;BLANK OPERATORS ARE SPACE/TAB
	"	"
	Z

ADVOP:	"*"	;ADVANCED OPERATORS ARE * AND /
	"/"
	"_"	;ALSO _ FOR SHIFT
	Z

OPRTBL:	ADD EXPVAL,AC
	JSP T,SUBSUB
	IOR EXPVAL,AC
	AND EXPVAL,AC
	XOR EXPVAL,AC
	JSP T,MULSUB
	JSP T,DIVSUB
	JSP T,SHFSUB

TRMSUB:	SKIPN AC,(ARG)	;GET FIRST/NEXT FROM TABLE.
	JRST 0(AC4)	;IF ZERO, EXIT.
	CAME AC,CHAR	;MATCH?
	AOBJP ARG,TRMSUB	;NO, ADV TO NEXT AND LOOP.
	HLRZ OPR,ARG	;RETURN OPERATOR NUMBER IN OPR
	GETCHR		;REPRIME THE SCANNER
	JRST 1(AC4)

MAKUND:	MOVEM NAME,UDFBLK+SYMN	;MAKE SYMBOL.  SAVE NAME.
	MOVEI ARG,UDFBLK	;INSERT SARCHETYPE.
	PUSHJ P,SINSRT
	HALT		;**KLUDGE**
	POPJ P,

SUBSUB:	HRRZ T1,AC	;ISOLATE VALUE PART OF FIRST OPERAND
	SUBI T1,(EXPVAL)	;CALCULATE VALUE1-VALUE2.
	HRRI EXPVAL,0
	SUBB AC,EXPVAL	;CALCULATE MODE1-MODE2, LEAVE IN EXPVAL.
	HRR EXPVAL,T1	;RESTORE VALUE PART.
	JRST (T)

SHFSUB:	EXCH EXPVAL,AC	;SHIFT EXPVAL BY C(AC).
	TRNE AC,100000	;IF SHIFT QUANTITY IS NEGATIVE (16 BITS),
	IORI AC,600000	;DO RIGHT SHIFT INSTEAD OF LEFT.
	LSH EXPVAL,(AC)
	JRST (T)
;
MULSUB:	TRNE AC,100000	;SIGN EXTEND OPERAND 1.
	IOR AC,[777777600000]
	TRNE EXPVAL,100000	;SIGN EXTEND OPERAND 2.
	IOR EXPVAL,[777777600000]
	IMUL EXPVAL,AC	;MULTIPLY OPR 1* OPR 2
	JRST (T)
;
DIVSUB:	TRNE AC,100000	;SIGN EXTEND OPERAND 1.
	IOR AC,[777777600000]
	TRNE EXPVAL,100000	;SIGN EXTEND OPERAND 2.
	IOR EXPVAL,[777777600000]
	IDIVB AC,EXPVAL	;DIVIDE.
	JRST (T)
;GRI:909/99/919 EXPRESSION ANALYZER, PAGE 5
;FACTOR ANALYSIS.  WE TAKE A NON-SKIP RETURN ON NO FACTOR, A SKIP
;RETURN (AFTER MARKING EXPRESSION AS NON-EMPTY) IF A FACTOR IS SEEN.

FACTOR:	SETZ EXPVAL,	;CLEAR RESULT.
	MCHR "."	;IS FACTOR PERIOD?
	JRST PERIOD	;YES.
	CAIN CHR,042	;IS FACTOR A QUOTED LETTER?
	JRST QUOTE	;YES.
	GETNAM		;NO, A SYMBOL?
	JUMPN NAME,SYMBOL	;YES.
	GETNUM		;NO, A NUMBER.
	POPJ P,		;NONE OF THE ABOVE, PUNT.
	SKIPA EXPVAL,NUM	;A NUMBER, RETURN VALUE AS ABSOLUTE.
SETSR:	TRO AF,QSERR	;SYNTAX ERROR.
FND:	TLZ AF,QEMPTY	;SOMETHING FOUND, MARK EXPRESSION NON-EMPTY
CPOPJ1:	AOS (P)		;AND TAKE SKIP RETURN.
	POPJ P,

PERIOD:	GETCHR		;PERIOD, ADVANCE TO NEXT CHARACTER.
	MOVE EXPVAL,CURLOC	;RESULT=CURRENT
	JRST FND	;LOCATION COUNTER.

SYMBOL:	MOVE ARG,NAME	;SYMBOL, LOOK UP THE NAME.
	PUSHJ P,LOOKUP
	JRST NTFND	;NOT FOUND.
	MOVE AC,SYMF(ARG)	;FOUND, DEFINED?
	TLNE AC,QUNV
	JRST UNDFD	;NO.
	MOVE EXPVAL,SYMV(ARG)	;YES, RETURN VALUE.
CREXP:	TLNN F,QPASS1	;IF IN PASS2, CREF THIS REFERENCE.
	PUSHJ P,CREF
	JRST FND

NTFND:	PUSHJ P,MAKUND	;NOT FOUND, CREATE AN ENTRY.
	JRST SETUFL	;SET ERROR FLAG.
UNDFD:	TLNN AC,QEXT	;FOUND, IF NOT EXTERN'D,
SETUFL:	TRO AF,QUERR	;MARK EXPRESSION AS ERRONEOUS.
	TLNN F,QPASS1	;ARE WE IN PASS 2 AND
	TLNN AF,QXTNON	;ARE EXTERNS PERMITTED?
	JRST CREXP	;NO.
	TLZ AF,QXTNFR	;MARK EXPRESSION AS CONTAINING AN EXTERN.
	PUSHJ P,CREF	;CREF IF PASS 2.
	PUSHJ P,MAKBLK	;REFERENCE BLOCK.
	MOVEM ARG,@LEXPTR	;LINK BLOCK ONTO LOCAL LIST.
	MOVEM ARG,LEXPTR	;BLOCK IS NOW END OF LOCAL LIST.
	JRST FND	;DONE

QUOTE:	GETCHR		;QUOTED LETTER, ADVANCE TO NEXT CHARACTER.
	MOVE EXPVAL,CHAR	;GET CHARACTER.
	CAIN EXPVAL,CRTN	;IF EOL, ERROR.
	JRST SETSR
	IORI EXPVAL,200	;OTHERWISE, FORCE 8TH BIT ON
	GETCHR		;SKIP TO NEXT CHARACTER
	JRST FND	;AND RETURN.
;GRI-909/99/919 EXPRESSION ANALYZER, PAGE 6
;AT CLEANUP, WE HAVE A WHOLE RAFT OF SPECIAL CASES TO DISPOSE OF.
;IN ORDER OF DIFFICULTY:
;1.  EMPTY EXPRESSION, TAKE NON-SKIP RETURN
;2.  EXPRESSION WITHOUT EXTERNS.
;    2.1 UNINDEXED, RETURN VALUE
;    2.2 INDEXED, RETURN VALUE WITH INDEX BIT SET AND SET SPECIAL
;        FLAG BIT IF IN NORMAL DATA MODE
;3.  EXPRESSION WITH EXTERNS.
;    3.1 NON-SIMPLE EXPRESSION, CHAIN EXTERN REFERENCES ONTO MASTER
;	 LIST
;    3.2 SIMPLE EXPRESSION, CHAIN REFERENCE ONTO ONGOING CHAIN
;	 OF REFERENCES LINKED THRU CORE
;    3.3 INDEXED, CREATE SPECIAL INDEX BLOCK AND MERGE ONTO EXTERN
;	 LIST
;WATCH CLOSELY, AS THE BITS ARE FASTER THAN THE EYE.

CLNUP:	TLZE AF,QEMPTY	;EXPRESSION EMPTY?
	POPJ P,		;YES, EXIT.
	AOS ,(P)	;NO, SET UP SKIP RETURN.
	HLRZ AC,EXPVAL	;GET RELOCATION VALUE.
	TLZN AF,QRELON	;IS RELOCATION ENABLED? YES, SKIP
	JUMPN AC,SETRLX	;IF NOT, AND NOT ABSOLUTE, ERROR.
	SOJLE AC,RELOK	;IF 0/1, OK.
	CAIN AC,777777-1	;IF -1, ALSO OK.
	JRST RELOK
SETRLX:	TRO AF,QRERR	;NOT OK, SET FLAG AND
	HRLI EXPVAL,0	;FORCE RELOCATION MODE TO ABSOLUTE.
RELOK:	SKIPE AC,LEXLST	;ANY EXTERN REFERENCES?
	JRST EXTNXP	;YES.
	TLZN AF,QINDEX	;NO, INDEXED EXPRESSION?
	POPJ P,		;EXIT IF NOT INDEXED.
	TLZE AF,QXTNON	;INDEXED, SET INDEX BIT. ALSO SET FLAG
	TROA EXPVAL,500000	;IF IN DATA NORMAL MODE.
	IORI EXPVAL,100000
	POPJ P,		;DONE.
;GRI-909/99/919 EXPRESSION ANALYZER, PAGE 7
;EXPRESSION WITH EXTERNALS.

EXTNXP:	TLZE AF,QSIMPL	;SIMPLE (SINGLE TERM) EXPRESSION?
	JRST SIMPLX	;YES.
	MOVEM AC,@MEXPTR	;NO, ADD LOCAL LIST ONTO MASTER LIST.
	MOVE AC1,LEXPTR	;END OF LOCAL LIST IS NOW END OF MASTER LIST.
	MOVEM AC1,MEXPTR
CHKIDX:	TLZE AF,QINDEX	;IF INDEXED, CREATE INDEX REFERENCE.
	PUSHJ P,MAKIDX
	MOVEI AC,LEXLST	;INITIALIZE LOCAL EXTERN LIST.
	MOVEM AC,LEXPTR
	SETZM ,LEXLST
	POPJ P,		;EXIT.

;ON A SIMPLE EXTERNAL EXPRESSION, THE ENTERNAL BLOCK GENERATED
;BY THE EXPRESSION ANALYZER CONTAINS:
; 0	LINK
; 1	SYMBOL NAME
; 2	ADDRESS OF THIS REFERENCE
; 3	FLAGS
;THE SYMBOL TABLE ENTRY CONTAINS (MOST IMPORTANTLY)
; 1	ADDRESS OF LAST REFERENCE (OR -1 IF NONE YET)
;WE MUST CHAIN, IE,
;1. SYMBOL TABLE ENTRY IS UPDATED TO CONTAIN NEW "LAST" REFERENCE,
;   TO WIT, THE CURRENT REFERENCE, FROM THE EXTERN BLOCK.
;2. THE ADDRESS OF THE LAST REFERENCE IS RETURNED AS THE
;   VALUE OF THE EXPRESSION;  PRESUMABLY, IT WILL BE PUT IN CORE.
;THE EXTERN BLOCK IS THEN DEALLOCATED BY PUTTING ITS ADDRESS
;IN LOCBLK.
;THE ADDRESS OF THE FIRST(ONLY) EXTERN BLOCK IS IN AC.

SIMPLX:	MOVE ARG,SYMN+LINK(AC)	;RECOVER SYMBOL NAME.
	PUSHJ P,LOOKUP	;FIND IT AGAIN.
	HALT		;***IT BETTER EXIST***
	MOVE EXPVAL,SYMV+LINK(AC)	;GET CURRENT REFERENCE,
	EXCH EXPVAL,SYMV(ARG)	;STORE AS OLD REF, GET OLD REF
				;AND RETURN AS VALUE.
	MOVEM AC,LOCBLK		;DEALLOCATE LAST ENTRY.
	JRST CHKIDX		;GO CHECK FOR INDEXING.


;GRI-909/99/919 EXPRESSION ANALYZER, PAGE 8
;MAKE AN EXPRESSION BLOCK FROM RAW BLOOD.
;MAKBLK-- ENTER WITH A NAME IN 'NAME'
;AND RUN LIKE HELL FROM THERE.

MAKBLK:	SKIPE ARG,LOCBLK	;DO WE HAVE A BLOCK ALREADY?
	JRST GOTIT	;YES.
	MOVEI ARG,2	;NO, ALLOCATE A 4 WORD BLOCK.
	PUSHJ P,ALLOC
	HALT		;***KLUDGE***
GOTIT:	SETZM ,LOCBLK	;IN ANY CASE, CLEAR LOCAL BLOCK LIST.
	MOVEM NAME,SYMN+LINK(ARG)	;STORE NAME.
	MOVE AC,CURLOC	;REFERENCE IS AT CURLOC UNLESS WE ARE IN
	TRNN AF,QTWO	;SINGLE WORD INSTRUCTION MODE, IN WHICH
	HRRI AC,-1(AC)	;CASE REF IS AT CURLOC -1.  DO NOT DISTURB
			;REL. INFO IN LEFT HALF.
	MOVEM AC,SYMV+LINK(ARG)	;STORE REFERENCE.
	MOVE AC1,FLTB(OPR)	;USE OPERATOR TO GET REFERENCE FLAGS.
	TLNE AC,777777	;IF REFERENCE IS RELOCATABLE,
	TLO AC1,GRIREL	;SET RELOCATED BIT IN FLAGS.
	MOVEM AC1,SYMF+LINK(ARG)	;STORE FLAGS.
	SETZM ,(ARG)	;CLEAR LINK WORD.
	POPJ P,		;RETURN.


FLTB:	GRIPLS,,0	;OPR=+
	GRIMIN,,0	;OPR=-

MAKIDX:	MOVE NAME,[SIXBIT /[INDX]/]	;MAKE INDEX BLOCK WITH
	PUSHJ P,MAKBLK	;NAME '[INDX]'.
	MOVEM ARG,@MEXPTR	;LINK BLOCK ONTO MASTER EXTERN LIST.
	MOVEM ARG,MEXPTR	;BLOCK IS NOW END OF LIST.
	POPJ P,		;EXIT.
