TITLE MIMBLD - MIMIC VIRTUAL MACHINE CONFIGUROR
SUBTTL DEFINITIONS, ASSIGNMENTS,MACROS
;
	JOBVER==137
	MIMVER==1
	LOC	JOBVER
	EXP	MIMVER		;MIMIC BUILDER VERSION
;
	INTERN	JOBVER
	EXTERN	JOBSA,JOBFF
;
;MIMBLD---CONFIGURING VMS THROUGH PRAYER
;MISCELLANEOUS DEFINITIONS IMPORTANT TO THE CAUSE.
;ADJUST AS NECESSARY.
;
IFNDEF ADR,<	ADR=0>
IFNDEF FDATA,<	FDATA=0>
IFNDEF ONLINE,<	ONLINE=0>
IFNDEF TYMSHR,<	TYMSHR=0>
IFNDEF DTALIN,<	DTALIN=0>
IFNDEF DIGITL,<	DIGITL=0>
IFNDEF ISC,<	ISC=0>
IFNDEF TIMLTD,<	TIMLTD=0>
	SHARE==	0		;0 = NON-REENTRANT, 1 = REENTRANT
	PDLSIZ==^D40		;STACK SIZE
	CMDSIZ==^D20		;COMMAND LINE INPUT BUFFER SIZE
	OPTSIZ==^D10		;SPACE FOR SPECIAL OPTION NAME STORAGE
	LNENUM==1		;LINE NUMBER MASK FOR 7 BIT TEXT INPUT FILES
	MVMEOE==044		;DOLLAR SIGN = END OF ENTRY IN MVM DIRECTORY FILE
	CMPSIZ==^D30		;SIZE OF TEXT STRING BUFFER FOR FILES TO
				;BE COMPILED BY MACRO
	CNFSIZ==^D128		;SIZE OF TEXT CONFIGUROR BUFFER
	TCORSZ==^D15		;MINIMUM SIZE TMPCOR SPACE NEEDED FOR 
				;COMMAND STRINGS
;
;RADIX SETTINGS USED TO READ OPTION VALUES
;
	ASCRDX=="A"		;ASCII NAMES
	DECRDX=="D"		;DECIMAL NUMBERS
;
;DELIMITERS FOR OPTION VALUES IN TEXT CONFIGUROR FILE
;
	LFLIM==	133		;BRACKET
	RTLIM==	135
;
;ABORT CHARACTER IN CONVERSATION MODE
;
	ABTCHR==005		;CONTROL E(WRU)
;
;MIMIC STARTING ADDRESSES
;
	REGSA==	140		;END STARTING ADRRESS IN MIMIC
	ADRINC==10		;INCREMENT APPLIED TO STARTING ADR
	SPECSA==REGSA+ADRINC	;SPECIAL INCREMENTED SA
;MIMIC SYSTEM LIBRARY INFORMATION
;
	MIMCOM==SIXBIT/MIMCOM/	;MIMIC COMMON LOW SEG LIBRARY
				;(HAS ONLY COMMON.REL IN IT)
	MIMLIB==SIXBIT/MIMLIB/	;MIMIC COMMON HGH SEG LIBRARY FOR REL
				;FILES (.REL APPENDED BY PROGRAM)
	MVMNAM==SIXBIT/MVMLIB/	;MASTER VM DIRECTORY NAME--CONTAINS
				;FILE NAMES AND MACRO FILE
				;SPECIFIERS FOR EACH VM IN THE
				;SYSTEM.
	MVMEXT==SIXBIT/MIM/	;MVM EXTENSION
;
IFN ADR,<SYSPPN==XWD 640,640>
IFN FDATA,<SYSPPN==XWD 11,1000>
IFN ONLINE,<SYSPPN==XWD 10,16>
IFN DIGITL,<SYSPPN== XWD 0,0>
IFN DTALIN,<SYSPPN==XWD 1,10>
IFN TYMSHR,<SYSPPN==XWD 13,54420>
IFN ISC,<SYSPPN==XWD 6,41>
IFN TIMLTD,<SYSPPN==XWD 404,404>
;AC DEFINITIONS
;
	ZRO=	0		;UNUSED
	T=	1		;TEMPS
	T1=	T+1		;"
	T2=	T1+1		;"
	T3=	T2+1		;"
	C=	5		;CHARACTER
	D=	C+1		;CHAR BYTE POINTER-THEN SIX BIT ATOM
	F=	7		;FLAGS
	N=	10		;UUO NUMBER;PPN RADIX; LITTLE USED
	E=	11		;ERROR PROCESSING ADR IN PARSER-USED LITTLE
	A=	12		;RIGHT ATOM PROCESSING ADDRESS
	OPT=	13		;USER SUPPLIED ATOM, TO COMPARE WITH D
	TXT=	14		;CONFIGUROR TEXT BUFFER PTR;GENERAL TXT PTR AT END
	RPT=	15		;CONTAINS REPEAT LINE ADR FOR CONVERSATION ERROR
	S=	16		;NOT USED
	P=	17		;THE STACK (0F COURSE)
;
;CHANNEL DEFS
;
	MVM==	1		;MASTER VM DIRECTORY
	TMX==	2		;TMP TEXT FILE
	ATF==	3		;TEXT FILE(@CONSTRUCTION)
;
;CALLI DEFS
;
	RESET==	0
	EXIT==	12
	GETPPN==24
	RUN==	35
	CORE==	11
	PJOB==	30
	TMPCOR==44
IFN DTALIN,<DSLCALL==-3>
IFN ONLINE,<RUN=-7>
;
;TTCALL DEFS
;
	OUTCHR==1
	RESCAN==10
	INCHRS==2
	OUTSTR==3
	INCHWL==4
;FLAG DEFINITIONS
;
;FLAGS IN LH OF F
;
	FLAHD==	400000		;CHAR LOOK AHEAD FLAG
	FPER==	200000		;PERIOD SEEN
	FEQL==	100000		;EQUAL SIGN SEEN
	FSQBRK==40000		;SQ. BRACKET SEEN
	FCOMIN==20000		;COMMA IN(LAST BREAK CHAR SEEN)
;
	FINATP==200		;@FILE PROCESSING IN PROGRESS
	FCNNFP==100		;CONVERSATION NEW FILE PROCESSING
	FCNOFP==40		;CONVERSATION OLD FILE PROCESSING
	FCNVRS==20		;CONVERSATION
	FCMOFP==10		;COMMAND OLD FILE PROCESSING
	FCMVMP==4		;COMMAND VM== PROCESSING
	FCMATP==2		;COMMAND @ SIGN SEEN
	FCMDLN==1		;COMMAND LINE PROCESSING
;
;FLAGS IN RH OF F
;
	FVMIN==	400000		;VM IN
	FSAVIN==200000		;SAVE IN
	FTXATM==100000		;TEXT FILE ATOM IN PROCESS
	FASRDX==40000		;ASCII VALUE RADIX CURRENT
;
;CHARACTER CLASS DEFINITIONS USED BY PARSER
;
	CLSPC==	2		;SPACE
	CLNUL==	3		;NULL
	CLEOL==	13		;CARRIAGE RETURN
	CLPER==	4		;PERIOD
	CLCOM==	6		;COMMA
	CLEQL==	5		;EQUAL SIGN
	CLRBK==	11		;RIGHT BRACKET
;MACRO DEFS
;
DEFINE	ERROR	(A,B)<
	XLIST
	XERR	B,[ASCIZ/A/]
	LIST
>
DEFINE	ERR	(A,B)<
	XLIST
	XERR	B,A
	LIST
>
DEFINE	ERCONT	(A,B)<
	XLIST
	XWRN	B,[ASCIZ/A/]
	LIST
>
;
DEFINE	ERC	(A,B)<
	XLIST
	XWRN	B,A
	LIST
>
;
	OPDEF	XERR[1B8]
	OPDEF	XWRN[2B8]
SUBTTL STARTUP CONFIGURING PROCEDURES
;
IFNDEF SHARE,<SHARE==0>		;ASSUME NON-REENTRANT
IFN SHARE,<HISEG>		;LOAD TO HIGH SEG ONLY IF REENTRANT
;
;UUO HANDLER DISPATCH
;
	LOC	40
ABSL40:	Z
	JSR	UUOHND
	RELOC	0
;
MIMBLD:
IFN SHARE,<
	MOVSI	T,DATEND	;SET UP FIRST FREE LOC IN LOW SG
	HLLM	T,JOBSA
	CALLI	RESET		;RESET ALL CHANNELS,BUFFERS,ETC.
	MOVE	T,JOBFF
	CALLI	T,CORE		;ASSIGN ENOUGH CORE FOR DATA
	ERROR	<CORE OVERFLOW>
>
	MOVE	T,[XWD DATBEG,DATBEG+1];SET UP TO CLEAR
	SETZM	DATBEG		;IMPURE DATA REGION
	BLT	T,DATEND-1	;CLEAR TO END OF REGION
	SETZ	F,		;CLEAR ALL FLAGS
CLNSTK:	MOVE	P,[IOWD	PDLSIZ,PSTACK];INIT STACK

IFN ONLINE,<EXTERN BILL,BILFRC
	JSA	16,BILL		;CALL BILLING ROUTINE
	ARG	5,XN1
	ARG	5,XE1
	ARG	5,XN2
	ARG	5,XE2
	ARG	0,XNCO2
	ARG	0,XNPR2
	ARG	5,XN3
	ARG	5,XE3
	ARG	0,XNCO3
	ARG	0,XNPR3
	ARG	2,XPCT1
	ARG	2,XPCT2
	ARG	0,XMIN
>

IFN TYMSHR,<	EXTERN VALPRI
	JSA	16,VALPRI
	ARG	0,IBR	;OUTPUT INITIAL BILLING RECORD
	ARG	0,IPCODE
	ARG	5,BFNAME
>

IFN TIMLTD,<	EXTERN CHARGE
	JSP 16,CHARGE
	JUMP 0,1
	JUMP 0,[ASCII/MIM0/]
>
IFE ADR+TIMLTD,<JRST CNVERS>		;ADR RESCANS MONITOR CMD

;FOR NOW ALL T/S UTILITIES RUN IN CONVERSATIONAL MODE ONLY.
;THERE IS NO PROCESSING OF @ FILES OR CONFIGUROR SPECS 
;GIVEN WITH THE COMMAND THAT BRINGS IN THIS PROGRAM.  THAT IS, ONLY 
;ADR+TIMLTD HAS INVOCATION COMMANDS LIKE:
;
;	.MIMIC @CMD<CR>
;OR
;	.MIMIC VM=PDP8,CPU=4,PTR,SAVE=MY8VM<CR>

IFN ADR+TIMLTD,<
;****GET MIMIC COMMAND FROM MONITOR INPUT BUFFER****
;
	TTCALL	RESCAN,0	;RESCAN COMMAND LINE
	MOVEI	T,CMDBUF	;SET UP BYTE POINTER
	HRLI	T,(POINT 7,,)	;TO TRANSFER TO INTERNAL BUFFER
GETCOM:	TTCALL	INCHRS,T1	;GET CHARACTER
	JRST	CMDIN
	IDPB	T1,T		;STORE BYTE
	JRST	GETCOM
;
;****PARSE COMMAND****
;
CMDIN:	MOVEI	D,CMDBUF	;SET UP BYTE POINTER
	HRLI	D,(POINT 7,,)	;FOR INTERNAL BUFFER
	MOVEM	D,PCMD
IFN ADR,<SETZM	EXCFLG>
	PUSHJ	P,LDSKIP	;SKIP SPACES
	PUSHJ	P,GTATOM	;GET FIRST ATOM
	CAIN	T,CLEOL		;IS BREAK TYPE EOL?
	JRST	CNVERS		;YES,THEN OFF TO CONVERSATION LAND
	MOVSI	T1,-ABRNUM	;SET UP COUNTER/POINTER INTO
	CAMN	D,ABRTBL(T1)	;ABBREVIATION TABLE.
	JRST	.+3		;ABBREVIATION MATCH? YES, OK.
	AOBJN	T1,.-2		;NO, CHECK NEXT. ALL DONE?
	JRST	CNVERS		;NO MATCH.  ASSUME CONVERSATION.
	TLO	F,FLAHD!FCMDLN	;SET LOOK AHEAD FLAG TO PICK UP
				;BREAK CHAR AGAIN
	PUSHJ	P,PARSE		;LET PARSER DO THE REST
	TLNE	F,FCMVMP	;IS IT VM= PROCESSING?
	JRST	CONDON		;YES,OFF AND FINISH UP TEXT STRINGS
	TLNE	F,FCMOFP	;NO,THEN IS IT OLD FILE PROCESSING?
	JRST	CHKOLD		;YES
	TLZE	F,FCMATP	;NO,THEN BETTER BE @FILE
	JRST	PRSATF		;YES,PROCESS @ FILE NAMED
	ERR	PARERR		;YOU'VE FOUND A BUG IN ME!
;
ABRTBL:	SIXBIT	/MIM/		;TABLE INCLUDES ALL LEGAL ABBREVIATIONS
	SIXBIT	/MIMI/		;OF MIMIC VERB.
	SIXBIT	/MIMIC/
ABRNUM==.-ABRTBL		;NUMBER OF TABLE ENTRIES.
>;END OF CMD RESCAN CODE
;UUO HANDLER--ERROR AND WARNING MESSAGES GENERATED HERE
;
UUOHND:	Z
	LDB	N,[POINT 9,ABSL40,8];GET UUO #
	PUSH	P,D		;SAVE D
	MOVEI	T2,ILLUUO	;SET UP FOR POSSIBLE ILLEGAL UUO
	CAIE	N,1		;LEGAL?
	CAIN	N,2
	HRRZ	T2,ABSL40	;YES
	MOVEI	T1,"?"		;TYPE "?"
	TTCALL	OUTCHR,T1
	TTCALL	OUTSTR,0(T2)	;NOW TYPE THE MESSAGE
	LDB	T2,[POINT 4,ABSL40,12];GET AC
	JUMPE	T2,UUOOUT	;ANY SPECIFIED?
	MOVEI	T1," "		;YES,TYPE SPACE
	TTCALL	OUTCHR,T1
	MOVE	D,0(T2)		;GET ATOM FROM AC
	PUSHJ	P,TTYSVN
UUOOUT:	PUSHJ	P,TYCRLF	;AD CR-LF SEQUENCE
	POP	P,D		;RESTORE D
	CAIL	N,2		;CONTINUE?
	JRSTF	@UUOHND		;YES,RETURN
IFN ONLINE,<JSA	16,BILFRC>

IFN TYMSHR,<
	JSA	16,VALPRI
	ARG	0,FBR	;OUTPUT FINAL BILLING RECORD
	ARG	0,IPCODE
	ARG	5,BFNAME
>

	CALLI	EXIT		;NO,EXIT
;
ILLUUO:	ASCIZ	/ILLEGAL UUO/
SUBTTL PARSE ROUTINES
;
PARSE:	PUSHJ	P,LDSKIP	;SKIP LEADING SPACES
PARSE1:	PUSHJ	P,GTATOM	;GET THE NXT ATOM
	JRST	BRKDSP(T)	;DISPATCH ON BREAK CLASS IN T
;
BRKDSP:	ERR	PARERR		;NUMBER(IMPOSSIBLE)
	ERR	PARERR		;LETTER(IMPOSSIBLE)
	JRST	RDSPER		;SPACE
	HALT	.		;NULL (IMPOSSIBLE)
	JRST	RDPER		;PERIOD
	JRST	RDEQL		;EQUAL SIGN
	JRST	RDCOMA		;COMMA
	JRST	RDAT		;@ SIGN
	JRST	RDLSQB		;LEFT SQ. BRACKET
	JRST	RDRSQB		;RIGHT SQ. BRACKET
	ERROR	<ILLEGAL CHAR IN STRING>
	JRST	RDEOM		;CARRIAGE RETURN(EOM)
	ERR	PARERR		;ALL OF THESE BETTER BE IMPOSSIBLE
	ERR	PARERR
	ERR	PARERR
	ERR	PARERR
;
;ROUTINE TO GET CHARS FROM COMMAND STRING
;
GETCHR:	TLZN	F,FLAHD		;LOOK AHEAD FLAG SET?
	IBP	PCMD		;NO,INCREMENT POINTER
	LDB	C,PCMD		;YES,JUST GET CHAR
CPOPJ:	POPJ	P,
;
;ROUTINE SKIPS LEADING SPACES ONLY
;
LDSKIP:	PUSHJ	P,SKPSPC	;SKIP UNTIL NOT SPACE OR NULL
	TLO	F,FLAHD		;SET LOOK AHEAD FLG
	POPJ	P,		;RETURN WITH SIGNIFICANT CHAR IN HAND
;
;ROUTINE SKIPS UNTIL NOT SPACE OR NULL
;
SKPSPC:	PUSHJ	P,GETCHR	;FETCH A CHARACTER
	MOVE	T,C
	IDIVI	T,10		;CALCULATE CHAR CLASS CO-ORDINATES
	LDB	T,BYTPTR(T1)	;PICK UP CHAR CLASS
	CAIE	T,CLSPC		;SPACE OR
	CAIN	T,CLNUL		;NULL?
	JRST	SKPSPC		;YES,SKIP IT
	POPJ	P,		;NO,GOT A HOT ONE
;ROUTINE GETS THE NEXT ATOM,RETURNS THE SIXBIT ATOM IN D,
;BREAK CLASS IN T, AND THE BREAK CHAR IN C.
;
GTATOM:	TRZ	F,FTXATM	;INDICATE NOT A TXT ATOM
	SETZM	ATMBLT		;CLEAR SPACE FOR ATOM
	MOVE	D,[POINT 6,ATMBLT];SET UP ATOM WORD AREA PTR
	PUSHJ	P,GETCHR	;GET A CHARACTER
	PUSHJ	P,PRATOM	;BUILD UP ATOM
	JRST	.-2		;GET ANOTHER
	POPJ	P,		;ATOM IN
;
PRATOM:	MOVE	T,C
	IDIVI	T,10		;GET CHAR CLASS CO-ORDINATES
	LDB	T,BYTPTR(T1)	;GET CHAR CLASS
	CAIL	T,2		;LEGAL CHAR IN SYMBOL
	JRST	PRATM1		;NO,THEN THIS IS SOME SORT OF BREAK CHAR
	TLNN	D,770000	;POINTER INDICATE SIX ALREADY IN?
	POPJ	P,		;YES,IGNORE ALL FURTHER CHARS UNTIL BREAK
	SUBI	C,40		;CONVERT SEVEN BIT TO SIX
	IDPB	C,D		;THEN SAVE IN STACK
	POPJ	P,		;ANOTHER CHAR,PLEASE
;
;HERE WHEN ATOM IN.NOW MAKE SURE BREAK CLASS CHAR IN
;
PRATM1:	CAIE	T,CLSPC		;NOT NUM OR LET--MAYBE SPACE?
	JRST	PRATM3		;NO.
	TRNE	F,FTXATM	;YES,IS THIS A TXT FILE ATOM?
	ERR	SPCERR		;YES,ALL SPACES ARE ILLEGAL!
	PUSHJ	P,SKPSPC	;BYPASS SPACE AND ANY OTHERS
PRATM3:	CAIL	T,2		;LETTER OR NUMBER?
	JRST	PRATM2		;NO
	MOVEI	C," "		;YES,FAKE A SPACE
	MOVEI	T,CLSPC
	TLO	F,FLAHD		;SET LOOK AHEAD FLAG
PRATM2:	MOVE	D,ATMBLT	;GET RESULT IN D
POPJP1:	AOS	(P)		;AND AWAY TO ATOM-IN RETURN
	POPJ	P,
;CHARACTER CLASS TABLE
;
;TABLE HAS EIGHT CHARACTERS PER WORD.  CHARACTERS ARE CLASSIFIED
;AS FOLLOWS:
;		0  NUMERAL
;		1  LETTER
;		2  SPACE
;		3  NULL
;		4  PERIOD
;		5  EQUAL SIGN
;		6  COMMA
;		7  @ SIGN
;		10 LEFT SQ. BRACKET
;		11 RIGHT SQ. BRACKET
;		12 ILLEGAL CHARACTER
;		13 CARRIAGE RETURN (EOM)
;
;NOTE THAT THE FOLLOWING CHARACTERS ARE CURRENTLY DEFINED
;AS ILLEGAL:  MINUS, SLASH, LEFT & RIGHT PARENTHESES, COLON.
;
BYTTAB:	BYTE	(4)3,3,3,3,3,3,3,3	;ASCII 00-07
	BYTE	(4)3,2,2,2,2,13,3,3	;  "   10-17
	BYTE	(4)3,3,3,3,3,3,3,3	;  "   20-27
	BYTE	(4)3,3,3,3,3,3,3,3	;  "   30-37
	BYTE	(4)2,12,12,12,12,12,12,12; "   40-47
	BYTE	(4)12,12,12,12,6,12,4,12;  "   50-57
	BYTE	(4)0,0,0,0,0,0,0,0	;  "   60-67
	BYTE	(4)0,0,12,12,12,5,12,12	;  "   70-77
	BYTE	(4)7,1,1,1,1,1,1,1	;  "   100-107
	BYTE	(4)1,1,1,1,1,1,1,1	;  "   110-117
	BYTE	(4)1,1,1,1,1,1,1,1	;  "   120-127
	BYTE	(4)1,1,1,10,12,11,12,12	;  "   130-137
	BYTE	(4)3,3,3,3,3,3,3,3	;  "   140-147
	BYTE	(4)3,3,3,3,3,3,3,3	;  "   150-157
	BYTE	(4)3,3,3,3,3,3,3,3	;  "   160-167
	BYTE	(4)3,3,3,3,3,3,3,3	;  "   170-177
;
BYTPTR:	POINT	4,BYTTAB(T),3
	POINT	4,BYTTAB(T),7
	POINT	4,BYTTAB(T),11
	POINT	4,BYTTAB(T),15
	POINT	4,BYTTAB(T),19
	POINT	4,BYTTAB(T),23
	POINT	4,BYTTAB(T),27
	POINT	4,BYTTAB(T),31
;GET A BYTE FROM OPEN TXT FILE. NULL BYTES,FORM FEED, AND LINE FEED ARE
;IGNORED,AS ARE LINE NUMBERS.  BYTE RETURNED IN C.
;
GTBYTE:	SOSG	TXTHD+2		;DECREMENT CHAR COUNT--
	JRST	TXTBUF		;OUT OF CHARS IN THIS BUF
GETNXT:	MOVE	T1,TXTHD+1	;NO,GET CURRENT BYTE POINTER
	TLNN	T1,770000	;ABOUT TO GET NEW WORD?
	JRST	NXTWRD		;YES--MUST IGNORE ANY LINE NUMBER
	IBP	TXTHD+1
BYTEOK:	LDB	C,TXTHD+1	;NO GET NXT ASCII BYTE
	JUMPE	C,GTBYTE	;IF NULL,IGNORE
	CAIN	C,012		;IS IT LF?
	JRST	GTBYTE		;YES,ALSO IGNORE
	CAIN	C,014		;IS IT FORM FEED?
	JRST	GTBYTE		;YES,ALSO IGNORE
	JRST	POPJP1		;OTHERWISE TAKE CHAR-IN RETURN
;
NXTWRD:	IBP	TXTHD+1		;SET POINTER TO NEXT WORD
	MOVE	T1,TXTHD+1
	TLZ	T1,777777	;CLEAR ALL BUT ADDRESS IN PTR
	MOVE	T1,@T1		;GET ENTIRE WORD FROM BUFFER
	TRNN	T1,1		;IS THIS A LINE NUMBER?
	JRST	BYTEOK		;NO,PROCESS NEXT BYTE
	MOVE	T1,TXTHD+2	;YES,IGNORE NEXT 5 BYTES
	SUBI	T1,4		;RECALULATE BYTE CNT
	MOVEM	T1,TXTHD+2	;(LAST IS SUBTRACTED ON NXT GET)
	MOVE	T1,TXTHD+1	;NOW SET BYTE POINTER TO
	TLZ	T1,770000	;END OF LINE NUMBER
	MOVEM	T1,TXTHD+1
	JRST	GTBYTE		;GET NEXT BYTE
TXTBUF:	IN	MVM,		;GET NEXT BUFFER
	JRST	GETNXT
	POPJ	P,		;EOF RETURN
;PROCESS LEFT SQUARE BRACKET HERE.  LEGAL CHARACTER ONLY NI OLD FILE
;SPECIFICATION IN COMMAND LINE OR CONVERSATION OR WITH @FILE
;FOR PPN.
;
RDLSQB:	TLNE	F,FCMVMP!FINATP	;IN VM COMMAND LINE OR 
				;INSIDE @FILE
SQBRE1:	ERR	ILLBRK		;YES,BRACKET ILLEGAL
	TLNE	F,FCMDLN	;NO,ARE WE STILL LOOKING AT COMMAND?
	JRST	RDLSQ1		;YES
	TLNE	F,FCNOFP	;NO,OLD FILE CNVERSATION MODE?
	TLOE	F,FSQBRK	;SQ. BRK. ALREADY SEEN IN CONVERSATION?
	JRST	SQBRE2		;ILLEGAL THEN.
	PUSHJ	P,RDLSQ2	;PROCESS ATOM INFO
	JRST	SQBRE3		;ERROR,NO FILE NAME
	JRST	PARSE		;GET PPN
;
RDLSQ2:	MOVEI	T2,SVEXT	;SET UP TO STORE EXTENSION ATOM
	TLNN	F,FPER		;IS ATOM AN EXTENSION?
	MOVEI	T2,SVFLNM	;NO,THEN SET UP AS FILE NAME
	MOVEM	D,@T2		;STORE IN APPROPRIATE PLACE
	MOVEI	N,^D8		;SET UP PPN RADIX PROCESSING
	AOS	OPNBRK		;SET BRACKET OPEN FLAG
	SKIPE	SVFLNM		;IF FILE NAME NULL,TAKE ERROR RETURN
	AOS	(P)
	POPJ	P,
;
SQBRE2:	ERC	ILLBRK
	JRST	@RPT
SQBRE3:	ERC	NFILNM
	JRST	@RPT
SQBRE4:	ERR	ILLPPN
;
RDLSQ1:	TLOE	F,FSQBRK	;LEFT SQ. BRK. ALREADY SEEN?
	JRST	SQBRE1		;YES,TOO BAD
	PUSHJ	P,RDLSQ2	;NO,PROCESS ANY ATOM
	ERR	NFILNM		;ERROR RETURN
	TLNN	F,FCMATP	;IF COMMAND LINE BUT NOT VM MODE,
				;HAVE WE SEEN AN @?
	TLO	F,FCMOFP	;NO,THEN MUST BE OLD FILE ATTEMPT
	JRST	PARSE		;GO BACK FOR PPN INFO
;HERE FOR RIGHT SQ. BRACKET PROCESSING.
;BRACKETS MUST BE OPEN AND A PROJ #
;MUST BE IN;ELSE ILLEGAL.
;
RDRSQB:	HRRZI	E,SQBRE2	;ASSUME IN CONVERSATION MODE
	TLNN	F,FCNVRS	;ARE WE?
	HRRI	E,SQBRE1	;NO,THEN CHANGE TO COMMAND
	SKIPN	OPNBRK		;ARE WE PROCESSING OPEN BRACKETS?
	JRST	(E)		;NO, TAKE ERROR EXIT
	HRRI	E,CMAER1	;CHANGE ERROR PATHS AND MESSAGES
	TLNN	F,FCNVRS
	HRRI	E,SQBRE4
	SKIPE	CMACNT		;HAVE WE SEEN A PROJ#?
	CAIN	D,0		;A NULL ATOM?
	JRST	(E)		;YES, THEN ERROR
	PUSHJ	P,ATMNUM	;NO,THEN CONVERT TO OCTAL
	DPB	D,PPROG		;SAVE PROG #
	SETZM	OPNBRK		;CLOSE OPEN BRACKET FLAG
	SETZM	CMACNT		;CLEAR COMMA COUNT
	JRST	PARSE		;SEE WHAT'S LEFT
;
;HERE FOR SPACE.
;ONLY WHEN PROCESSED AS BREAK TYPE BY PRATOM AND PASSED THROUGH
;DISPATCH TABLE.   HOWEVER,SPACE IS CURRENTLY AN ILLEGAL
;BREAK CHARACTER FOR ALL COMMAND AND CONVERSATION PATHS.
;
RDSPER:	TLNE	F,FCMDLN	;ARE WE LOOKING AT COMMAND LINE ERROR?
	ERR	SPCER1		;YES,GOODBYE.
	ERC	SPCER1		;NO,CHASTISE THE USER AND ALLOW HIM
	JRST	@RPT		;TO REPENT HIS WAYS.
;
;ASSORTED RANDOM BYTE POINTERS
;
PPROJ:	POINT	18,SVPPN,17
PPROG:	POINT	18,SVPPN,35
;@ SIGN PROCESSING HERE.
;CHAR LEGAL ONLY IN THE COMMAND LINE
;
RDAT:	TLNN	F,FCMDLN	;ARE WE LOOKING AT COMMAND LINE?
	JRST	RDATER		;NO,@ MAKES NO SENSE
	TLNE	F,FCMVMP!FCMOFP!FINATP;ARE WE ALREADY COMMITTED
				;TO SOMEOTHER PROCESS MODE?
ATER1:	ERR	ILLATS		;YES, TOO BAD
	TLOE	F,FCMATP	;FIRST @ THROUGH?
	JRST	ATER1		;NO,ABORT
	JUMPN	D,ATER1		;DO WE HAVE A NULL ATOM?
	JRST	PARSE		;YES, THEN @ OK. GO GET FILENAME.
;
RDATER:	ERC	ILLATS		;REPORT ERROR
	JRST	@RPT
;
;PROCESS A PERIOD HERE.
;ONLY VALID IF @FILE IN PROCESS IN COMMAND LINE
;
RDPER:	TLNN	F,FCMATP	;@ SIGN SEEN?
	JRST	RDPER1		;NO,FIND OUT WHAT KIND OF ERROR THIS IS.
	TLOE	F,FPER		;YES,IS THIS THE FIRST PERIOD?
CMPRER:	ERR	ILLPER		;NO,THEN TOO MANY
	CAIN	D,0		;ANY FILE NAME
	ERR	NFILNM		;NO
	MOVEM	D,SVFLNM	;YES,THEN SAVE FILE NAME
	JRST	PARSE1		;GO GET ANY EXTENSION
;
RDPER1:	TLNN	F,FCMOFP	;ARE WE IN COMMAND OLD FILE PROCESSING?
	JRST	RDPER2		;NO,GO ON.
	TLNN	F,FSQBRK	;ARE WE PAST A BRACKET?
	ERR	ILLEXT		;NO,THEN ATTEMPTED EXTENSION
	JRST	CMPRER		;YES,THEN ILLEGAL PERIOD
;
RDPER2:	TLNN	F,FCNOFP	;CONVERS OLD FILE PROCESSING?
	JRST	RDPER3		;NO,THEN ILLEGAL PERIOD
	TLNN	F,FSQBRK	;YES,AND HAVE WE SEEN A SQ. BRACKET?
	ERC	ILLEXT		;NO,THEN EXTENSION ATTEMPT
	TLNE	F,FSQBRK	;RE-SEPARATE EXT. FROM BRACKET TEST
RDPER3:	ERC	ILLPER
	JRST	@RPT		;REPEAT ATOM REQUEST
;CARRIAGE RETURN (EOM) PROCESSED HERE
;LOTS OF ACTION
;
RDEOM:	TLNN	F,FCNVRS	;ARE WE CONVERSING?
	JRST	EOLCMD		;NO,THEN END OF COMMAND OR INSIDE @FILE
	TLNN	F,FCNOFP	;IS OLD FILE MODE IN PROGRESS?
	POPJ	P,		;NO, SIMPLY RETURN
	SKIPE	OPNBRK		;ARE BRACKETS STILL OPEN?
	JRST	EOME1		;YES,ERROR IN SYNTAX
RDEOM1:	CAIE	D,0		;NO,IS IT A NULL ATOM?
	MOVEM	D,SVFLNM	;NO,SAVE ATOM AS FILE NAME
	POPJ	P,		;THEN RETURN
;
EOME1:	ERC	ILLPPN
	JRST	@RPT
;HERE IF CR AT END OF COMMAND LINE OR INSIDE @FILE
;
EOLCMD:	TLNE	F,FINATP	;ARE WE INSIDE @FILE?
	POPJ	P,		;YES,RETURN
	TLNE	F,FCMATP	;NO,THEN @ SEEN?
	JRST	EOLCM3		;YES
	TLNE	F,FCMVMP	;NO,THEN IS IT VM PROCESSING?
	JRST	EOLCM1		;YES
	SKIPE	OPNBRK		;NO,THEN MUST BE OLD FILE ATTEMPT
				;ARE BRACKETS STILL OPEN?
EOME2:	ERR	ILLPPN
	TLO	F,FCMOFP	;NO,SET FLAG TO INDICATE OLD FILE
	JRST	RDEOM1
;
EOLCM1:	JUMPE	D,EOLCM2	;NULL ATOM?
	TLZ	F,FCOMIN	;NO,CLEAR COMMA IN FLAG
	TLO	F,FLAHD		;SET LOOK AHEAD FLAG TO PICK UP CR AGAIN
	JRST	COMTST		;PROCESS AS IF WERE COMMA
EOLCM2:	TLNE	F,FCOMIN	;COMMA FLAG OFF?
	ERR	ILLCMA		;NO,THEN NULL ATOM ILLEGAL
	POPJ	P,		;RETURN
;
EOLCM3:	SKIPE	OPNBRK		;BRACKETS CLOSED?
	JRST	EOME2		;NO,ILLEGAL SYNTAX
	TLNN	F,FPER		;PERIOD SEEN?
	JRST	RDEOM1		;NO,STORE FILENAME,IF ANY
	TLNE	F,FSQBRK	;YES,HAVE SQ. BRACKETS BEEN SEEN?
	JRST	EOLCM4		;YES
	CAIN	D,0		;NO,IS EXTENSION ATOM NULL?
	ERROR	<INCOMPLETE EXTENSION>;YES, ILLEGAL
	MOVEM	D,SVEXT		;NO,THEN SAVE ATOM AS EXTENSION
	POPJ	P,
EOLCM4:	JUMPE	D,CPOPJ		;IS ATOM NULL--BETTER BE?
	ERROR	<TOO MANY ARGUMENTS>;NO,SOMETHING BEYOND "]".
MMA PROCESSING
;FIRST CHECK FOR OPEN SQUARE BRACKETS; IF NOT OPEN,THEN TREAT
;COMMA IN REGULAR WAY-ONLY PERMITTED IN "VM" COMMAND MODE PROCESSING
;(ATOMS SEPARATED IN @FILE WITH CR-LF)
;
RDCOMA:	HRRZI	T2,CMAER1	;SET UP ERROR PROCESSING FOR COMMA
	TLNN	F,FCNVRS	;ARE WE CONVERSING?
	HRRI	T2,SQBRE4
	MOVE	E,T2
	SKIPN	OPNBRK		;ARE WE IN THE MIDDLE OF BRACKETS?
	JRST	PLNCMA		;NO,GO TO VM MODE TEST
	SKIPE	CMACNT		;ANY COMMA YET?
	JRST	(E)		;YES, TAKE ERROR EXIT
	PUSHJ	P,ATMNUM	;CONVERT ATOM IN D TO PROJ#
	CAIN	D,0		;NULL ATOM?
	JRST	(E)		;YES
	DPB	D,PPROJ		;STORE PROJECT NUMBER
	AOS	CMACNT		;INCREMENT COMMA CNT
	JRST	PARSE		;GET PROGRAMMER NUMBER
;
CMAER1:	ERC	ILLPPN
	JRST	@RPT
CMAER2:	ERC	ILLCMA
	JRST	@RPT
;WE ARE HERE IF WE THINK WE HAVE TO PARSE CONFIGUROR ATOMS
;IN COMMAND LINE
;
PLNCMA:	TLNN	F,FCMDLN	;ARE WE CONVERSING?
	JRST	CMAER2		;YES,TOO BAD FOR YOU.
	TLNN	F,FCMVMP	;ARE WE PROCESSING IN VM MODE?
PLNCM1:	ERR	ILLCMA		;NO,THEN COMMA NOT OK
	TLO	F,FCOMIN	;YES,THEN SET COMMA IN FLAG(ONLY USED
				;BY THE EOL ROUTINE)
	JUMPE	D,PLNCM1	;HAS ATOM BEEN READ?
COMTST:	TLZN	F,FEQL		;YES,IS IT LEFT ATOM ALONE?
	JRST	.+3		;YES
	PUSHJ	P,@A		;NO,EQUAL SIGN IN.PROCESS.
	JRST	PARSE
IFN ADR,<
	PUSHJ	P,INTEXC	;IS THIS AN "EXEC" ATOM?
	JRST	PARSE		;YES,FLAG SET. RETURN
>
	PUSHJ	P,EXTATM	;NO,THEN ATTEMPT MATCH FROM VM TEXT FILE
	JRST	PARSE		;GOT ONE
;
;ROUTINE CONVERTS SIXBIT ATOM IN D TO INTEGER OF
;RADIX IN AC N.  RETURNS NEW VALUE IN D.
;
ATMNUM:	SETZ	T,		;CLEAR FOR RESULT
ATNUM1:	JUMPE	D,ATNUM2	;DONE?
	LSHC	C,6		;NO,GET CHAR
	ANDI	C,77		;GET SIX BIT
	IMULI	T,(N)		;EXPAND
	ADDI	T,-20(C)	;GET RID OF SIX BIT
				;AND ADD ON DIGIT
	JRST	ATNUM1		;GET ANOTHER
ATNUM2:	MOVE	D,T		;STORE RESULT
	POPJ	P,
;EQUAL SIGN PROCESSED HERE
;ONLY VALID WITHIN @FILE OR IN COMMAND LINE
;
RDEQL:	TLNE	F,FCNVRS	;ARE WE CONVERSING?
	JRST	EQLER1		;YES,= NO GOOD
	TLNE	F,FCMOFP!FCMATP	;ARE WE ON COMMAND LINE FOR @ OR OLD FILE?
EQLER2:	ERR	ILLEQL		;YES,THEN =ILLEGAL
	TLNN	F,FINATP	;NO,ARE WE INSIDE @ FILE?
	TLO	F,FCMVMP	;NO,THEN MUST BE AN ATTEMPT
				;AT VM PROCESSING
	CAIN	D,0		;IS LEFT SIDE OF = NULL?
	ERROR	<NO ARGUMENT BEFORE =>;YES,MAKES NO SENSE
	TLOE	F,FEQL		;IS THIS THE ONLY = BEFORE , OR CR?
	JRST	EQLER2		;NO,THEN TOO MANY EQUAL SIGNS
	PUSHJ	P,INTATM	;IS THIS AN INTERNAL ATOM(SAVE OR VM)?
	JRST	PARSE		;YES,GO BACK FOR RIGHT SIDE 
	PUSHJ	P,EXTATM	;NO,THEN MUST COMPARE THIS ATOM WITH
				;VM TEXT CONFIGUROR FILE
	JRST	PARSE		;RETURN IF MATCH FOUND
;
EQLER1:	ERC	ILLEQL
	JRST	@RPT
;
;COMPARE USER SPECIFIED OPTION IN D AGAINST NAMES IN CONFIGUROR BUFFER
;
EXTATM:	MOVE	TXT,[POINT 7,CNFTXT];SET UP PTR TO OPTIONS 
				;IN BUFFER
	MOVE	OPT,D		;SAVE CURRENT LEFT ATOM IN D
EXATM1:	PUSHJ	P,CNFATM	;GETATOM FROM CONFIGUROR BUFFER
	ERROR	<ILLEGAL OPTION>,OPT;EOB WITHOUT A MATCH
	CAIE	D,0		;NULL ATOM?
	CAIE	T,CLEQL		;WAS BREAK TYPE =?
	ERR	TVMFER		;ILLEGAL TEXT FILE FORMAT
	CAMN	OPT,D		;ARE OPTION NAMES EQUAL?
	JRST	EXATM2		;YES
	PUSHJ	P,CNFOPT	;NO,GET PTR TO NEXT OPTION
	JRST	EXATM1		;TRY THIS FOR A MATCH
;HERE WHEN LEFT ATOM MATCH IS MADE.
;SEE WHETHER , OR = IS BREAK,ETC.
;OPTION BYTE PTR AT FIRST CHAR AFTER =SIGN ON RETURN.
;
EXATM2:	MOVEI	A,RTATOM	;STORE POST =SIGN PROCESSING ADR
	PUSHJ	P,CNFRAD	;ESTABLISH RADIX OF OPTION
	TLNN	F,FEQL		;ATOM BEFORE EQUAL SIGN?
	JRST	EXATM3		;NO
	PUSHJ	P,YNVAL		;IS THIS A BINARY ANSWER OPTION?
	JRST	.+2		;NO,THEN OK
	ERROR	<ILLEGAL EQUAL SIGN WITH >,OPT;YES,THEN = NOT ALLOWED
	MOVEM	D,SVOPTN	;SAVE OPTION NAME IN CASE OF ERROR
	PUSHJ	P,SVNOUT	;OUTPUT OPTION NAME IN D TO TEXT TMP FILE
	MOVEI	C,"="		;ADD EQUAL SIGN TO DEFINITION
	JRST	WRTBYT
;COME HERE IF EXTERNAL ATOM WITHOUT VALUE (PTR)
EXATM3:	PUSHJ	P,YNVAL		;IS OPTION NAME W.O. VALUE LEGIT?
	ERROR	<OPTION REQUIRES VALUE>,OPT;NO,MUST HAVE RIGHT SIDE
	MOVEI	T2,"1"		;SET OPT DEF FLAG FOR YES
	JRST	OPTDFF		;COMPLETE DEFINITION
;TEST FOR "VM" OR "SAVE" ATOM. IF DUPLICATED,ABORT.  
;IF NEWLY DEFINED RETURNS NORMALLY.  IF ALREADY DEFINED BUT THIS IS
;NOT A MATCH,RETURN INCREMENTED.  "VM" MUST BE FIRST ATOM PROCESSED.
;
INTATM:	CAME	D,[SIXBIT/VM/]	;IS THIS ATOM "VM"?
	JRST	VMCHK1		;NO
	TROE	F,FVMIN		;YES,BUT HAVE WE ALREADY SEEN VM?
	ERROR	<VM REDEFINED>	;YES,TOO CONFUSING TO GO ON
	MOVEI	A,VMNAM		;SET UP RIGHT SIDE OF = PROCESSING.
	POPJ	P,		;RETURN WITH VM FOUND
;
VMCHK1:	TRNN	F,FVMIN		;NOT VM,SO HAVE WE SEEN IT BEFORE?
	ERROR	<VM= MISSING>	;NO,MUST BEGIN WITH VM.
	CAME	D,[SIXBIT/SAVE/];ARE WE LOOKING AT SAVE?
	JRST	POPJP1		;NO,GO BACK
	TROE	F,FSAVIN	;YES,BUT HAVE WE ALREADY SEEN SAVE?
	ERROR	<SAVE REDEFINED>;YES,GOODBYE.
	MOVEI	A,SAVNAM	;NO SET UP FOR RIGHT SIDE OF = PROCESSING
	POPJ	P,
;
;TEST FOR "EXEC" ATOM (NEED NOT BE FOLLOWED BY =)
IFN ADR,<
INTEXC:	CAME	D,[SIXBIT/EXEC/];IS THIS ATOM EXEC?
	JRST	POPJP1		;NO,THEN TAKE NO MATCH RETURN
	AOS	EXCFLG		;SET EXECUTE FLAG
	POPJ	P,
>
;COME HERE AFTER PRIMING A BECAUSE OF "SAVE=" SEEN.
;D CONTAINS SAVE FILE ATOM NAME. (NO EXTENSION ALLOWED)
;
SAVNAM:	MOVEM	D,NEWSAV	;SAVE NAME OF SAVE FILE
	POPJ	P,		;GO BACK FOR NEXT ATOM
;PROCESSING COMES HERE WHEN A PRIMED BECAUSE OF VALID
;XXXXXX= ATOM;  D NOW CONTAINS VALUE FOR OPTION.  ALSO HERE WHEN
;CONVERSATION DEMANDS A NON YES-NO REPLY.
;
RTATOM:	MOVE	OPT,D		;SAVE USER SUPPLIED VALUE
	PUSHJ	P,CNFVAL	;COMPARE TO NEXT VALUE IN LIST OF POSSIBILITIES.
	JRST	RTATM2		;NO MORE VALUES,INVALID RESPONSE
	CAME	OPT,D		;ARE VALUES EQUAL?
	JRST	RTATOM+1	;NO,GET NEXT VALUE IN LIST
	TLNE	F,FCNVRS	;YES BUT ARE WE CONVERSING?
	POPJ	P,		;YES,THEN DON'T OUTPUT REPLY
;
OUTANS:	TRNE	F,FASRDX	;IS VALUE IN ASCII RADIX?
	JRST	RTATM1		;YES,ONLY OUTPUT ATOM
	MOVEI	C,"^"		;NO,THEN MUST PREFACE ATOM WITH "^D"
	PUSHJ	P,WRTBYT
	MOVEI	C,"D"
	PUSHJ	P,WRTBYT
	MOVE	D,OPT		;NOW GET ATOM
	PUSHJ	P,SVNOUT
	JRST	CRLF		;ADD CR-LF SEQUENCE
;
RTATM1:	MOVE	D,[SIXBIT/SIXBIT/];CREATE SIXBIT ATOM
	PUSHJ	P,SVNOUT
	HRLZI	D,(SIXBIT "@/")	;ADD LEFT DELIM BEFORE ATOM
	PUSHJ	P,SVNOUT
	MOVE	D,OPT		;NOW GET ATOM SUPPLIED BY USER
	PUSHJ	P,SVNOUT
	MOVEI	C,"/"		;ADD RIGHT DELIM
	PUSHJ	P,WRTBYT
	JRST	CRLF		;ADD CR-LF AND RETURN
;
;HERE IF OPTION VALUE HAS NO MATCH IN CONFIGUROR BUFFER.
;
RTATM2:	MOVE	OPT,SVOPTN	;GET SAVED OPTION NAME
	TLNN	F,FCNVRS	;ARE  WE CONVERSING?
	ERROR	<ILLEGAL VALUE FOR>,OPT;NO,THEN GIVE UP
	ERCONT	<ILLEGAL VALUE>
	JRST	@RPT
;VMNAM CALLED BY COMMA OR CR ROUTINES.
;INTERPRETS XXXXXX RESPONSE TO VM=.
;AC D STILL HAS SIXBIT RESPONSE TO VM= QUESTION.
;
VMNAM:	OPEN	MVM,OPNBKS	;PREPARE HEADER FOR MASTER VM FILE
	ERROR	<MVM FILE OPEN FAILURE>
	INBUF	MVM,1		;ONE BUFFER SHOULD BE ENOUGH
	MOVE	T1,[MVMNAM]	;SET MVM LIBRARY NAME
	MOVEM	T1,LEBLK
	MOVE	T1,[MVMEXT]	;ITS EXTENSION
	MOVEM	T1,LEBLK+1
	SETZM	LEBLK+2
	MOVE	T1,[SYSPPN]	;AND SYSTEM PPN
	MOVEM	T1,LEBLK+3
	LOOKUP	MVM,LEBLK	;READY FILE FOR READING
	ERROR	<MVM FILE NOT FOUND>
	SETZM	TXTHD+2		;SET BYTE COUNT TO FORCE FIRST INPUT
	AOS	TXTHD+2
	MOVE	OPT,D		;SAVE VM NAME GIVEN
VMNAM1:	MOVEI	T3,1		;SET LOOKING FOR NEXT ENTRY FLG ON
	PUSHJ	P,TXTATM	;GET AN ATOM
	SETZ	T3,		;SET FLG OFF-NO LONGER AT START OF ENTRY
	CAIE	T,CLEOL		;WAS BREAK CAUSED BY CR?
	ERR	MVMFER		;NO,MVM FILE IN WROMG FORMAT
	CAMN	D,OPT		;DOES USER RESPONSE EQUAL THIS ENTRY NAME?
	JRST	VMTXTF		;YES,FINISH READING MVM ENTRY FOR THIS VM
	PUSHJ	P,NXTENT	;NO,FIND NEXT ENTRY
	JRST	VMNAM1		;SEE IF THERE'S A MATCH WITH THIS ONE
;
;ROUTINE GETS AN ATOM FROM THE MVM FILE
;
TXTATM:	TRO	F,FTXATM	;SET TEXT FILE ATOM FLAG
	SETZM	ATMBLT		;CLEAR SPACE FOR ATOM
	MOVE	D,[POINT 6,ATMBLT];SET UP PTR FOR ATOM
TXTAT1:	PUSHJ	P,GTBYTE	;GET CHAR
	JRST	TXTAT2		;TEST FOR LEGAL END OF FILLE
	PUSHJ	P,PRATOM	;BUILD UP ATOM
	JRST	TXTAT1		;ANOTHER CHAR.PLEASE.
	CAIN	D,0		;IS ATOM NULL?
	ERR	MVMFER		;YES,ILLEGAL FILE FORMAT.
	POPJ	P,		;RETURN WITH ATOM IN D.
TXTAT2:	SKIPN	T3		;AT STAR T OF NEW ENTRY?
	ERR	MVMFER		;NO,THEN FILE FORMAT ERROR
	SKIPE	ATMBLT		;ATOM  ALSO STILL NULL?
	ERR	MVMFER		;NO,THEN ALSO FILE FORMAT ERROR
	PUSHJ	P,CLSMVM	;LEGAL END OF FILE-CLOSE IT
	TLNE	F,FCMVMP!FINATP	;COMMAND LINE VM= OR IN @ FILE?
	ERR	INVVMN		;YES,THEN ABORT
	ERC	INVVMN		;NO,THEN PRINT MESSAGE AND RESTART
	JRST	@RPT
;
;GET NEXT PART OF MVM FILE ENTRY--THE TEXT CONFIGUROR FILE NAME
;
VMTXTF:	MOVEM	D,VMNAME	;SAVE VM NAME
	PUSHJ	P,TXTATM	;GO GET TEXT FILE NAME
	SETZM	LEBLK+2		;CLEAR THIRD WORD FOR LOOKUP
	SETZM	LEBLK+1		;CLEAR EXTENSION
	MOVEM	D,LEBLK		;MOVE FILE NAME TO LOOKUP BLOCK
	CAIN	T,CLEOL		;BREAK TYPE IS CR?
	JRST	VMLIBN		;YES ,DONE WITH VM TEXT FILE NAME
	CAIE	T,CLPER		;IS BREAK TYPE PERIOD?
	ERR	MVMFER		;NO,THEN ILLEGAL FILE FORMAT
	PUSHJ	P,TXTATM	;YES,GO GET EXTENSION
	CAIE	T,CLEOL		;NOW IS BREAK TYPE CR?
	ERR	MVMFER		;NO, TOO BAD
	MOVEM	D,LEBLK+1	;YES.STORE EXTENSION
	MOVE	T,[SYSPPN]	;USE SYS PPN
	MOVEM	T,LEBLK+3
VMLIBN:	PUSHJ	P,TXTATM	;GET VM REL LIBRARY NAME
	CAIE	T,CLEOL		;BREAK TYPE CR?
	ERR	MVMFER		;MORE ILLEGAL FORMATTING HERE
	MOVEM	D,SAVLIB	;SAVE LIB NAME FOR LOAD COMMAND STRING
	MOVE	T,[POINT 7,CMPTXT];READY POINTER TO MOVE COMPILE
				;STRINGS FROM FILE TO INTERNAL BUFFER
	SETZM	LDTMPS		;CLEAR ASSEMBLY COUNT FLAG
;
;**** NOTE THAT ANY NUMBER OF COMPILE STRINGS CAN BE TRANFERRED
;FROM THE MVM ENTRY TO THE PROGRAM'S INTERNAL BUFFER(PROVIDED
;THE INTERNAL BUFFER IS ASSEMBLED LARGE ENOUGH).  
;CHARACTERS ARE TRANSFERRED TO CMPTXT UNTIL AN END-OF-ENTRY CHAR IS READ
;(MVMEOE).  THIS CHARACTER IS ALSO APPENDED TO THE END OF THE BUFFER.
COMPLS:	PUSHJ	P,GTBYTE	;GET CHAR
	ERR	MVMFER		;ILLEGAL FORMAT NO EOE YET
	IBP	T
	HRRZ	T1,T
	CAIN	T1,ENDCMP	;END OF ALLOTTED BUFFER?
	ERR	CMPOVR		;YES,NO MORE ROOM. WE LOSE.
	DPB	C,T		;NO,OK TO STORE.
	CAIN	C,015		;FINISHED A COMPILE STRING?
	AOSA	LDTMPS		;YES,INCREMNT COUNT
	CAIE	C,MVMEOE	;STORED CHAR END OF ENTRY CHAR?
	JRST	COMPLS		;NO
;
;NOW WANT TO CLOSE MVM DIRECTORY FILE AND OPEN
;FILE SET UP IN LOOKUP BLOCK
;
MVMDON:	PUSHJ	P,CLSMVM	;CLOSE DIRECTORY FILE
	LOOKUP	MVM,LEBLK	;OK,NOW GET CONFIGUROR
				;FILE FOR THIS VM
	ERROR	<VM CONFIGUROR FILE NOT FOUND>
	SETZM	TXTHD+2		;CLEAR BUFFER BYTE COUNT
	AOS	TXTHD+2		;SET TO FORCE FIRST READ
	MOVE	TXT,[POINT 7,CNFTXT];SET TO DUMP TO INTERNAL BUF
;
CNFIN:	PUSHJ	P,GTBYTE	;GET CHAR
	JRST	CNFDON		;END OF FILE
	IBP	TXT
	HRRZ	T1,TXT
	CAIN	T1,ENDCNF	;END OF ALLOTTED BUFFER?
	ERR	CNFOVR		;YES, TOO BAD
	DPB	C,TXT		;NO,STORE THIS BYTE
	JRST	CNFIN		;GET NEXT
;TEXT CONFIGUROR ENTRY NOW IN CORE--CLOSE FILE
;
CNFDON:	AOJ	TXT,		;INCREMENT CURRENT POINTER
	HRRZM	TXT,LSTCNF	;AND STORE AS EOF MARKER
	MOVE	TXT,[POINT 7,CNFTXT];SET UP INTERNAL PTR TO IT
	RELEASE	MVM,		;CLOSE AND RELEASE TEXT FILE
;
;NOW OPEN MIMIC CONFIGUROR TMP FILE FOR OUTPUT
	OPEN	TMX,OPNBKD	;OPEN
	ERROR	<OPEN FAILURE ON XXXMIM.TMP>
	OUTBUF	TMX,1		;SET UP ONE STANDARD BUFFER
	MOVEI	T,3		;SET DIGIT COUNT FOR JOB #
	CALLI	T1,PJOB		;GET DECIMAL JOB #
SXJOB:	IDIVI	T1,12		;CONVERT DIGIT TO SIXBIT
	ADDI	T2,20
	LSHC	T2,-6		;SAVE SIXBIT CHARACTER
	SOJG	T,SXJOB		;PROCESSED 3 DIGITS?
	MOVEM	T3,JOBNUM	;YES,SAVE JOB NUMBER
;
;OPEN TMP FILE XXXMIM.TMP FOR OUTPUT
;
OPNTMP:	HRLZI	T1,(SIXBIT/TMP/);SET UP TMP EXTENSION
	MOVEM	T1,LEBLK+1
	MOVE	T1,JOBNUM	;FORM NAME BY APPENDING JOB #
	HRRZI	T,(SIXBIT/MIM/);TO MIM
	HRRZM	T,LEBLK
	HLLM	T1,LEBLK
	SETZM	LEBLK+2		;CURRENT TIME/DATE
	SETZM	LEBLK+3		;CURRENT PPN PAIR
	ENTER	TMX,LEBLK	;ENTER FILE NAME
	ERROR	<ENTER FAILURE ON XXXMIM.TMP>
	POPJ	P,		;VM=XXXXXX NOW INTERPRETED.
				;NAME OKED,ITS CONFIGUROR FILE IN CORE,
				;TMP OUTPUT OPEN AND READY FOR OPTIONS.
				;NOW GO GET THOSE OPTIONS.****
;FIND NEXT VM ENTRY
;
NXTENT:	PUSHJ	P,GTBYTE	;GET A CHARACTER
	ERR	MVMFER		;FILE FORMAT ERROR
	CAIE	C,MVMEOE	;DO WE HAVE A $(END OF ENTRY)?
	JRST	NXTENT		;NO,KEEP GOING
	PUSHJ	P,GTBYTE	;YES
	ERR	MVMFER		;FILE FORMAT ERROR
	CAIE	C,015		;DOES CR FOLLOW END OF ENTRY?
	ERR	MVMFER		;FILE FORMAT ERROR
	POPJ	P,
;
CLSMVM:	CLOSE	MVM,
	STATZ	MVM,740000
	ERROR	<CLOSE FAILURE ON MVM FILE>
	POPJ	P,
;
;WRITE A BYTE TO TMP FILE CURRENTLY OPEN
;
WRTBYT:	SOSGE	TMPHD+2		;ROOM IN THIS BUFFER?
	JRST	PUTBUF		;NO
PUTNXT:	IDPB	C,TMPHD+1	;STORE CHAR
	POPJ	P,
PUTBUF:	OUT	TMX,		;WRITE OUT CURRENT BUFFER
	JRST	WRTBYT		;RETURN HERE WHEN BUF EMPTY
	ERROR	<WRITE FAILURE ON XXXMIM.TMP>
;GET A BYTE FROM THE VM TEXT CONFIGUROR BUFFER
CNFBYT:	IBP	TXT		;GET NEXT BYTE ADDRESS
	HRRZ	T1,TXT
	CAMN	T1,LSTCNF	;END OF BUFFER?
	POPJ	P,		;YES RETURN
	LDB	C,TXT		;GET NEXT BYTE
	JUMPE	C,CNFBYT	;IGNORE IF NULL
	CAIN	C,012		;NOT NULL,IS IT LF?
	JRST	CNFBYT		;YES,ALSO IGNORE
	JRST	POPJP1		;RTN NORMALLY, CHAR IN C
;
;GET AN ATOM FROM THE VM TEXT CONFIGUROR BUFFER
CNFATM:	TRO	F,FTXATM	;SET TEXT ATOM FLAG
	SETZM	ATMBLT		;CLEAR SPACE FOR ATOM
	MOVE	D,[POINT 6,ATMBLT];PTR TO ATOM RESULT
CNFAT1:	PUSHJ	P,CNFBYT	;GET CHAR
	POPJ	P,		;NO MORE CHARS
	PUSHJ	P,PRATOM	;BUILD UP ATOM
	JRST	CNFAT1		;GET NEXT CHAR
	JRST	POPJP1		;RTN WITH ATOM IN D
;
;GET NEXT OPTION--FIND NEXT CR
CNFOPT:	PUSHJ	P,CNFBYT	;GET A BYTE
	ERR	TVMFER		;EOF--ILLEGAL FORMAT
	CAIE	C,015		;IS THIS CR?
	JRST	CNFOPT		;NO
	POPJ	P,		;YES, NOW POINTING AT NEXT OPTION
;
;GET RADIX OF POSSIBLE VALUES OPTION CAN HAVE.
;DECIMAL "D" AND ASCII STRING "A" ARE IMPLEMENTED.
;ALSO READ LEFT DELIMITER OF VALUE STRING.
CNFRAD:	PUSHJ	P,CNFBYT	;GET RADIX CONTROL BYTE
	ERR	TVMFER		;ILLEGAL FILE FORMAT  EOF
	TRZ	F,FASRDX	;SET RADIX FLAG TO DECIMAL
	CAIN	C,DECRDX	;IS THIS DECIMAL RADIX?
	JRST	CNFRD1		;YES,THEN FLAG ALREADY SET
	CAIE	C,ASCRDX	;NO,IS IT ASCII RADIX?
	ERR	TVMFER		;NO,MORE ILLEGAL FORMAT
	TRO	F,FASRDX	;SET FLAG TO ASCII RADIX
CNFRD1:	PUSHJ	P,CNFBYT	;GET LEFT DELIMITER
	ERR	TVMFER		;EOF ERROR
	CAIE	C,LFLIM		;CORRECT LEFT DELIMITER?
	ERR	TVMFER
	AOS	INBROP		;SET INTERNAL BRACKET OPEN FLAG ON
	POPJ	P,
;GET NEXT VALUE FROM STRING OF POSSIBLE OPTION VALUES
;
CNFVAL:	PUSHJ	P,CNFATM	;GET NEXT ATOM
	ERR	TVMFER
	JUMPE	D,CNFVL3	;NULL ATOM?
	SKIPN	INBROP		;;ARE BREACKETS OPEN?
	ERR	TVMFER		;NO,ILLEGAL FORMAT
	CAIN	T,CLRBK		;IS THIS THE LAST VALUE?
	JRST	CNFVL1		;YES
	CAIE	T,CLCOM		;NO,THEN BREAK CAUSED BY COMMA?
	ERR	TVMFER		;NO ERROR
	JRST	POPJP1		;YES, RTN, ATOM IN D
CNFVL1:	SETZM	INBROP		;CLEAR BRACKETS OPEN FLAG
	JRST	POPJP1
CNFVL3:	SKIPN	INBROP		;ARE BRACKETS PROPERLY CLOSED?
	CAIE	T,CLEOL		;AND IS BREAK TYPE CR?
	ERR	TVMFER
	POPJ	P,		;YES, TAKE NO ATOM RETURN
;
;CONVERT SIXBIT ATOM IN D TO SEVEN BIT AND OUTPUT.
;DON'T OUTPUT SPACES OR NULLS.
;
SVNOUT:	JUMPE	D,CPOPJ		;ANY CHARS LEFT?
	LSHC	C,6		;YES,GET NEXT
	ANDI	C,77		;CLEAN OFF JUNK
	JUMPE	C,SVNOUT	;IGNORE NULLS
	CAIE	C,040		;IF @(040),TREAT AS SPACE
	ADDI	C,40		;CONVERT TO SEVEN BIT
	PUSHJ	P,WRTBYT	;WRITE IT
	JRST	SVNOUT		;GET NEXT CHAR
;
;WRITE SEVEN BIT CR-LF SEQUENCE
;
CRLF:	MOVEI	C,015
	PUSHJ	P,WRTBYT
	MOVEI	C,012
	JRST	WRTBYT
;FIND OUT IF CURRENT OPTION ONLY HAS TWO POSSIBLE VALUES 0,1--OR YES,NO.
;IF SO,THEN YES-NO REPLY VALID IN CONVERSATION AND NO
;VALUE VALID IN COMMAND LINE AND IN @FILE;
;RETURN IF NOT BINARY DECISION.
;INCREMENT AND RETURN IF BINARY DECISION.
;
YNVAL:	TRNE	F,FASRDX	;IS RADIX ASCII?
	POPJ	P,		;YES,THEN CAN'T BE YES-NO
	MOVEM	TXT,SVBYTT	;SAVE CURRENT BYTE PTR
	MOVE	T3,INBROP	;SAVE STATUU OF BRACKET FLAG
	MOVE	OPT,D		;SAVE ATOM IN D
	PUSHJ	P,CNFVAL	;GET FIRST ATOM VALUE
	ERR	TVMFER
	CAME	D,[SIXBIT/0/]	;IS FIRST ATOM 0?
	JRST	YNVAL1		;NO,THEN CAN'T BE YES-NO
	PUSHJ	P,CNFVAL	;GET NEXT VALUE
	ERR	TVMFER
	CAME	D,[SIXBIT/1/]	;IS NEXT VALUE 1?
	JRST	YNVAL1		;NO,THEN CAN'T BE YES-NO
	PUSHJ	P,CNFVAL	;ISTHERE ANOTHER ATOM?
	AOS	(P)		;NO,THEN IS PROPER BINARY CHOICE
YNVAL1:	MOVE	TXT,SVBYTT	;RESTORE BYTE POINTER
				;TO BEGINNING OF STRING
	MOVE	D,OPT		;RESTORE ORIGINAL VALUE OF D
	MOVEM	T3,INBROP	;RESTORE INITIAL BRACKET FLAG
	POPJ	P,
;
;DEFINE CURRENT OPTION -TO 1;THEN ADD CR-LF
;
OPTDFF:	PUSHJ	P,SVNOUT	;OUTPUT OPTION NAME
	MOVEI	C,"="		;ADD =
	PUSHJ	P,WRTBYT
	MOVE	C,T2		;PICK UP YES-NO DEFINITION VALUE
	PUSHJ	P,WRTBYT
	JRST	CRLF
;*******BEWARE---VICIOUS DOG LURKING IN THIS CODE
;(OLDCON THROUGH XCTYES).  IN AN ATTEMPT TO MAKE ERROR PROCESSING
;IN THE CONVERSATION CLEARER,A REPEAT LINE ACTIN (RPT SET TO
;RETURN ADDRESS) RESETS THE STACK---YES,THAT'S RIGHT.  
;(SEE ROUTINE CLNUP).  RISKY,YES-- BUT ALSO FAST AND,
;I THINK, JUSTIFIABLE SINCE NO CONVERSATION SECTIONS ARE
;PUSHJ'ED TO (I.E.,IT'S JRST CNVERS).********************
;
;BEGIN DIALOGUE HERE
;
CNVERS:	TLO	F,FCNVRS	;SET CONVERSATION FLAG ON
CNVRS1:	TLZ	F,FLAHD		;CLEAR LOOK-AHEAD FLAG, IF SET.
	TTCALL	OUTSTR,OLDNEW	;ASK WHAT FLAVOR IS WANTED
	PUSHJ	P,GTLINE	;GET RESPONSE INTO BUFFER
	MOVE	T,[POINT 7,CMDBUF];SET UP BYTE POINTER TO RESPONSE
	MOVEM	T,PCMD
	PUSHJ	P,GTATOM	;GET RESPONSE IN SIXBIT
	CAIE	T,CLEOL		;WAS BREAK CHAR END OF LINE?
	JRST	ANSHUH		;NO,ILLEGAL RESPONSE
	JUMPE	D,NEWCON	;IF NULL ATOM ,THEN GO TO NEW CONVERS.
	CAME	D,[SIXBIT/NEW/]	;IS IT "NEW"?
	CAMN	D,[SIXBIT/N/]	;IS IT "N"?
	JRST	NEWCON		;YES
	CAME	D,[SIXBIT/OLD/]	;NO,THEN IS IT "OLD"?
	CAMN	D,[SIXBIT /O/]	;NO,IS IT "O"?
	JRST	OLDCON		;YES
ANSHUH:	TLZ	F,FCNOFP!FCNNFP	;CLEAR ALL SUB-CONVERSATION FLAGS
	TTCALL	OUTSTR,HUH	;PRINT "HUH?"
	PUSHJ	P,TYCRLF	;ADD CR-LF SEQUENCE
	JRST	CNVRS1
;OLD FILE CONVERSATION
;
OLDCON:	TLO	F,FCNOFP	;SET OLD FILE CONVERSATION FLAG
	PUSHJ	P,CLRSFL	;CLEAR SAVE FILE DATA FOR NAME,EXT, AND PPN
	TTCALL	OUTSTR,SAVEE	;TYPE "SAVE="
	MOVEI	RPT,OLDCNE	;SET UP REPEAT LINE LOCATION
	PUSHJ	P,GTLINE	;GET REPLY
	PUSHJ	P,CHKABT	;SEE IF ABORT KEY TYPED.
	JRST	ANSHUH		;YES,GO BACK TO "OLD-NEW"
	PUSHJ	P,PARSE		;NO,THEN DECODE RESPONSE
	SKIPE	SVFLNM		;SAVE FILE NAME IN?
	JRST	RUNOLD		;YES,GO LOAD AND RUN
	TTCALL	OUTSTR,NOFILE	;NO, TYPE "?NO FILE NAME"
	PUSHJ	P,TYCRLF
OLDCNE:	PUSHJ	P,CLNUP		;CLEAN UP FLAGS AND STACK
	JRST	OLDCON
;
;******THE NO-NO ROUTINE (BETTER KNOWN AS "GOODBYE STACK")*****
;
CLNUP:	TLZ	F,FLAHD!FPER!FEQL!FSQBRK;INSURE THESE FLAGS
	SETZM	INBROP		;CLEAR INTERNAL BRACKET LFAG
	SETZM	CMACNT
	SETZM	OPNBRK
	MOVE	T,(P)		;SAVE LAST REUTRN ADR ON STACK
	XCT	CLNSTK		;RESET STACK POINTERS
	JRST	@T		;RETURN (I HOPE)
;HERE IF RESULT OF COMMAND LINE WAS OLD FILE PROCESSING
;
CHKOLD:	SKIPE	SVFLNM		;IS THERE A SAVE FILE?
	JRST	RUNOLD		;YES,THEN GO RUN
	ERROR	<NO SAVE FILE NAME>;ABORT
;
;NEW FILE CONVERSATION HERE
;
NEWCON:	TLO	F,FCNNFP	;SET NEW FILE FLAG
	TTCALL	OUTSTR,VME	;TYPE "VM="
	MOVEI	RPT,NEWCNE	;SET UP REPEAT LINE PROCESSING
	PUSHJ	P,GTLINE	;GET USER REPLY
	PUSHJ	P,CHKABT	;ABORT KEY TYPED?
	JRST	ANSHUH		;YES
	PUSHJ	P,PARSE		;NO,PARSE RESPONSE
	JUMPE	D,NEWCN1	;IS ATOM BLANK?
	PUSHJ	P,VMNAM		;NO,THEN GO OFF AND SEE IF VALID VM NAME,
				;IF SO,GET ITS TEXT CONFIGUROR FILE IN
				;CORE AND OPEN TMP FILE FOR OUTPUT.
	HRLZI	D,(SIXBIT /VM=/)
	PUSHJ	P,SVNOUT	;VM=
	MOVE	D,SIXNM
	PUSHJ	P,SVNOUT	;SIXBIT
	MOVEI	C,"/"
	PUSHJ	P,WRTBYT	;/
	MOVE	D,VMNAME
	PUSHJ	P,SVNOUT	;NAME OF VM
	MOVEI	C,"/"
	PUSHJ	P,WRTBYT	;/
	PUSHJ	P,CRLF		;CR-LF
GETOPT:	MOVEM	TXT,SVBYTP	;SAVE BYTE POINTER IN CASE OF REPEAT LINE
	PUSHJ	P,CNFATM	;GET OPTION FROM LIST
	JRST	ENDOPT		;FINISHED PROCESSING OPTIONS
	CAIE	D,0		;NO,NULL ATOM?
	CAIE	T,CLEQL		;NO,IS BREAK TYPE "="?
	ERR	TVMFER		;MORE ILLEGAL FILE FORMAT
	PUSHJ	P,CNFRAD	;GET RADIX FOR OPTION
	MOVEM	D,SVOPTN	;SAVE OPTION NAME FOR REPEAT
	PUSHJ	P,TTYSVN	;TYPE OPTION NAME
	MOVEI	T2,"?"		;PREPARE TO TYPE "?"
	PUSHJ	P,YNVAL		;IS THIS TO HAVE ONLY Y-N REPLY?
	MOVEI	T2,"="		;NO,THEN CHANGE CHAR TO "="
	TTCALL	OUTCHR,T2	;OUTPUT OPTION TERMINATOR
	PUSHJ	P,GTLINE	;GET REPLY
	PUSHJ	P,CHKABT	;ABORT CHAR TYPED?
	JRST	OPTER1		;YES
	MOVEI	RPT,OPTER2	;NO,SET UP FOR REPEAT LINE
	PUSHJ	P,PARSE		;PARSE RESPONSE
	JUMPE	D,NXTOPT	;IF NULL ATOM,THEN OPTION IS UNDEFINED
				;IN TEXT FILE.  VM COMMON WILL
				;ESTABLISH DEFAULTS
	PUSHJ	P,YNVAL		;WHAT KIND OF REPLY PERMITTED?
	JRST	GETOP1		;SPECIFIC ANSWERS ONLY
	MOVEI	T2,"1"		;ASSUME ANSWER IS YES
	PUSHJ	P,YESNOR	;IS IT?
	MOVEI	T2,"0"		;NO,ANSWER IS N0
	MOVE	D,SVOPTN	;GET OPTION NAME
	PUSHJ	P,OPTDFF	;WRITE OUT DEFINITION
NXTOPT:	PUSHJ	P,CNFOPT	;SET POINTER TO NEXT OPTION IN LIST
	JRST	GETOPT		;PROCESS IT
;SOME ERROR PATHS
;
NEWCN1:	TTCALL	OUTSTR,HUH	;PRINT "HUH?"
	PUSHJ	P,TYCRLF	;ADD CR-LF
NEWCNE:	PUSHJ	P,CLNUP		;CLEAN UP STACK AND FLAGS
	JRST	NEWCON		;TRY AGAIN
;
OPTER1:	TTCALL	OUTSTR,HUH	;PRINT "HUH?"
	PUSHJ	P,TYCRLF	;ADD CR-LF
	PUSHJ	P,DELTMP	;DELETE TMP FILE CURRENTLY OPEN
	PUSHJ	P,CLNUP		;CLEANS UP FLAGS AND STACK
	TLZ	F,FCNOFP!FCNNFP	;ALSO CLEAR CONVERSATION FLGS
	JRST	CNVRS1		;REPEAT OLD-NEW
OPTER2:	PUSHJ	P,CLNUP		;CLEAR UP FLAGS AND STACK
	MOVE	TXT,SVBYTP	;RESET BYTE POINTER TO START OF OPTION
	JRST	GETOPT		;GET SAME OPTION AGAIN
;CONTINUE OPTION PROCESSING
;
GETOP1:	PUSHJ	P,RTATOM	;VERIFY ANSWER
	MOVE	D,SVOPTN	;GET SAVED OPTION NAME
	PUSHJ	P,SVNOUT	;WRITE TO FILE
	MOVEI	C,"="		;ADD EQUAL SIG
	PUSHJ	P,WRTBYT
	PUSHJ	P,OUTANS	;AND WRITE TO FILE
	JRST	NXTOPT
;
;HERE WHEN ALL OPTIONS IN VM CONFIGUROR BUFFER
;HAVE BEEN PROCESSED.
;
ENDOPT:

IFN TYMSHR,<
	JSA	16,VALPRI	;OUTPUT CHECKPOINT RECORD
	ARG	0,CPBR
	ARG	0,IPCODE
	ARG	0,BFNAME
>

	TTCALL	OUTSTR,SAVEE	;TYPE SAVE=
	MOVEI	RPT,SAVER1	;SET UP FOR REPEAT LINE
	PUSHJ	P,GTLINE	;GET REPLY
	PUSHJ	P,CHKABT	;ABORT KEY TYPED?
	JRST	OPTER1		;YES
	PUSHJ	P,PARSE		;NO,PARSE REPLY
	JUMPE	D,SAVER1	;IF NULL ATOM
	PUSHJ	P,SAVNAM	;SAVE THE NAME AND SET SAVE FLAG
	TRO	F,FSAVIN
IFN ADR,<
XCTOPT:	TTCALL	OUTSTR,EXECQ	;PRINT "EXEC?"?
	MOVEI	RPT,XCTOP1	;SET UP FOR REPEAT LINE
	PUSHJ	P,GTLINE	;GET REPLY
	PUSHJ	P,CHKABT	;ABORT KEY TYPED?
	JRST	XCTOP2		;YES
	PUSHJ	P,PARSE		;NO,PARSE REPLY
	JUMPE	D,CONDON	;IF NULL ATOM,DON'T EXECUTE
	PUSHJ	P,YESNOR	;IS ANSWER YES OR NO?
	JRST	CONDON		;NO,DON'T EXECUTE
	AOS	EXCFLG		;YES,THEN SET FLAG
>
	JRST	CONDON		;AND PROCESS IN SAME MANNER
;
;****NO MORE PLAYING WITH THE STACK FROM HERE ON.  ****
;
;SOME ERROR PATHS
;
SAVER1:	PUSHJ	P,CLNUP		;CLEAN STACK AND FLAGS
	JRST	ENDOPT		;TRY AGAI N
IFN ADR,<
XCTOP1:	PUSHJ	P,CLNUP		;CLEAN UP PARSE FLAGS AND STACK
	JRST	XCTOPT		;ASK AGAIN
XCTOP2:	SETZM	NEWSAV		;CLR ANY SAVE INFO
	JRST	OPTER1		;BACK TO OLD-NEW
>
;IS ANSWER TO OPTION YES OR NO.
;RETURN IF REPLY IN D IS NO
;INCREMENT AND RETURN IF YES
;
YESNOR:	CAME	D,[SIXBIT/NO/]	;IS IT NO?
	CAMN	D,[SIXBIT/N/]	;IS IT "N"?
	POPJ	P,
	CAME	D,[SIXBIT/YES/]	;IS IT "YES"?
	CAMN	D,[SIXBIT/Y/]	;OR "Y"?
	JRST	POPJP1
	JUMPE	D,CPOPJ		;IS IT NULL?
	ERCONT	<NOT A YES-NO REPLY>;NONE OF THESE
	JRST	@RPT
;
;TYPE OUT SIXBIT ATOM IN D
;
TTYSVN:	JUMPE	D,CPOPJ		;ANY CHARS LEFT?
	LSHC	C,6		;YES,GET NEXT CHAR
	ANDI	C,77		;CLEAN OFF JUNK
	JUMPE	C,TTYSVN	;NULL CHAR?
	ADDI	C,40		;NO,CONVERT TO SEVEN BIT
	TTCALL	OUTCHR,C	;TYPE IT
	JRST	TTYSVN		;NEXT CHAR
;
;ROUTINE INPUTS TTY LINE AND STORES IN CMDBUF.
;ASSUMES (CR) PASSED AS CHAR
;
GTLINE:	MOVE	T,[POINT 7,CMDBUF];READY BUFFER PTR
	TTCALL	INCHWL,C	;GET FIRST CHAR
GTLIN1:	IDPB	C,T		;SAVE
	TTCALL	INCHRS,C	;GET NEXT CHAR
	POPJ	P,		;NO MORE
	JRST	GTLIN1		;NEXT
;
;CLEAR AREA WHERE FILE-EXT,NAME, AND PPN ARE STORED
CLRSFL:	SETZM	SVFLNM
	SETZM	SVEXT
	SETZM	SVPPN
	POPJ	P,
;DELETE TMP FILE CURRENTLY OPEN
;
DELTMP:	SETZM	LEBLK		;CLEAR NEW NAME AREA TO FORCE DELETE
	RENAME	TMX,LEBLK	;DELETE
	ERROR	<DELETE FAILURE ON TMP FILE>
	POPJ	P,		;RETURN
;
;TYPE CARRIAGE-LINE FEED SEQUENCE
TYCRLF:	MOVEI	T2,015
	TTCALL	OUTCHR,T2
	MOVEI	T2,012
	TTCALL	OUTCHR,T2
	POPJ	P,
;
;CHECK TO SEE IF ABORT CHAR TYPED WITH RESPONSE
;
CHKABT:	MOVE	T,[POINT 7,CMDBUF]
	MOVEM	T,PCMD
CHKAB1:	PUSHJ	P,GETCHR	;GET CHR
	CAIE	C,015		;IS IT CR?
	JRST	CHKAB2		;NO,THEN NOT DONE
	XCT	CHKABT		;YES,THEN RESET PTR
	MOVEM	T,PCMD
	JRST	POPJP1		;RTN, NO ABT SEEN
CHKAB2:	CAIE	C,ABTCHR	;IS THIS ABORT CHAR
	JRST	CHKAB1		;NO EXAMINE NEXT CHAR
	POPJ	P,		;YES TAKE FIRST RETURN
;
;VARIOUS MESSAGES
;
OLDNEW:	ASCIZ	/OLD OR NEW? /
IFN ADR,<
EXECQ:	ASCIZ	/EXEC? /
>
HUH:	ASCIZ	/HUH?/
NOFILE: ASCIZ	/? NO FILE NAME/
SAVEE:	ASCIZ	/SAVE=/
VME:	ASCIZ	/VM=/
SIXNM:	SIXBIT	/SIXBIT/
;HERE WHEN @ FILE TO BE PROCESSED
;
PRSATF:	SKIPN	SVFLNM		;IS THERE A FILE NAME?
	ERR	NFILNM		;NO,ABORT
	OPEN	ATF,OPNBKA	;PREPARE HEADER FOR @FILE
	ERROR	<OPEN FAILURE ON @FILE>
	INBUF	ATF,1		;GET ONE BUFFER
	MOVE	T1,SVFLNM	;GET FILE NAME
	MOVEM	T1,LEBLK	;AND PUT IN LOOKUP BLOCK
	SKIPN	T1,SVEXT	;IS EXTENSION BLANK?
	MOVSI	T1,(SIXBIT/CMD/);YES, ASSUME CMD EXT.
	MOVEM	T1,LEBLK+1
	SETZM	LEBLK+2
	MOVE	T1,SVPPN
	MOVEM	T1,LEBLK+3
ATLOOK:	LOOKUP	ATF,LEBLK
	JRST	PRSATE		;ERROR
	SETZM	ATHD+2		;SET BYTE COUNT TO FORCE
	AOS	ATHD+2		;FIRST READ
	TLO	F,FINATP	;SET @FILE PROCESSING FLAG
	PUSHJ	P,ATATOM	;GET AN @FILE ATOM
	ERROR	<@FILE EMPTY>	;END OF FILE REACHED
	CAIE	T,CLEQL		;BREAK TYPE "="?
	ERROR	<VM= MISSING>	;NO,THEN CAN'T BE VM=
	PUSHJ	P,ATAT		;PROCESS ATOM
	PUSHJ	P,ATATOM	;GET NEXT ATOM (RIGHT HALF)
	ERROR	<VM= INCOMPLETE>;VM NAME MISSING
	PUSHJ	P,ATAT		;PROCESS NAME
;
;GET REST OF @FILE
NXATAT:	PUSHJ	P,ATATOM	;GET ATOM
	JRST	ATA2		;NO MORE ATOMS
	PUSHJ	P,ATAT		;PROCESS
	JRST	NXATAT		;NEXT ATOM
;
ATA2:	TLNE	F,FEQL		;LEFT ATOM IN WITH =?
	ERR	ILLAVL		;YES,ILLEGAL OPTION SPEC
	RELEASE	ATF,		;NO,THEN CLOSE AND RELEASE FILE AND CHANNEL
	JRST	CONDON		;DONE
;
;AN ERROR PATH
PRSATE:	HLRZ	T1,LEBLK+1	;GET EXTENSION TRIED.
	CAIE	T1,(SIXBIT/CMD/);IS IT DEFAULT "CMD"?
	ERROR	<@FILE NOT FOUND>;NO,THEN ALL PERMUTATIONS TRIED
	SETZM	LEBLK+1		;YES,THEN TRY A BLANK EXTENSION
	JRST	ATLOOK
;GET A BYTE FROM OPEN @FILE. NULL BYTES AND LF ARE IGNORED
;AS ARE LINE NUMBERS;BYTE RETURNED IN C
;
ATBYTE:	SOSG	ATHD+2		;DECREMENT CHAR COUNT
	JRST	ATBUF		;GET NEXT BUF
GETAT:	MOVE	T1,ATHD+1	;GET BYTE PTR
	TLNN	T1,770000	;ABOUT TO GET NEW WORD?
	JRST	NXTAT		;YES-IGNORE ANY LINE NUMBER
	IBP	ATHD+1		;NO,INCRMENT BYTE
ATOK:	LDB	C,ATHD+1	;GET ASCII BYTE
	JUMPE	C,ATBYTE	;IF NULL,IGNORE
	CAIE	C,012		;IF LF,IGNORE
	CAIN	C,014		;IF FF, IGNORE
	JRST	ATBYTE		;YES
	JRST	POPJP1
;
NXTAT:	IBP	ATHD+1		;SET PTR TO NEXT WD
	HRRZ	T1,ATHD+1	;CLEAR ALL BUT ADDRESS PORTION OF PTR
	MOVE	T,@T1		;GET ENTIRE WD FROM BUFFER
	TRNN	T,1		;IS IT A LINE NUMBER?
	JRST	ATOK		;NO,PROCESS NEXT BYTE
	MOVE	T,ATHD+2	;YES,IGNORE NEXT 5 BYTES
	SUBI	T,4
	MOVEM	T,ATHD+2	;RECALCULATE BYTE COUNT
	MOVE	T1,ATHD+1	;NOW GET BYTE POINTER TO END OF NUMBER
	TLZ	T1,770000
	MOVEM	T1,ATHD+1
	JRST	ATBYTE		;GET NEXT BYTE
;
ATBUF:	IN	ATF,
	JRST	GETAT		;BUFFER IN
	POPJ	P,		;END OF FILE
;GET @FILE ATOM
;
ATATOM:	TRO	F,FTXATM	;SET TXT FILE ATOM FLAG
	SETZM	ATMBLT		;CLEAR APACE FOR ATOM
	MOVE	D,[POINT 6,ATMBLT];PTR TO ATOM RESULT
ATATM1:	PUSHJ	P,ATBYTE	;GET A BYTE
	POPJ	P,		;END OF FILE
	PUSHJ	P,PRATOM	;BUILD UP ATOM
	JRST	ATATM1		;GET NEXT CHAR
	JUMPN	D,POPJP1	;ATOM NULL?
	ERR	ILLAVL		;YES,ILLEGAL AT FILE VALUE
;
;PROCESS @FILE ATOM
;
ATAT:	CAIE	T,CLEQL		;WAS BREAK TYPE "="?
	JRST	ATAT1		;NO,THEN BETTER BE CR
	TLOE	F,FEQL		;EQUAL SIGN SEN ALREADY?
	ERROR	<TOO MANY EQUAL SIGNS>
	PUSHJ	P,INTATM	;NO. IS THIS INTERNAL ATOM
	POPJ	P,		;YES,READY FOR REPLY
	PUSHJ	P,EXTATM	;NO,THEN BETTER BE EXTERNAL ATOM
	POPJ	P,		;YES
;
ATAT1:	CAIE	T,CLEOL		;BREAK CHAR END OF LINE?
	ERROR	<ILLEGAL CHAR >,C;NO,THEN ILLEGAL
	TLZE	F,FEQL		;HAS LEFT ATOM ALREADY BEEN ENTERED?
	JRST	@A		;YES, DO RT ATOM PROCESSING
IFN ADR,<
	PUSHJ	P,INTEXC	;IS THIS EXEC ATOM?
	POPJ	P,		;YES
>
	JRST	EXTATM		;NO,THEN BETTER RESOLVE AS SOME OTHER
				;EXTERNAL ATOM
;HERE TO RUN PREVIOUSLY SAVED CONFIGURATION FILE.
;NO ATTEMPT MADE TO LOOK UP FILE NAME
;
RUNOLD:	HRLZI	T,(SIXBIT/DSK/)	;SET UP RUN BLOCK
	MOVEM	T,RUNBLK
	MOVE	T,SVFLNM	;GET FILE NAME
	MOVEM	T,RUNBLK+1
	SETZM	RUNBLK+2
	SETZM	RUNBLK+3	;CLEAR EXTENSION .ETC.
	MOVE	T,SVPPN
	MOVEM	T,RUNBLK+4	;GET PPN
	SETZM	RUNBLK+5	;NO SPECIAL CORE ASSIGNENT

IFN ONLINE,<JSA 16,BILFRC>

IFN TYMSHR,<
	JSA	16,VALPRI	;OUTPUT FINAL BILLING RECORD
	ARG	0,FBR
	ARG	0,IPCODE
	ARG	5,BFNAME
>

IFN TIMLTD,<
	JSP 16,CHARGE	;WRITE FINAL BILL
	JUMP 0,2
	JUMP 0,[ASCII/MIM0/]
>

	MOVSI	T,ADRINC	;SET UP STARTING ADR INCREMENT
	HRRI	T,RUNBLK
	CALLI	T,RUN		;RUN SAVED FILE. NO ATTEMPT AT ERROR
				;PROCESSING-MONITOR MESSAGES SHOULD BE 
				;SUFFICIENT
	HALT	.
;
;MISCELLANEOUS CHARACTER STRINGS
;
IFE DIGITL,<
SIXSYS:	SIXBIT	/DSK:/	;EVERYONE EXCEPT DEC HAS MIMCOM.REL
			;AND MIMLIB.REL IN SPECIAL DIRECTORIES
			;AND NOT ON THE SYS:.
>
IFN DIGITL,<
SIXSYS:	SIXBIT	/SYS:/
>
IFN ONLINE,<
SIXLOA:	SIXBIT	/DECLDR/
>
IFE ONLINE,<
SIXLOA:	SIXBIT	/LOADER/
>

SIXDSK:	SIXBIT	/DSK:/
;HERE WHEN  CONFIGURING ALL DONE
;@FILE CLOSED. VM= LINE SCANNED.
;OR CONVERSATION DONE
;
CLSTMX:	CLOSE	TMX,		;CLOSE CURRENTLY OPEN TMP FILE
	STATZ	TMX,740000
	ERROR	<CLOSE FAILURE ON TMP FILE>
	POPJ	P,
;
CONDON:	TRNN	F,FSAVIN	;SEEN SAVE=?
	ERROR	<SAVE= MISSING>;NO, GIVE UP
	PUSHJ	P,CLSTMX	;CLOSE TEXT FILE
	PUSHJ	P,CLTMPC	;NOW CLEAR USER TMPCOR AREA
;
;NOW SET UP COMMAND STRINGS IN CORE BUFFER (CNFTXT).
;NO CHECK FOR END OF BUFFER SINCE SPARE BUFFERS AVAILABLE TO
;OVERFLOW INTO; UP TO 7 ASSEMBLIES(& LOADER TMPFILES)
;CAN BE HANDLED WITH THE CURRENT NAMING SCHEME
;
	MOVE	T1,[POINT 7,CMPTXT];POINTER TO COMPILE STRINGS
	MOVEM	T1,PCMD
	MOVE	TXT,[POINT 7,CNFTXT];POINTER TO COMMAND STRING
				;TO BE CREATED
	HRRZI	T,(SIXBIT/MC1/)	;SET UP TMP FILE NAME BASE
	MOVEM	T,TFLNAM	;STORE FOR INDEXING
MACSTR:	MOVE	D,TFLNAM	;SET UP MACRO TMP FILE NAME
	HLL	D,JOBNUM	;ADD JOB NUMBER
	HRLZI	OPT,(SIXBIT/TMP/);GET EXTENSION
	PUSHJ	P,CMPMAC	;NOW PUT OUT TO COMMAND STRING
				;AND FINISH REST OF IT.
	MOVE	T2,TFLNAM	;GET CURRENT TMP FILE NAME
	ANDI	T2,7		;SAVE ONLY IDENTIFYING DIGIT
	CAML	T2,LDTMPS	;IS FILE NUMBER EQUAL TO NUMBEROF
				;ASSEMBLIES TO BE DONE?
	JRST	LOACMD		;YES,THEN ALL COMPILE STRINS ARE DONE
	AOS	TFLNAM		;NO,THEN ICREMENT FILE NAME DIGIT
	JRST	MACSTR		;GET NEXT STRING
LOACMD:	MOVE	D,SIXLOA	;ADD CALL TO LOADER
	PUSHJ	P,SVNBUF
	MOVEI	C,"!"		;ADD EXCLAMATION
	IDPB	C,TXT
	PUSHJ	P,TCRLF		;ADD CRLF SEQUENCE
	HRLZI	T2,(SIXBIT/MAC/);PASS FILE NAME TO TMPCOR OR TMPFILE
	PUSHJ	P,FIXTMP	;ROUTINE
;NOW CREATE LOADER COMMAND
;
	MOVE	TXT,[POINT 7,CNFTXT]
	MOVE	D,SIXSYS	;START STRING WITH SYS:
	PUSHJ	P,SVNBUF
	MOVE	D,[MIMCOM]	;SET UP MIMIC COMMON LOW SEG NAME
	HRLZI	OPT,(SIXBIT/REL/);AND EXTENSION
	PUSHJ	P,NAMBUF	;PLACE NAME IN STRING
	PUSHJ	P,PPNBUF	;ADD PRJ#, PRG# STRING
IFE TYMSHR,
	MOVEI	C,","		;ADD COMMA
	IDPB	C,TXT
>
IFN TYMSHR,<	PUSHJ P,TCRLF	;EACH FILE ON A SEPARATE LINE>
	MOVE	D,SIXDSK	;NOW ADD DSK:
	PUSHJ	P,SVNBUF
	HRRZI	T,(SIXBIT/MC1/)	;SET UP BASE TMP FILE NAME
	MOVEM	T,TFLNAM	;STORE FOR NAME INDEXING
	PUSHJ	P,TMPLDR	;ADD FIRST TMP FILE TO LOADER STRING
	MOVE	D,SIXSYS	;ADD SYS: AGAIN
	PUSHJ	P,SVNBUF
	MOVE	D,SAVLIB	;GET VM REL LIB NAME
	HRLZI	OPT,(SIXBIT/REL/);AND EXTENSION
	PUSHJ	P,NAMBUF	;ADD TO STRING
	PUSHJ	P,PPNBUF	;ADD PRJ#, PRG# TO STRING
	MOVE	D,[SIXBIT "/L,/N"];ADD AND THEN DELETE LIBRARY SEARCH
	PUSHJ	P,SVNBUF
	PUSHJ	P,TCRLF
	MOVE	D,SIXDSK	;ADD DSK: AGAIN
	PUSHJ	P,SVNBUF
TMPTST:	MOVE	T2,TFLNAM	;GET CURRENT FILE NAME
	ANDI	T2,7		;SAVE ONLY IDENTIFYING DIGIT
	CAML	T2,LDTMPS	;HAVE ALL TMP FILES BEEN PROCESSED?
	JRST	LOAHGH		;YES
	AOS	TFLNAM		;NO,THEN INCREMENT FILE DIGIT
	PUSHJ	P,TMPLDR	;PROCESS NEXT TMP FILE
	JRST	TMPTST		;SEE IF DONE
;
TMPLDR:	MOVE	D,TFLNAM	;GET CURRENT TMP FILE NAME
	HLL	D,JOBNUM	;ADD JOB NUMBER
	HRLZI	OPT,(SIXBIT/TMP/);SET UP EXTENSION
	PUSHJ	P,NAMBUF	;ADD TO LOADER STRING
IFE TYMSHR,<
	MOVEI	C,","
	IDPB	C,TXT
>
IFN TYMSHR,<	PUSHJ P,TCRLF>
	POPJ	P,
;NOW COMPLETE THE LOAD STRING BY SUPPLYING THE HIGH SEGMMENT LIBRARY
;INFORMATION
;
LOAHGH:	MOVE	D,SIXSYS	;ADD SYS: AGAIN
	PUSHJ	P,SVNBUF
	MOVE	D,[MIMLIB]	;GET MIMIC HGH SEG LIBRARY NAME
	HRLZI	OPT,(SIXBIT/REL/);AND XTENSION
	PUSHJ	P,NAMBUF
	PUSHJ	P,PPNBUF	;ADD PRG#, PRG# OF LIBRARY
	MOVEI	C,175		;ADD ALT MODE
	IDPB	C,TXT
	HRLZI	T2,(SIXBIT/LOA/);PASS FILE NAME TO TMPCOR/TMPFIL ROUTINE
	PUSHJ	P,FIXTMP
;
;NOW SET UP TTY STRING FOR RON'S CLUDGE UUO(CALLI AC,-2---WHICH
;I GLADLY ACCEPT.  HERE GOES NOTHING SINCE THE WHOLE POINT
;IS TO DISAPPEAR FOR GOOD,LEAVING ALL APPROPRIATE MONITOR
;COMMANDS EITHER IN CUSP TMP FILES OR THIS COMMAND STRING
;
	MOVE	TXT,[POINT 7,CMDBUF];ESTABLISH PTR FOR ASCII STRING
	MOVE	D,[SIXBIT/SAVE@/];BUILD UP SAVE
	PUSHJ	P,SVNBUF
	MOVE	D,SIXDSK	;ADD "DSK:"
	PUSHJ	P,SVNBUF
	MOVE	D,NEWSAV	;NOW ADD USER SUPPLIED SAVE FILE NAME
	PUSHJ	P,SVNBUF
	PUSHJ	P,TCRLF
;DO WE ALSO WANT TO START THIS CONFIGURATION RUNNING?
IFN ADR,<
	SKIPN	EXCFLG		;EXECUTE FLAG SET?
>
	JRST	UUODON		;NO
IFN ADR,<			;IF USING COMSTK, FORCE START
	MOVE	D,[SIXBIT/START@/];YES,ADD START
	PUSHJ	P,SVNBUF
	HRRZI	D,SPECSA	;ADD SPECIAL MIMIC STARTING ADDRESS
	PUSHJ	P,OCTSVN	;CONVERT FROM OCTAL AND OUT
	PUSHJ	P,TCRLF
>
UUODON:	SETZ	C,		;ADD NULL CHARACTER
	IDPB	C,TXT		;FOR END OF STRING
	MOVEI	T,CMDBUF	;SET UP POINTER TO START OF
;
IFE ADR,<
	TTCALL	OUTSTR,PLSMSG
	TTCALL	OUTSTR,0(T)	;STRING,BUT ONLY PRINT COMMAND IF UUO
				;NOT IMPLEMENTED
>
IFN ADR,<
	CALLI	T,-2		;STRING AND...GO
>
;
;HERE WE ARE BACK FROM OUR TOUR THROUGH SOME SPECIAL UUO
;CODE.  NOW THERE'S NOTHING LEFT TO DO BUT: COMPILE(THAT IS,TO CONFIGURE),
;LOAD, AND SAVE.

BUILD:
IFN ISC,<
	MOVEI T,1000	;RE-ENABLE SAVING ONLY
	CALLI T,-13	;WHILE CONFIGURING.
	JFCL		;IN CASE NOT IMPLEMENTED.
>
IFN ONLINE,<
	HRLZI	T,(SIXBIT/DSK/)	;EXCEPT AT OLS,
>
IFE ONLINE,<
	HRLZI	T,(SIXBIT/SYS/)	;MACRO-10 IS ALWAYS ON THE SYS!
>
	MOVEM	T,RUNBLK	;SET UP RUN BLOCK
	MOVE	T,[SIXBIT/MACRO/]
	MOVEM	T,RUNBLK+1
	SETZM	RUNBLK+2	;CLEAR EXTENSION
	SETZM	RUNBLK+3
IFN ONLINE,<
	MOVE	T,[XWD 10,12]
	MOVEM	T,RUNBLK+4
>
IFE ONLINE,<
	SETZM	RUNBLK+4
>
	SETZM	RUNBLK+5
IFN TIMLTD,<
	JSP 16,CHARGE	;WRITE FINAL BILL
	JUMP 0,2
	JUMP 0,[ASCII/MIM0/]
>
IFN ONLINE,<JSA 16,BILFRC>
IFN TYMSHR,<
	JSA	16,VALPRI	;OUTPUT FINAL BILLING RECORD
	ARG	0,FBR
	ARG	0,IPCODE
	ARG	5,BFNAME
>
IFN DTALIN,<
	CALLI	T,DSLCAL	;RESET PROPRIETARY
				;BITS WITH NON ZERO
				;AC IN THE CALL
>
	HRLZI	T,1
	HRRI	T,RUNBLK	;ADD RUN BL ADDRESS
	CALLI	T,RUN		;RUN MACRO,ET. AL.
	HALT	.		;I DON'T WANT TO HEAR ABOUT IT.
;
IFE ADR,<
PLSMSG:	ASCIZ	/WHEN LOADER FINISHES, PLEASE TYPE:
/
>
;THIS ROUTINE OUTPUTS A SIXBIT ATOM IN D AS A 
;SEVEN BIT CHAR VIA BYTE POINTER IN TXT(NOT FILE POINTER)
;
SVNBUF:	JUMPE	D,CPOPJ		;ANY CHARS LEFT?
	LSHC	C,6		;YES,GET NEXT ONE
	ANDI	C,77		;CLEAN OFF GARBAGE
	JUMPE	C,SVNBUF	;NULL CHAR?
	CAIE	C,040		;IF @ SIGN,THEN TREAT AS SPACE
	ADDI	C,40		;NO CONVERT OT SEVEN BIT
	IDPB	C,TXT
	JRST	SVNBUF		;GET NEXT
;
TCRLF:	MOVEI	C,015
	IDPB	C,TXT
	MOVEI	C,012
	IDPB	C,TXT
	POPJ	P,
;
;OCTAL TO SEVEN BIT TO TXT BUFER CONVERTER; OCTAL NUMBER IN D
;LEADING ZEROES NOT PRINTED. ROUTINE DOES NOT PRINT ANYTHING IF
;D IS ZERO.
;
OCTSVN:	SETZ	T2,		;SET SIGNIF. CHARS IN FLAG OFF
	MOVEI	T1,14		;SET DIGIT COUNT
OCTLOP:	LSHC	C,3		;YES,GET NEXT
	ANDI	C,7		;STRIP OFF GARBAGE
	JUMPN	C,OCTSV1	;SIGNIFICANT CHAR?
	JUMPE	T2,OCTSV2	;NO,BUT IS SIGNIF. CHAR FLAG ON?
OCTSV1:	AOJ	T2,		;SET FLAG  ON
	ADDI	C,60		;CONVERT TO SEVEN BIT NUMBER
	IDPB	C,TXT		;STORE IN CORE  BUFFER
OCTSV2:	SOJG	T1,OCTLOP	;ALL CHARS PROCESSED?
	POPJ	P,		;YES
;
;
;WRITE OUT FILENAME-EXTENSION:NAME IN D,EXT. IN OPT
;
NAMBUF:	PUSHJ	P,SVNBUF	;OUTPUT FILE NAME IN D
	MOVEI	C,"."		;ADD PERIOD
	IDPB	C,TXT
	MOVE	D,OPT		;GET EXTENSION
	JRST	SVNBUF
;HERE TO CLEAR  USER TMPCOR AREA OF XXXMAC.TMP AND XXXLOA.TMP
CLTMPC:	HRLZI	T,(SIXBIT/MAC/)	;FILE NAME
	MOVEM	T,TMPBLK
	SETZM	TMPBLK+1
	MOVE	T,[XWD 2,TMPBLK];DELETE ANY MAC.TMP FILES FOR THIS
	CALLI	T,TMPCOR	;JOB
	JRST	.+1
	HRLZI	T,(SIXBIT/LOA/)
	MOVEM	T,TMPBLK
	SETZM	TMPBLK+1
	MOVE	T,[XWD 2,TMPBLK]
	CALLI	T,TMPCOR	;DELETE ANY LOA TMP FILES
	POPJ	P,
	POPJ	P,
;
;ROUTINE TAKES CONTENTS OF CNFTXT(DOWN TO CR) AND MAKES 
;EITHER A TMPCOR FILE OR A TMP FILE ON DSK.
;FILE NAME PASSED IN T2(3 CHARS)
FIXTMP:	MOVEI	C,000		;NULL CHARACTER FILLER
	TLNN	TXT,760000	;END OF WORD?
	JRST	.+3		;YES,THEN DONE
	IDPB	C,TXT		;NO,THEN DEPOSIT FILLER
	JRST	.-3		;AGAIN
	SETZ	T,		;GET TMPCOR AVAILABLE
IFN ONLINE,<
	CAIA			;TMPCOR DOESN'T WORK AT OLS
>
	CALLI	T,TMPCOR
	JRST	NOTCOR		;UUO NOT IMPLEMENTED
	HRRZ	T1,TXT		;GET CURRENT COMMAND POINTE
	SUBI	T1,CNFTXT-1	;CALCULATE LENGTH OF STRING
	CAMGE	T,T1		;ENOUGH ROOM IN TMPCOR?
	JRST	NOTCOR		;NO
	MOVN	T1,T1		;GET NEG. WD CNT
	HRLZ	T1,T1		;IN LEFT HALF
	HRRI	T1,CNFTXT-1	;ADD BUFFER ST. ADDRESS
	MOVEM	T1,TMPBLK+1	;PUT IN TMPCOR BLOCK
	MOVEM	T2,TMPBLK	;ADD FILE NAME
	MOVE	T,[XWD 3,TMPBLK];WRITE THIS TMP FILE
	CALLI	T,TMPCOR
	JRST	NOTCOR		;DIDN'T WORK;TRY TMP FILE
	POPJ	P,
;COME HERE IF TMPCOR NOT AVAILABLE
NOTCOR:	HLRZ	T2,T2		;RIGHT JUSTIFY TMP FILE NAME
	HLL	T2,JOBNUM	;ADD JOB NUMBER
	MOVEM	T2,LEBLK	;PUT IN LOOKUP BLK
	HRLZI	T,(SIXBIT/TMP/)
	MOVEM	T,LEBLK+1	;ADD EXTENSION
	SETZM	LEBLK+2
	SETZM	LEBLK+3
	ENTER	TMX,LEBLK	;REAY FOR OUTPUT
	ERROR	<ENTER FAILURE ON TMP FILE>
	HRRZ	T1,TXT		;SAVE CURRENT BUFFER POINTER
	MOVE	TXT,[POINT 7,CNFTXT];SET UP FOR TRANSFER
NTCOR1:	IBP	TXT		;INCREMENT POINTER
	HRRZ	T2,TXT		;GET ADDRESS ONLY
	CAMLE	T2,T1		;ARE WE DONE WITH STRING?
	JRST	CLSTMX		;YES, CLOSE TMP FILE
	LDB	C,TXT		;NO,GET NEXT CHAR
	PUSHJ	P,WRTBYT	;WRITE TO FILE
	JRST	NTCOR1		;BACK FOR ANOTHER
;CREATE A MACRO COMMAND STRING;OUTPUT FILE IN D AND EXTENSION IN OPT
;
CMPMAC:	PUSHJ	P,NAMBUF	;ADD REL TMP FILE NAME
	MOVE	D,SLASHP
	PUSHJ	P,SVNBUF
	MOVE	D,SLASHP
	PUSHJ	P,SVNBUF	;/P/P/P/P/P TO GET MORE MACRO SPACE
	MOVE	D,[SIXBIT/_DSK:/];ADD "_DSK:"
	PUSHJ	P,SVNBUF
	HRRZI	D,(SIXBIT/MIM/)	;GET TEXT TMP FILE NAME
	HLL	D,JOBNUM	;ADD JOB NUMBER
	HRLZI	OPT,(SIXBIT/TMP/);GET EXTENSION
	PUSHJ	P,NAMBUF	;ADD FILE TO STRING
	MOVEI	C,","		;ADD COMMA
	IDPB	C,TXT
	MOVE	D,SIXSYS	;ADD SYS:
	PUSHJ	P,SVNBUF
;
;NOW GET COMPILE STRING POINTED TO BY PCMD
CMPSTR:	ILDB	C,PCMD		;GET CHAR
	IDPB	C,TXT		;MOVE TO COMMAND STRING
	CAIE	C,015		;LAST CHAR IS CR?
	JRST	CMPSTR		;NO
	MOVEI	C,012		;ADD LF
	IDPB	C,TXT
	POPJ	P,
PPNBUF:
IFE DIGITL,<
	MOVSI	D,'['		;ADD LEFT BRACKET TO STRING
	PUSHJ	P,SVNBUF
	HLRZ	D,[SYSPPN]	;ADD PROJECT #
	PUSHJ	P,OCTSVN
	MOVSI	D,','		;FOLLOW IT WITH COMMA.
	PUSHJ	P,SVNBUF
	HRRZ	D,[SYSPPN]	;ADD PROGRAMMER #
	PUSHJ	P,OCTSVN
	MOVSI	D,']'		;CLOSE OFF STRING
	PUSHJ	P,SVNBUF
>
	POPJ	P,
;MOST ERROR MESSAGES
;
PARERR:	ASCIZ	/1/		;PARSER BUG
SPCERR:	ASCIZ	/ILLEGAL SPACE IN TEXT FILE/
ILLBRK:	ASCIZ	/ILLEGAL BRACKET/
NFILNM:	ASCIZ	/NO FILE NAME/
ILLPPN:	ASCIZ	/ILLEGAL PPN SYNTAX/
SPCER1:	ASCIZ	/ILLEGAL SPACE/
ILLATS:	ASCIZ	/ILLEGAL @ SIGN/
ILLPER:	ASCIZ	/ILLEGAL PERIOD/
ILLEXT:	ASCIZ	/NO EXTENSION ALLOWED/
ILLCMA:	ASCIZ	/ILLEGAL COMMA/
ILLEQL:	ASCIZ	/ILLEGAL EQUAL SIGN/
OPTOVR:	ASCIZ	/2/		;OPTLST BUFFER OVERFLOW
MVMFER:	ASCIZ	/3/		;ILLEGAL MVM FILE FORMAT
ILLATF:	ASCIZ	/ILLEGAL @FILE FORMAT/
ILLAVL:	ASCIZ	/NULL VALUE OR LINE IN @FILE/
CMPOVR:	ASCIZ	/4/		;CMPTXT BUFFER OVERFLOW
CNFOVR:	ASCIZ	/5/		;CNFTXT BUFFER OVERFLOW
INVVMN:	ASCIZ	/VM NAME INVALID/
TVMFER:	ASCIZ	/6/		;VM TEXT CONFIGUROR
SLASHP:	SIXBIT	'/P/P/P'
				;FILE FORMAT ERROR
;
;OPEN BLOCKS
;
OPNBKD:	Z			;ASCII MODE
	SIXBIT	/DSK/
	XWD	TMPHD,0
;
OPNBKA:	Z
	SIXBIT	/DSK/
	XWD	0,ATHD
;
OPNBKS:	Z
IFE DIGITL,<SIXBIT/DSK/>
IFN DIGITL,<SIXBIT/SYS/>
	XWD	0,TXTHD
	LIT
;IMPURE DATA AREA
;
IFN SHARE,<LOC 140>		;START DATA AREA AT ABSOLUTE
				;140 IN LOW SEG ONLY IF RE-ENTRANT.
				;OTHERWISE,IMPURE DATA FOLLOWS PURE CODE
DATBEG:
PSTACK:	BLOCK	PDLSIZ		;PUSH DOWN LIST
ATMBLT:	BLOCK	1		;BUILD WORD FOR ATOM
PCMD:	BLOCK	1		;COMMAND POINTER
OPNBRK:	BLOCK	1		;BRACKET OPEN FLAG  FOR PPN
INBROP:	BLOCK	1		;BRACKET FLAG FOR INTERNAL OPT.  VALUES
CMACNT:	BLOCK	1		;COMMA CNT
IFN ADR,<
EXCFLG:	BLOCK	1		;EXECUTE FLAG
>
SVFLNM:	BLOCK	1		;FILE NAME IN 6 BIT
VMNAME:	BLOCK 	1		;VM NAME
SVEXT:	BLOCK	1		;EXTENSION
SVPPN:	BLOCK	1		;USER SUPPLIED PPN
LSTCNF:	BLOCK	1		;LAST WD+1 USED IN CONFIGUROR INPUT BUF
JOBNUM:	BLOCK	1		;SIXBIT JOB NUM LEFT JUSTIFIED
SAVLIB:	BLOCK	1		;VM REL LIBRARY NAME
SVBYTT:	BLOCK	1		;SAVE BYTE PTR FOR VALUE LOOK AHEAD
SVBYTP:	BLOCK	1		;SAVE BYTE PTR IN CASE REPEAT LINE
NEWSAV:	BLOCK	1		;NAME OF SAVE FILE TO BE CREATED
SVOPTN:	BLOCK	1		;TMP STORAGE FOR OPTION NAME
LDTMPS:	BLOCK	1		;NUMBER OF TMP FILES LOADED OR ASSEMBLED
TFLNAM:	BLOCK	1		;CURRENT TMP FILE FOR MACRO OR LOADER STRING
TXTHD:	BLOCK	3
TMPHD:	BLOCK	3
ATHD:	BLOCK	3
LEBLK:	BLOCK	4
CMPTXT:	BLOCK	CMPSIZ		;STRING OF FLE NAMES TO BE COMPILED
ENDCMP:
CMDBUF:	BLOCK	CMDSIZ		;COMMAND BUFFER
CNFTXT:	BLOCK	CNFSIZ		;VM CONFIGUROR OPTIONS LIST STORED HERE
ENDCNF:
RUNBLK:	BLOCK	6		;RUN BLOCK AREA
TMPBLK:	BLOCK	2		;TMPCOR BLOCK
IFN ONLINE,<INTERN XYOLSZ
DATEND:	0
XYOLSZ:	REPEAT	^D30,<	Z>
XN1:	ASCII	/MIMIC/
XE1:	ASCII	/ADR/
XN2:	ASCII	/ROYAL/
XE2:	ASCII	/CHG/
XNCO2:	10
XNPR2:	13
XN3:	0
XE3:	0
XNCO3:	0
XNPR3:	0
XPCT1:	0.5			;SURCHARGE ON CP UNITS
XPCT2:	0			;SURCHARGE ON CONNECT
XMIN:	0			;MINIMUM CHARGE
>
IFN TYMSHR,<
DATEND:	0
IBR:	3
FBR:	4
CPBR:	1
IPCODE:	^D317
BFNAME:	ASCII	/BILIN/
>
;
IFE ONLINE+TYMSHR,<
DATEND:	0
>

	END	MIMBLD
L#l