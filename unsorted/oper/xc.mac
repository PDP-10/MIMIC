	SUBTTL LOGICAL DEVICE CONTROL SUBROUTINES
;THESE LINE ORIENTED SUBROUTINES ACCEPT A STANDARD
;ASCIZ STRING, IE, TERMINATED BY ZERO.
;OUTPUT:	$WRLIN	WRITE LINE TO LISTING FILE
;	$WRMAC	WRITE LINE TO MACRO EXPANSION FILE
;
;NOTE THAT $WRLIN AND $WRCHR CAN BE FREELY INTERMIXED, AS ALL
;PAGINATION IS HANDLED BY $WRCHR.

	INTERN $WRLIN,$WRMAC,$WRCHR

$WRLIN:	HRLI ARG,(POINT 7,)	;CONVERT BUFFER ADDRESS INTO A
	MOVEM ARG,TMPPTR	;BYTE POINTER AND SAVE.
WRLOOP:	ILDB ARG,TMPPTR	;GET NEXT CHARACTER.
	JUMPE ARG,CPOPJ	;IF END, EXIT.
	PUSHJ P,$WRCHR	;OTHERWISE, WRITE IT OUT.
	JRST WRLOOP	;CONTINUE.

$WRMAC:	HRLI ARG,(POINT 7,)	;AS ABOVE, NO NEED TO
	MOVEM ARG,TMPPTR	;REPEAT IT ALL.
MCLOOP:	ILDB ARG,TMPPTR
	JUMPE ARG,CPOPJ
	PUSHJ P,$WRITM
	JRST MCLOOP
;EXEC5, PAGE 2
;$WRCHR--- OUTPUT CHARACTER TO LISTING DEVICE, TAKING INTO ACCOUNT
;PAGINATION AND OTHER ESSOTERICA.  PHYSICAL I/O IS ACTUALLY DONE
;BY SUBROUTINE WRTASC.

$WRCHR:	TLNE F,QERROR	;ERRORS IN LINE?
	TLNE F,QPASS1+QNOERR	;YES, PASS 1 OR ERRORS SUPPRESSED?
	JRST PNOERM	;NO ERRORS, OR ERRORS OFF, JUMP.
	TLNE F,QTTY	;ERROR OK, BUT IS LISTING DEVICE TTY?
	TLNE F,QLSTOFF+QANLST	;YES.  NORMALLY NO ERRORS THEN,
	PUSHJ P,WRERR	;BUT IF LISTING OFF, DO OUTPUT ERROR.

PNOERM:
	TLNE F,QPASS1+QNOLST+QLSTOFF+QANLST	;IF LISTING OFF FOR
CPOPJ:	POPJ P,		;ANY REASON, EXIT.

	CAIN ARG,FFEED	;IS CHARACTER A FORM FEED?
	JRST SETFFF	;YES, SET FORM FEED FLAG.
	PUSH P,ARG	;NO, SAVE THE CHARACTER.
	SKIPG ,LINNUM	;LINE COUNTER EXHAUSTED?
	PUSHJ P,HEADER	;YES GO TO TOP OF PAGE AND DO HEADING.
	POP P,ARG	;RESTORE THE ARGUMENT.
	CAIE ARG,LNFEED	;IS CHARACTER END OF LINE?
	JRST WRTASC	;NO, GO OUTPUT IT.
	SOS LINNUM	;DECREMENT PAGE LINE COUNTER.
	TLNN F,QTTY	;OUTPUT TO TTY?
	JRST WRTASC	;NO, DO NORMAL OUTPUT.
	PUSHJ P,WRTASC	;YES, WRITE CHARACTER AND THEN
	JRST LSTDMP	;FORCE BUFFER OUTPUT.
			;THIS TAKES CARE OF PASS2 ANOMALIES
			;FOR THE SPECIAL CASE *,TTY:_TTY:

SETFFF:	SETOM LINNUM	;ON FORM FEED, SET EJECT FLAG.
	POPJ P,		;BUT DO NOT WRITE CHARACTER TO FILE.
;EXEC5, PAGE 3
;HEADER--- DO TOP OF PAGE PRINTOUT.
;IF LINNUM<0, THEN FORM FEED SEEN OR OTHER NEW PAGE REQUEST:
;	START NEW LOGICAL PAGE.
;IF LINNUM=0, THEN CURRENT PHYSICAL PAGE EXHAUSTED,
;	ADVANCE SUBPAGE COUNTER.

HEADER:	SKIPL LINNUM	;IS LINE COUNTER<0?
	JRST CONPAG	;NO, CONTINUE CURRENT LOGICAL PAGE.
NEWPAG:	CLEARM SUBPAG	;YES, SET SUB-PAGE COUNTER TO ZERO.
	AOSA PAGNUM	;ADVANCE LOGICAL PAGE NUMBER.
CONPAG:	AOS SUBPAG	;OTHERWISE, S[MPLY ADVANCE SUBPAGE.
	MOVEI ARG,LINMAX	;IN ANY CASE, RESET LINE COUNTER.
	MOVEM ARG,LINNUM

	MOVEI ARG,FFEED	;1) GO TO TOP OF PAGE BY OUTPUTTING A FORMFEED.
	PUSHJ P,WRTASC
	MOVEI ARG,$TITLE	;2) PRINT THE PROGRAM TITLE.
	PUSHJ P,WRTSVN
	PUSHJ P,WRTTAB	;AND TAB OVER.
	MOVEI ARG,$NAME	;3) PRINT THE ASSEMBLER NAME
	PUSHJ P,WRTSVN
	PUSHJ P,WRTSPC	;AND SUBNAME, SEPARATED BY A SPACE.
	MOVEI ARG,$VRSN
	PUSHJ P,WRTSVN
	PUSHJ P,WRTTAB	;AND TAB OVER.

	MOVE ARG,DAY	;4) PRINT THE DATE.  TO DO THIS,
	PUSHJ P,WRTDNL	;PRINT THE DAY AS A DECIMAL INTEGER.
	MOVE ARG,MONTH	;CONVERT THE MONTH NUMBER
	MOVE ARG,MONTHS(ARG)	;TO A SIXBIT STRING
	PUSHJ P,WRTSIX	;AND PRINT THAT.
	MOVE ARG,YEAR	;FINALLY, PRINT THE YEAR AS A DECIMAL
	PUSHJ P,WRTDTD	;INTEGER AND SPACE OVER.
	PUSHJ P,WRTSPC

	MOVE ARG,HOUR	;5) PRINT THE TIME.  TO DO THIS,
	PUSHJ P,WRTDNL	;PRINT THE HOUR AS A DECIMAL INTEGER,
	MOVEI ARG,":"	;THEN A COLON,
	PUSHJ P,WRTASC
	MOVE ARG,MINUTE	;FOLLOWED BY THE MINUTES.
	PUSHJ P,WRTDTD

	MOVEI ARG,[ASCIZ / PAGE /]	;6) PRINT THE
	PUSHJ P,WRTSVN	;WORD PAGE FOLLOWED BY THE PAGE NUMBER.
	MOVE ARG,PAGNUM
	PUSHJ P,WRTDNL
	SKIPN SUBPAG	;IS THERE ANY SUBPAGE?
	JRST NOSUBP	;NO.
	MOVEI ARG,"-"	;YES, PRINT A MINUS
	PUSHJ P,WRTASC	;FOLLOWED BY THE SUBPAGE NUMBER.
	MOVE ARG,SUBPAG
	PUSHJ P,WRTDNL
NOSUBP:	PUSHJ P,WRCRLF	;END OF FIRST LINE OF HEADING.
;EXEC5, PAGE 3
;HEADER, CONTINUED.

	SKIPN ARG,SRCBLK+FNAM	;PRINT THE NAME OF THE CURRENT FILE,
	JRST NONMHD	;UNLESS THE FILE NAME IS BLANK.
	PUSHJ P,WRTSIX	;INPUT FILE.
	SKIPN SRCBLK+FEXT	;IS THERE ANY EXTENSION?
	JRST PNOEXT	;NO.
	MOVEI ARG,"."	;YES, PRINT A PERIOD FOLLOWED BY THE
	PUSHJ P,WRTASC	;FILE EXTENSION.
	HLLZ ARG,SRCBLK+FEXT
	PUSHJ P,WRTSIX
PNOEXT:	PUSHJ P,WRTTAB	;TAB OVER.

NONMHD:	MOVEI ARG,$SUBTTL	;PRINT THE SUBTTL.
	PUSHJ P,WRTSVN
	MOVEI ARG,CRLFLF	;SPACE DOWN TWO LINES.
	PUSHJ P,WRTSVN
	POPJ P,	;EXIT.

MONTHS:	SIXBIT /-JAN-/
	SIXBIT /-FEB-/
	SIXBIT /-MAR-/
	SIXBIT /-APR-/
	SIXBIT /-MAY-/
	SIXBIT /-JUN-/
	SIXBIT /-JUL-/
	SIXBIT /-AUG-/
	SIXBIT /-SEP-/
	SIXBIT /-OCT-/
	SIXBIT /-NOV-/
	SIXBIT /-DEC-/
;EXEC5, PAGE 4
;TRIVIAL SUPPORTING SUBROUTINES FOR HEADER TYPER.
;WRTSIX--TYPE SIXBIT STRING
;WRTSVN--TYPE SEVEN BIT STRING.

WRCRLF:	MOVEI ARG,CRLFST
WRTSVN:	HRLI ARG,(POINT 7,)
	MOVEM ARG,LOCPTR
SVNLP:	ILDB ARG,LOCPTR
	JUMPE ARG,CPOPJ
	PUSHJ P,WRTASC
	JRST SVNLP

WRTSIX:	MOVEM ARG,LOCWRD
	CPY <[POINT 6,LOCWRD]>,LOCPTR
SIXLP:	ILDB ARG,LOCPTR
	JUMPE ARG,CPOPJ
	ADDI ARG,40
	PUSHJ P,WRTASC
	JRST SIXLP

WRERR:	CAIN ARG,FFEED	;IGNORE FORM FEEDS.
	POPJ P,
	MOVE PA1,SRCBLK+FNAM		;OUTPUT ERROR CHAR.... IS
	MOVE PA2,FILPAG	;CURRENT FILE PAGE SAME AS OLD ONE?
	CAME PA2,OLDPAG
	JRST .+3	;NO, DO IDENTIFICATION.
	CAMN PA1,OLDNAM	;CURRENT SRC FILE THE SAME AS THE LAST ONE
	JRST NOIDNT	;SEEN? YES, SKIP IDENTIFICATION.
	PUSH P,ARG	;NO, SAVE CHARACTER.
	MOVEM PA2,OLDPAG	;SAVE NEW PAGE AS OLD PAGE AND
	MOVEM PA1,OLDNAM	;SAVE NEW NAME AS OLD NAME.
	OUTSTR CRLFST	;SPACE DOWN ONE LINE.
	PUSHJ P,ERRSIX	;OUTPUT SIXBIT NAME.
	OUTSTR [ASCIZ / PAGE /]	;FOLLOWED BY PAGE NUMBER.
	MOVE ARG,FILPAG
	ADDI ARG,1	;FILPAG RUNS FROM 0 TO N-1.
	PUSHJ P,TTYDEC
	OUTSTR CRLFST	;GO TO NEW LINE.

	POP P,ARG	;RECOVER CHARACTER AND
NOIDNT:
TYPCHR:	TTCALL 1,ARG	;AND OUTPUT IT TO TTY.
	POPJ P,		;EXIT.
;EXEC5, PAGE 5
;DECIMAL OUTPUT SUBROUTINES:
;BTHDNL--- OUTPUT ARG AS DECIMAL INTEGER TO LIST FILE VIA
;	$WRCHR
;WRTDNL--- OUTPUT ARG VIA WRTASC
;TTYDEC---OUTPUT ARG VIA TELETYPE.

BTHDNL:	MOVEI PA1,$WRCHR	;SET UP $WRCHR AS OUTPUT ROUTINE
	JRST DECOUT

TTYDEC:	MOVEI PA1,TYPCHR	;SET UP TYPCHR AS
	JRST DECOUT	;OUTPUT ROUTINE

WRTDNL:	MOVEI PA1,WRTASC	;SET UP WRTASC AS OUTPUT ROUTINE
DECOUT:	MOVEM PA1,SUBCALL	;SAVE OUTPUT ROUTINE ADDRESS.

DECVT:	IDIVI ARG,^D10	;THIS PROCEDURE IS STOLEN FROM THE PDP-10
	HRLM ARG+1,(P)	;REFERENCE MANUAL, AND I REALLY AM
	JUMPE ARG,.+2	;RATHER HAZY ABOUT HOW IT WORKS.
	PUSHJ P,DECVT
DECVT1:	HLRZ ARG,(P)
	ADDI ARG,"0"
	JRST @SUBCALL

WRTDTD:	CAIL ARG,^D10	;THIS ROUTINE OUTPUTS AT LEAST TWO DIGITS.
	JRST WRTDNL	;IF THE ARGUMENT IS >10, FINE.
	PUSH P,ARG	;IF IT IS LESS THAN 10,
	MOVEI ARG,"0"	;IT OUTPUTS A LEADING ZERO
	PUSHJ P,WRTASC
	POP P,ARG	;BEFORE OUTPUTING THE DIGIT.
	ADDI ARG,"0"
	JRST WRTASC
	LIT
	RELOC 0
	SUBTTL LOW SEGMENT DATA AREAS
TCORE:			;ASSEMBLER VARIABLES
SWTARG:	BLOCK 1
SCNDEV:	BLOCK 1
SCNNAM:	BLOCK 1
SCNEXT:	BLOCK 1
SCNPJ:	BLOCK 1
MONTH:	BLOCK 1
DAY:	BLOCK 1
YEAR:	BLOCK 1
HOUR:	BLOCK 1
MINUTE:	BLOCK 1
SAVPTR:	BLOCK 1
LOCPTR:	BLOCK 1
COMPTR:	BLOCK 1
TMPPTR:	BLOCK 1
MANUAL:	BLOCK 1
LOCWRD:	BLOCK 1
COMBUF:	BLOCK ^D200	;COMMAND BUFFER, UNPACKED FORMAT
TCOREND:

LCORE:			;LISTING PACKAGE VARIABLES
LINNUM:	BLOCK 1
PAGNUM:	BLOCK 1
SUBPAG:	BLOCK 1
$SQNUM:	BLOCK 1
	BLOCK 1	;WORD OF ZEROES SO THAT $SQNUM CAN BE
		;TREATED AS ASCIZ STRING.
$CRFNO:	BLOCK 1
$ERCNT:	BLOCK 1
FILPAG:	BLOCK 1
OLDNAM:	BLOCK 1
OLDPAG:	BLOCK 1
LCOREND:

BCORE:	BLOCK NUMBUF*BUFSIZ	;SRC BUFFERS.
BCOREND:

SUBCALL:	BLOCK 1
STTIME:	BLOCK 1
STACK:	BLOCK STKMAX
CCLBUF:	BLOCK BUFSIZ	;CCL FILE BUFFER

	DEFINE BL(N1,N2,CH,MOD,IN,OU)
<	SIXBIT /DSK/
	SIXBIT /N1/
	SIXBIT /N2/
	BLOCK 4
	MOD
	SIXBIT /DSK/
IFN IN,<	XWD  0,CH'HDR>
IFN OU,<	XWD CH'HDR,0>
	Z CH,0
	BLOCK 3>

SRCBLK:	BL SOURCE,SRC,SRC,1,1,0
	SRCSWT
	ASCIZ /INPUT/

BINBLK:	BL BINARY,BIN,BIN,10,0,1
	BINSWT
	ASCIZ /BINARY/

LSTBLK:	BL LIST,LST,LST,1,0,1
	LSTSWT
	ASCIZ /LIST/

MACBLK:	BL MACRO,EXP,MAC,1,0,1
	[0]
	ASCIZ /MAC/

SYMBLK:	BL SYMBOL,SYM,SYM,10,0,1
	[0]
	ASCIZ /SYM/

CCLBLK:	SIXBIT /DSK/	;DEFAULT DEVICE, NAME, EXT
	SIXBIT /TEMP/
	SIXBIT /CMD/
	BLOCK 1		;CURRENT NAME
	SIXBIT /TMP/	;CURRENT EXTENSION
	BLOCK 2
	1		;MODE
	SIXBIT /DSK/	;DEVICE
	XWD 0,CCLHDR	;HEADER
	Z CCL,0		;CHANNE
	BLOCK 3
	[0]
	ASCIZ /CCL/

IFN ONLINE,<	INTERN XYOLSZ
XYOLSZ:	REPEAT ^D160,<	Z>
XN1:	ASCII /AEXEC/	;BILLING PARAMETERS
XE1:	ASCII /ADR/
XN2:	ASCII /ROYAL/
XE2:	ASCII /CHG/
XNCO2:	10
XNPR2:	13
XN3:	0
XE3:	0
XNCO3:	0
XNPR3:	0
XPCT1:	0.5	;SURCHARGE ON CP UNITS
XPCT2:	0	;SURCHARGE ON CONNECT
XMIN:	0	;MINIMUM CHARGE
>
;
IFN TIMLTD,<		;BILLING ROUTINE VARIABLES

DSKBUF:: BLOCK 16
ILIST::  BLOCK 2
OLIST::  BLOCK 2
FCTBLK:: BLOCK 2
FCTBUF:: BLOCK 200
FCTEND::

PDL::	 BLOCK 6
SAFE::	 BLOCK 10
>

IFN TYMSHR,<
;
	EXTERN VALPRI,IPCODE
BRI:	JSA 16,VALPRI	;WRITE INITIAL BILLING RECORD
	ARG 0,IBR
	ARG 0,IPCODE
	ARG 5,BFNAME
	POPJ P,
;
BRCP:	JSA 16,VALPRI	;WRITE CHECKPOINT BILLING RECORD
	ARG 0,CPBR
	ARG 0,IPCODE
	ARG 5,BFNAME
	POPJ P,
;
BRF:	JSA 16,VALPRI	;WRITE FINAL BILLING RECORD
	ARG 0,FBR
	ARG 0,IPCODE
	ARG 5,BFNAME
	POPJ P,
;
IBR:	3		;BILLING CODES
CPBR:	1
FBR:	4
BFNAME:	ASCII /BILIN/
>

	END START
