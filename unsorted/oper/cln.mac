	TWOSEG
	RELOC 400000
	TITLE EOASMB	ASSEMBLY POST-PROCESSOR
	SUBTTL OUTPUT SYMBOL TABLE AND CREF TABLE
;	R.M. SUPNIK, 9/8/71
;
;THIS PACKAGE CONSISTS OF ONE ROUTINE, EOASMB, WHICH MUST BE CALLED
;ONLY AFTER ALLY ASSEMBLY WORK IS CONCLUDED, SINCE EOASMB
;SCRAMBLES THE MAIN SYMBOL TABLE.  EOASMB, CALLED BY
;	PUSHJ P,EOASMB
;OUTPUTS THREE ITEMS:
;1) THE USER-SYMBOL TABLE, SORTED BY NAME
;2) THE USER-SYMBOL FILE, IN MIMIC-STANDARD FORM
;3) THE CROSS-REFERENCE TABLE
;
;THE USER MUST PROVIDE ONE ROUITNE, WRTFLG, WHICH IS USED IN THE SYMBOL
;TABLE PRINTOUT TO PRINT ASSEMBLER-DEPENDANT INFORMATION FOR EACH SYMBOL
;WRTFLG ISSCALLED AS FOLLOWS:
;	MOVE ARG,SYMBOLFLAGS
;	PUSHJ P,WRTFLG
;WRTFLG SHOULD OUTPUT UP TO THREE CHARACTERS (USING $WRCHR) TO THE
;LISTING FILE.  WRTFLG CAN USE AC'S 13-16 ONLY.
;
	EXTERN $SUBTTL,PRSYMB,SORT,NXTSYM,INITNX	;SYMBOL TABLE ROUTINES.
	ENTRY EOASMB
	EXTERN $WRITS,$WRCHR,$WRLIN,WRTFLG
	EXTERN WRTINT,WRTNOL,NRADIX,NBITS,LEADER

	DEFINE PRC(A)
<	MOVEI ARG,A
	PUSHJ P,$WRCHR>

	DEFINE WSIX(A)
<	MOVE AC,A
	PUSHJ P,PRSIX>
	F=0	;EXEC FLAGS

	P=17
	ARG=13	;ARGUMENT REGISTER
	AC=5
	AC1=6
	AC2=10
	CURB=7
	LSTB=4
	SMC=3
	SMP=2

	FFEED=14	;FORM FEED CHARACTER
	CRFSIZ=6	;NUMBER OF LINE #S IN A CREF BLOCK
	CRFLIN=^D14	;NUMBER OF LINE #S PRINTED PER OUTPUT LINE

	INTERN WRCRLF,PRSIX
	EXTERN VALUE
;EOASMB, PAGE 2
;THE MAIN ROUTINE IS QUITE SIMPLE:

EOASMB:	TLZ F,QLSTOFF+QANLST	;CLEAR ASSEMBLER LIST OFF FLAGS.
	PUSHJ P,SORT	;SORT THE SYMBOL TABLE.
	PUSHJ P,SYMFIL	;OUTPUT THE SYMBOL TABLE FILE.
	PUSHJ P,SYMOUT	;OUTPUT THE SYMBOL TABLE.
	TLNE F,QCREF	;IF /C OPTION IS ON,
	PUSHJ P,CRFOUT	;OUTPUT THE CREF TABLES.
	POPJ P,	;EXIT.

;YOU SEE, KIDS, ITS BOTH EASY AND FUN TO PROGRAM!  LET'S TAKE A CLOSER
;LOOK AT THE CREF OUTPUT PROBLEM.  ESSENTIALLY, WHAT WE WANT TO DO
;IS TO PRODUCE FOUR DIFFERENT CREF OUTPUTS:
;1) USER SYMBOLS
;2) LITERALS
;3) MACROS
;4) OPCODES AND PSEUDO-OPS (IF /I SWITCH IS ON)
;SO WE SIMPLY CALL THE SAME ROUTINE FOUR TIMES, EACH TIME PRINTING
;ONLY A CERTAIN CLASS OF SYMBOLS:

CRFOUT:	MOVEI ARG,CRMSG	;CHANGE SUB-TITLE TO "CROSS-REF DICTIONARY"
	PUSHJ P,SETSBT	;FOR LISTING.
	MOVEI ARG,QLBL+QEQV+QENT+QEXT+QUNV	;1) PRINT OUT CREF INFORMATION ON
	PUSHJ P,DOCRF	;LABELS AND USER SYMBOLS
	MOVEI ARG,QLIT	;2) PRINT CREF INFORMATION ON LITERALS
	PUSHJ P,DOCRF
	MOVEI ARG,QMAC	;3) NOW FOR MACROS.
	PUSHJ P,DOCRF
	TRNN F,QICRF	;IS THE /I SWITCH ON?
	POPJ P,	;NO, EXIT.
	MOVEI ARG,QINS+QDIR	;YES, CREF INSTRUCTIONS AND
	PUSHJ P,DOCRF	;PSEUDO-OPERATIONS.
	POPJ P,	;EXIT.

SETSBT:	MOVEI AC1,$SUBTTL	;COPY STRING POINTED TO BY ARGUMENT
SETSBL:	MOVE AC2,(ARG)	;INTO $SUBTTL BUFFER FOR HEADER.
	MOVEM AC2,(AC1)
	TRNN AC2,000377	;IS THE TAIL OF THE SEVEN-BIT STRING ZERO?
	POPJ P,	;YES, DONE, EXIT.
	ADDI ARG,1	;NO, GO COPY ANOTHER WORD.
	AOJA AC1,SETSBL

CRMSG:	ASCIZ /CROSS-REFERENCE DICTIONARY/
STMSG:	ASCIZ /SYMBOL TABLE/
;EOASMB, PAGE 3
;OUTPUT THE SUMBOL TABLE.  TO DO THIS, WE OUTPUT EACH SYMBOL, FIRST
;TO THE SYMBOL FIEL, THEN TO THE LINE PRINTER.
;
SYMOUT:	TLNE F,QNOSMT	;SYMBOL TABLE PRINT... SUPPRESSED?
	POPJ P,	;YES, EXIT.
	MOVEI ARG,STMSG	;CHANGE SUB-TITLE TO "SYMBOL TABLE"
	PUSHJ P,SETSBT	;FOR LISTING.
	PRC FFEED	;PRINTER:  GO TO TOP OF PAGE.
	PUSHJ P,INITNX	;INITIALIZE SYMBOL TABLE SEARCH MECHANISM.
	MOVEI SMC,1	;INITIALIZE SYMBOL COUNTER.

SYMLP:	PUSHJ P,NXTSYM	;GET NEXT SYMBOL.
	JUMPE ARG,CRLFDN	;NONE LEFT?  DONE.
	MOVE AC,SYMF(ARG)	;GET THE SYMBOL FLAGS.
	TLNE AC,QDIR+QINS+QLIT+QMAC	;DONT PRINT INSTRUCTIONS,
	JRST SYMLP	;LITERALS OR MACROES.
	MOVE SMP,ARG	;SAVE SYMBOL POINTER.
	TLNE F,QTTY	;IF LISTING DEVICE=TTY,
	JRST .+3	;USED COMPRESSED FORMAT.
	PRC "	"	;OTHERWISE, TAB OVER.
	WSIX SYMN(SMP)	;PRINT SYMBOL NAME,
	PRC "	"	;TAB OVER AGAIN,
	MOVE ARG,SYMV(SMP)
	PUSHJ P,PRSYMB	;PRINT SYMBOL VALUE,
	MOVE ARG,SYMF(SMP)	;GET FLAGS AND PRINT THEM TOO.
	PUSHJ P,WRTFLG
	PRC "	"	;TAB AGAIN.
	TRNN SMC,3	;HAVE WE PUT OUT 4 SYMBOLS ON THIS LINE?
	PUSHJ P,WRCRLF	;YES, GO TO NEW LINE.
	AOJA SMC,SYMLP	;GO TO NEXT SYMBOL.

WRCRLF:
CRLFDN:	MOVEI ARG,[ASCII /
/]
	PJRST $WRLIN	;WRITE CR-LF.

SYMFIL:	TRNE F,QNOSYM+QSYMOFF	;SYMBOLS OFF OR NEVER SPECIFIED?
	POPJ P,	;YES, EXIT.
	PUSHJ P,INITNX	;NO, INITIALIZE SYMBOL LOOP.
SYMFLP:	PUSHJ P,NXTSYM	;GET NEXT SYMBOL.
	JUMPE ARG,CPOPJ	;IF DONE, EXIT.
	MOVE AC,SYMF(ARG)	;GET SYMBOL FLAGS.
	TLNE AC,QLIT+QMAC+QDIR	;DONT OUTPUT LITERALS, MACROS, OR
	JRST SYMFLP	;PSEUDOS.
	MOVE SMP,ARG	;SAVE SYMBOL POINTER.
	MOVE ARG,SYMN(SMP)	;OUTPUT SYMBOL NAME.
	PUSHJ P,$WRITS
	MOVE ARG,SYMV(SMP)	;OUTPUT SYMBOL VALUE.
	PUSHJ P,$WRITS
	MOVE ARG,SYMF(SMP)	;OUTPUT FLAGS.
	PUSHJ P,$WRITS
	JRST SYMFLP	;GO ON TO NEXT SYMBOL.
;EOASMB, PAGE 4
;OUTPUT A CREF TABLE.  CALLED WITH A CREF MASK IN "ARG".
;
DOCRF:	MOVEM ARG,MASK	;SAVE MASK.
	PRC FFEED	;GO TO TOP OF PAGE.
	PUSHJ P,INITNX	;INITIALIZE SYMBOL TABLE GOODIES.

CREFLP:	PUSHJ P,NXTSYM	;GET NEXT SYMBOL.
	JUMPE ARG,CPOPJ	;IF NONE LEFT, EXIT.
	HLRZ AC,SYMF(ARG)	;GET FLAGS.
	TDNN AC,MASK	;ARE ANY SELECTED FLAGS ON?
	JRST CREFLP	;NO, GO TO NEXT SYMBOL>
	HRRZ LSTB,SYMC(ARG)	;GET ADDRESS OF FIRST AND LAST CREF
	HLRZ CURB,SYMC(ARG)	;BLOCKS FROM SYMBOL TABLE BLOCK.
	WSIX SYMN(ARG)	;WRITE OUT THE SYMBOL NAME.
	JUMPE CURB,DOCRLF	;IN NO CREF INO, THATS ALL, FOLKS.
	MOVEI SMC,CRFLIN+1	;INITIALIZE LINE COUNTER.
	MOVEI AC,^D10	;SET UP RADIX=10, LENGTH=6,
	MOVEM AC,NRADIX	;AND LEADING SPACES FOR CREF PRINTOUT.
	MOVEI AC,^D17
	MOVEM AC,NBITS
	MOVEI AC," "
	MOVEM AC,LEADER


TYPPCR:	CAMN CURB,LSTB	;IS CURRENT CREF BLOCK ALSO THE LAST?
	JRST LSTBLK	;YES, GO DO IT.
	MOVEI ARG,CRFSIZ	;NO, FORCE OUTPUT OF A FULL BLOCKS
	PUSHJ P,OUTBLK	;WORTH OF LINE NUMBERS.
	HRRZ CURB,0(CURB)	;ADVANCE TO NEXT BLOCK
	JRST TYPPCR	;AND CHECK FOR END OF LIST.

LSTBLK:	MOVE ARG,0(CURB)	;FOR LAST BLOCK, GET COUNT OF NUMBER
	PUSHJ P,OUTBLK	;OF ENTRIES AND GO OUTPUT THEM.
DOCRLF:	PUSHJ P,WRCRLF	;OUTPUT CR-LF AT THE END.
	JRST CREFLP	;GO DO NEXT SYMBOL.

;OUTBLK:  OUTPUT A CREF BLOCK.  THE NUMBER OF ENTRIES  TO BE OUTPUT
;IS IN ARG.  THE ADDRESS OF THE CURRENT BLOCK IS IN CURB.  FOR
;ALL YOU DOCUMENTATION FREAKS.  THE CREF TABLES ARE ORGANIZED
;AS FOLLOWS:
;
;SYMBOL TABLE ENTRY WORD "SYMC":
;LEFT HALF:  ADRESS OF FIRST CREFF BLOCK (0 IF NONE)
;RIGHT HALF: ADDRESS OF LAST CREF BLOCK
;
;CREF BLOCKS:
;WORD 0:  ADDR OF NEXT BLOCK (IF NOT LAST BLOCK)
;         BLOCK COUNT (IF LAST BLOCK)
;WORDS 1-CRFSIZ/2:  CREF ENTRIES
;        WHICH CONSIST OF 18 BIT LINE NUMBERS.  A HIGH ORDER
;       1 INDICATES A DEFINTION BLOCK.
;EOASMB, PAGE 5

OUTBLK:	HRRZI AC,1(CURB)	;FORM A BYTE POINTER POINTING AT
	HRLI AC,(POINT 18,)	;THE FIRST CREF#.
	MOVE AC1,ARG	;SAVE BLOCK COUNT.

NXTENT:	;GET NEXT
	ILDB ARG,AC	;LINE# FROM CREF BLOCK.
	TRZE ARG,400000	;IS HIGH ORDER BIT SET?
	JRST DDCREF	;YES, DEFINITION REFERENCE.
	PUSHJ P,PRCREF	;NO, PRINT LINE NUMBER FOLLOWEDY
	MOVEI ARG," "	;BY A SPACE.
PYXY:	PUSHJ P,$WRCHR
	SOJG AC1,NXTENT	;DONE WITH THIS BLOCK?  NO, GO BACK.
CPOPJ:	POPJ P,	;YES, EXIT.

DDCREF:	PUSHJ P,PRCREF	;DEFINITIONAL REFERENCE... LINE#
	MOVEI ARG,"#"	;IS FOLLOWED BY A #.
	JRST PYXY


PRCREF:	MOVEM ARG,VALUE	;PRINT LINE#... SAVE ARGUMENT.
	SOJG SMC,PRCRF1	;IF AT END OF LINE, GO TO NEW ONE.
	PUSHJ P,WRCRLF
	MOVEI SMC,CRFLIN	;AND RESET COUNTER.
PRCRF1:	PRC "	"	;IN ANY CASE, TAB OVER AND
	PJRST WRTINT	;GO PRINT INTEGER.

;
;PRSIX:  CALLED WITH 6 SIXBIT CHARACTERS IN "AC".

PRSIX:	CLEAR AC+1,	;CLEAR AC+1.
	JUMPE AC,CPOPJ	;IF EVERYTHING PRINTED, EXIT.
	ROTC AC,6	;OTHERWISE, GET NEXT CHARACTER.
	MOVEI ARG,40(AC+1)	;CONVERT CHAR TO 7 BIT AND PRINT.
	PUSHJ P,$WRCHR
	JRST PRSIX	;GO GET NEXT CHARACTER.
	LIT
	RELOC 0
MASK:	BLOCK 1	;VERY SMALL LOW SEEGMENT!
	END
