        TITLE COMMON FOR COBOL VERSION 3(43)    
        SUBTTL SUBROUTINES USED BY ALL PHASES IN COBOL          AL BLACKINGTON

        ENTRY   LSTMES          ;PUT AN ASCII STRING ONTO LISTING FILE
        ENTRY   DEVERA          ;DEVICE TRANSMISSION ERROR
        ENTRY   DEVDED          ;WRITE ERROR ON SCRATCH FILE
        ENTRY   EOTAPE          ;PUT OUT MAG-TAPE EOT MESSAGE
        ENTRY   SIXOUT          ;TYPE OUT A SIXBIT WORD
        ENTRY   LNKSET          ;CREATE A TABLE ADDRESS FROM TABLE-LINK
        ENTRY   GETFAZ          ;GET NEXT MACHINE LOAD OF INSTRUCTIONS
        ENTRY   RESTRT          ;RESTART COMPILATION (REENTER)
        ENTRY   REDO            ;RESTART COMPILATION (START)
        ENTRY   KILL            ;KILL COMPILATION, DUMP CORE AND FILES
        ENTRY   KILLF           ;KILL COMPILATION, DUMP FILES ONLY
        ENTRY   UUOCAL          ;UUO TRAP
        ENTRY   FILOUT          ;TYPE OUT DEV:FILE.EXT[P,P]
        ENTRY   ERATYP          ;TYPE OUT ENTER/LOOKUP FAIL MESSAGE

        EXTERNAL REGO, GETLOD, PUTLST, WARNW

;SET UP LOCATION 137 WITH VERSION NUMBER

        EDITER==2       ;LAST EDITED BY TYMSHARE
        MAJORV==3       ;MAJOR VERSION NUMBER
        MINORV==1       ;MINOR VERSION NUMBER
        EDITN==44       ;EDIT NUMBER

        LOC     137
        EXP <EDITER*1B2>+<MAJORV*1B11>+<MINORV*1B17>+EDITN
        RELOC   0

;PRINT ASCII TEXT

;ENTER WITH A BYTE POINTER TO THE TEXT STRING IN "TE".

        PUSHJ   PP,PUTLST
LSTMES: ILDB    CH,TE
        JUMPN   CH,LSTMES-1
        POPJ    PP,

;DEVICE TRANSMISSION ERROR
;THIS ROUTINE IS ENTERED WITH RH OF "CH" POINTING TO A TABLE
;       CONSISTING OF:
;               WORD1: DEVICE NAME IN SIXBIT
;               WORD2: FILE-NAME IN SIXBIT
;               WORD3: FILE-NAME EXTENSION IN LH, IN SIXBIT
;       LH OF CH CONTAINS GETSTS FLAGS WHEN DEVERA CALLED.

;A MESSAGE IS TYPED OUT
;DEVERA WAITS FOR THE OPERATOR TO TYPE "CONTINUE".
;WHEN HE DOES, THE ROUTINE RETURNS TO:
;               CALL+1 IF DEVICE IS MTA
;               CALL+2 IF DEVICE IS DSK OR DTA
;               CALL+3 IF DEVICE IS CDR OR LPT

;IF THE DEVICE IS NOT DTA,DSK,MTA,CDR OR LPT, THIS ROUTINE DOES
;       A CALL [SIXBIT /EXIT/]

;DEVDED ALWAYS CALLS [SIXBIT /EXIT/]


DEVERA: PUSH    PP,TE
        MOVE    TE,(CH)         ;IS IT MTA?
        CALLI   TE,$DEVCH
        TLNE    TE,$MTA
        TLNN    CH,$EOT         ;YES--END OF TAPE?
        JRST    .+3             ;NO

        POP     PP,TE           ;YES--RETURN
        POPJ    PP,

        POP     PP,TE

        PUSHJ   PP,DEVERB
        JRST    DEVERC

DEVDED: PUSHJ   PP,DEVERB
        JRST    DEVER2
;TYPE OUT ERROR MESSAGE

DEVERB: TTCALL  3,[ASCIZ "TRANSMISSION ERROR FOR "]

DVERB1: PUSH    PP,TA
        PUSH    PP,TE

        MOVE    TA,(CH)
        PUSHJ   PP,SIXOUT
        MOVEI   TD,":"
        TTCALL  1,TD

        SKIPE   TA,1(CH)
        PUSHJ   PP,SIXOUT

        HLLZ    TA,2(CH)
        JUMPE   TA,DVERB2
        MOVEI   TD,"."
        TTCALL  1,TD
        PUSHJ   PP,SIXOUT
DVERB2: POP     PP,TE
        POP     PP,TA

        TTCALL  3,[ASCIZ "
"]
        POPJ    PP,


;END OF MAG-TAPE

EOTAPE: TTCALL  3,[ASCIZ "MOUNT ANOTHER REEL ON "]
        JRST    DVERB1
;GET CHARACTERISTICS OF DEVICE

DEVERC: MOVE    CH,(CH)
        CALLI   CH,$DEVCH
        TLNN    CH,OKDEVS       ;IS IT POSSIBLE TO CONTINUE?
        JRST    DEVER2          ;NO

        TTCALL  3,[ASCIZ "TO RETRY, TYPE CONTINUE
"]
        CALLI   1,$EXIT

        TLNN    CH,$MTA         ;IS IT MAG-TAPE?
        JRST    DEVER1          ;YES--EXIT TO CALL+1
        TLNN    CH,$DSK!$DTA    ;NO--IS IT DISK OR DEC-TAPE?
        AOS     (PP)            ;NO--EXIT TO CALL+3
        AOS     (PP)            ;YES--EXIT TO CALL+2
DEVER1: POPJ    PP,

;CANNOT CONTINUE--EXIT

DEVER2: TTCALL  3,[ASCIZ "?CANNOT CONTINUE
"]
        JRST    RESTRT

OKDEVS=$MTA!$DTA!$LPT!$CDR!$DSK
ERATYP:        PUSHJ   PP,FILOUT       ;TYPE 'DEV:FILE.EXT[PROJ,PROG]'
        TTCALL  3,[ASCIZ "("]
        HRRZ    TA,I2
        PUSHJ   PP,OCTOUT

        MOVE    TA,ERAPTR
ERAT1:  HLRZ    TB,(TA)
        CAIE    TB,(I2)
        AOBJN   TA,ERAT1

        HRRZ    TA,(TA)
        TTCALL  3,(TA)
        TSWT    FDSKC;
        SWOFF   FECOM;
        JRST    RESTRT


ERAT2:  XWD     0,[ASCIZ ") NO FILE NAME"]
        XWD     1,[ASCIZ ") INCORRECT PROJ-PROG NO."]
        XWD     2,[ASCIZ ") PROTECTION FAILURE"]
        XWD     3,[ASCIZ ") FILE BEING MODIFIED"]
        XWD     6,[ASCIZ ") BAD UFD OR BAD RIB"]
        XWD     14,[ASCIZ ") NO ROOM, OR QUOTA EXCEEDED"]
        XWD     15,[ASCIZ ") WRITE LOCK"]
        XWD     16,[ASCIZ ") NOT ENOUGH TABLE SPACE IN MONITOR"]
        XWD     0,[ASCIZ ") UNKNOWN ERROR"]     ;SAFETY VALVE

ERAPTR: XWD     ERAT2-.+1,ERAT2
;TYPE OUT "DEV:FILE.EXT[PROJ,PROG]""

FILOUT: MOVE    TA,DEVDEV(DA)   ;TYPE OUT DEVICE NAME
        PUSHJ   PP,SIXOUT
        MOVEI   CH,":"
        TTCALL  1,CH


        SKIPE   TA,DEVFIL(DA)   ;ANY FILE NAME?
        PUSHJ   PP,SIXOUT       ;YES--TYPE IT OUT

        SKIPN   TA,DEVEXT(DA)   ;ANY EXTENSION?
        JRST    FILO1           ;NO
        MOVEI   CH,"."          ;YES--TYPE IT OUT
        TTCALL  1,CH

        PUSHJ   PP,SIXOUT

FILO1:  SKIPN   TA,DEVPP(DA)    ;ANY PROJ-PROG #?
        JRST    FILO2           ;NO
        MOVEI   CH,"["          ;YES--TYPE IT OUT
        TTCALL  1,CH

        HLRZ    TA,DEVPP(DA)
        PUSHJ   PP,OCTOUT
        MOVEI   CH,","
        TTCALL  1,CH

        HRRZ    TA,DEVPP(DA)
        PUSHJ   PP,OCTOUT
        MOVEI   CH,"]"
        TTCALL  1,CH


FILO2:  TTCALL  3,[ASCIZ "
"]

        POPJ    PP,


;TYPE OUT THE OCTAL NUMBER IN RH OF "TA"
OCTOUT: MOVE    TB,[POINT 3,TA,17]
        ILDB    CH,TB
        TLNE    TB,770000
        JUMPE   CH,.-2

OCTO1:  ADDI    CH,"0"
        TTCALL  1,CH

        TLNN    TB,770000
        POPJ    PP,
        ILDB    CH,TB
        JRST    OCTO1
;PUT OUT A SIXBIT WORD ONTO TTY

SIXOUT: MOVE    TE,[POINT 6,TA]
SIXO1:  ILDB    TD,TE
        JUMPE   TD,SIXEND
        ADDI    TD,40
        TTCALL  1,TD
        TLNE    TE,770000
        JRST    SIXO1
SIXEND: POPJ    PP,
;PUT MESSAGE ONTO THE LISTING

ENTRY DBMESS

DBMESS: MOVEI   CH,440700
        HRLM    CH,(PP)
        JRST    DBMES2

DBMES1: PUSHJ   PP,PUTLST
DBMES2: ILDB    CH,(PP)
        JUMPN   CH,DBMES1
        AOS     (PP)
        POPJ    PP,
;SET UP A TABLE ADDRESS

;ENTER WITH TABLE-LINK IN "TA"
;       BITS 18-20 = TABLE TYPE, BITS 21-35 = RELATIVE ADDRESS

;EXIT WITH ADDRESS IN "TA"

LNKSET: LDB     TE,[POINT 3,TA,20]
        ANDI    TA,77777
        JUMPE   TA,BADLNK
        ADD     TA,@LNKTAB(TE)

        MOVE    TE,LNKTAB(TE)
        HRRZ    TE,1(TE)
        CAIL    TE,-1(TA)
        POPJ    PP,


;IMPROPER LINK TYPE

BADLNK: TTCALL  3,[ASCIZ "BAD TABLE-LINK AT "]
        SOS     (PP)
        MOVE    TE,[POINT 3,(PP),17]
BADL1:  ILDB    CH,TE
        ADDI    CH,"0"
        TTCALL  1,CH
        TLNE    TE,770000
        JRST    BADL1
        TTCALL  3,[ASCIZ "
"]
        JRST    KILL


;TABLE OF ADDRESSES OF POINTERS

LNKTAB: EXP     FILLOC
        EXP     DATLOC
        EXP     CONLOC
        EXP     LITLOC
        EXP     PROLOC
        EXP     EXTLOC
        EXP     VALLOC
        EXP     MNELOC
;RESTART DUE TO "START" CONSOLE COMMAND

REDO:   MOVEI   SW,0

;RESTART DUE TO "REENTER" CONSOLE COMMAND

RESTRT: TSWF    FECOM;          ;ANY MORE COMMANDS?
        CALLI   $EXIT           ;NO--QUIT

        MOVEI   TA,REGO+2

        AND     SW,[EXP FDSKC]  ;TURN OFF ALL FLAGS EXCEPT FDSKC
        MOVE    TB,PHASEN       ;ARE WE IN FIRST MACHINE LOAD?
        CAIG    TB,MLOAD1
        JRST    (TA)            ;YES--NO NEED TO LOAD IT

        MOVE    TB,[SIXBIT "COBOL "]
        MOVEM   TB,GETFNM+1
        JRST    GETFZ1

GETFAZ: MOVEM   TA,GETFNM+1
        MOVEI   TA,REGO
GETFZ1: MOVEM   TA,GETFST

        JRST    GETLOD
;IF THIS ROUTINE IS ENTERED AT "KILL", THE FOLLOWING OCCURS:
;       1) AC'S SAVED
;       2) ALL DEVICES RELEASED
;       3) CORE DUMP OF THE IMPURE AREA TAKEN
;       4) ALL SCRATCH FILES DUMPED


;IF THIS ROUTINE IS ENTERED AT "KILLF", THE FOLLOWING OCCURS
;       1) ALL DEVICES RELEASED
;       2) ALL SCRATCH FILES DUMPED

KILL:   MOVEM   17,KILLAC+17    ;SAVE AC'S
        MOVEI   17,KILLAC
        BLT     17,KILLAC+16
        JSP     TB,SETUP
        MOVEI   TE,REGO
        JRST    KILLCALL

KILLF:  JSP     TB,SETUP
        MOVEI   TE,REGO+2


KILLCALL:
        MOVE    TB,[SIXBIT "COBOLK"]
        MOVEM   TB,GETFNM+1
        MOVEM   TE,GETFST
        JRST    GETLOD

SETUP:  SKIPE   TA,TOPLOC
        MOVEM   TA,JOBFF

        MOVSI   TA,71000        ;RELEASE ALL DEVICES
KILL1:  XCT     TA
        ADD     TA,[1B12]
        CAME    TA,[XWD 72000,0]
        JRST    KILL1

        MOVE    0,PHASEN        ;SAVE PHASE NUMBER FOR COBOLK
        JRST    (TB)
;HANDLE UUO TRAPS

UUOCAL: MOVEM   TE,KILLAC+1     ;SAVE TE
        LDB     TE,[POINT 9,JOBUUO,8]; GET OP-CODE OF UUO
        CAILE   TE,HIUUO        ;ONE WE RECOGNIZE?
        JRST    UUOC1           ;NO--ERROR

        PUSHJ   PP,@UUOTAB(TE)  ;YES--EXECUTE A ROUTINE
        MOVE    TE,KILLAC+1     ;RESTORE TE
        POPJ    PP,

UUOC1:  MOVEM   CH,KILLAC       ;SAVE CH
        TTCALL  3,[ASCIZ "ILLEGAL UUO AT LOCATION "]
        SOS     (PP)
        MOVE    TE,[POINT 3,(PP),17]

UUOC2:  ILDB    CH,TE
        ADDI    CH,"0"
        TTCALL  1,CH
        TLNE    TE,770000
        JRST    UUOC2

        TTCALL  3,[ASCIZ "
"]
        MOVE    TE,KILLAC+1
        MOVE    CH,KILLAC
        JRST    KILL

UUOTAB: EXP     UUOC1   ;0
        EXP     UUO1    ;1 - WARNING DIAG
        EXP     UUO2    ;2 - WARNING DIAG (POP OFF ONE RETURN)

HIUUO==.-UUOTAB-1       ;HIGHEST LEGAL UUO


UUO2:   POP     PP,DW           ;POP OFF ONE RETURN
        MOVEM   DW,(PP)

UUO1:   HRRZ    DW,JOBUUO
        JRST    WARNW
       $LF==12 ;LINE-FEED
        $CR==15 ;CARRIAGE-RETURN
        $EOF==32;END OF FILE

        EXTERNAL JOBFF,JOBUUO,KILLAC
        EXTERNAL DEVDEV,DEVFIL,DEVEXT,DEVPP
        EXTERNAL LITLOC,FILLOC,DATLOC,CONLOC,PROLOC,EXTLOC,MNELOC,VALLOC
        EXTERNAL GETFNM, PHASEN, GETFST, MLOAD1,TOPLOC


        END

